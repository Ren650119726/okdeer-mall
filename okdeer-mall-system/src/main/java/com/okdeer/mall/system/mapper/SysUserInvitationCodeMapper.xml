<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.okdeer.mall.system.mapper.SysUserInvitationCodeMapper" >
  <resultMap id="BaseResultMap" type="com.okdeer.mall.system.entity.SysUserInvitationCode" >
    <id column="id" property="id" javaType="string" jdbcType="VARCHAR" />
    <result column="sys_user_id" property="sysUserId" javaType="string" jdbcType="VARCHAR" />
    <result column="sys_buyer_user_id" property="sysBuyerUserId" javaType="string" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" javaType="com.okdeer.mall.system.enums.InvitationUserType" jdbcType="TINYINT"/>
    <result column="invitation_code" property="invitationCode" javaType="string" jdbcType="VARCHAR" />
   	<result column="invitation_user_num" property="invitationUserNum" javaType="integer" jdbcType="INTEGER" />
   	<result column="first_order_user_num" property="firstOrderUserNum" javaType="integer" jdbcType="INTEGER" />
   	<result column="create_time" property="createTime" javaType="date" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" javaType="date" jdbcType="TIMESTAMP" />
  </resultMap>
  
  
  <resultMap type="com.okdeer.mall.system.entity.SysUserInvitationCodeVo" 
        id="extResultMap" extends="BaseResultMap">
	<result column="user_name" property="userName" javaType="string" jdbcType="VARCHAR" /> 
	<result column="begin_time" property="beginTime" javaType="date" jdbcType="TIMESTAMP" />
	<result column="end_time" property="endTime" javaType="date" jdbcType="TIMESTAMP" />
  </resultMap>
  
  	<!-- 邀请码表名 start -->
	<sql id="tableBaseName">sys_user_invitation_code</sql>
	<!-- 邀请码表名 end -->

	<!-- 邀请码表名 start -->
	<sql id="tableName">sys_user_invitation_code suic</sql>
	<!-- 邀请码表名 end -->
	
	<!-- 系统用户表名 start -->
	<sql id="sysUser">sys_user suser</sql>
	<!-- 系统用户表名 end -->
	
	<!-- 系统用户表名 start -->
	<sql id="sysBuyerUser">sys_buyer_user buser</sql>
	<!-- 系统用户表名 end -->
	
	<!-- 基本的返回字段 start -->
	<sql id="resultBaseColumn">
		suic.id,suic.sys_user_id,suic.sys_buyer_user_id,suic.user_type,
		suic.invitation_code,suic.invitation_user_num,suic.first_order_user_num,
		suic.create_time,suic.update_time
	</sql>
	<!-- 基本的返回字段 end -->
	
	<!-- 扩展字段 start -->
	<sql id="extResultBaseColumn">
		CASE
		WHEN suic.user_type = 0 THEN suser.login_name
		WHEN suic.user_type = 1 THEN buser.login_name
		ELSE '' END as user_name,
	</sql>
	<!-- 扩展字段 end -->
  	
  		<!-- 根据各类id获取信息 start -->
	<sql id="findBy">
		select
		<include refid="resultBaseColumn" />
		from
		<include refid="tableName" />
	</sql>
	<!-- 根据各类id获取信息 end -->
	
  	<sql id="condition">
		<if test="null!=sysUserId and ''!=sysUserId">
				AND suic.sys_user_id=#{sysUserId}
		</if>
		<if test="null!=sysBuyerUserId and ''!= sysBuyerUserId">
				AND suic.sys_buyer_user_id=#{sysBuyerUserId}
		</if>
		<if test="null!=invitationCode and ''!= invitationCode">
				AND suic.invitation_code LIKE concat('%', #{invitationCode}, '%')
		</if>
		<if test="null!=userType">
				AND suic.user_type = #{userType,jdbcType=TINYINT}
		</if>
		<if test="null!= userName and ''!= userName">
				AND (suser.login_name LIKE concat('%', #{userName}, '%') or buser.login_name like concat('%',#{userName},'%'))
		</if>
		<if test="null != beginTime">
				<![CDATA[  and suic.create_time >= #{beginTime} ]]>
		</if>
		<if test="null != endTime">
				<![CDATA[  and suic.create_time <= #{endTime} ]]>
		</if>
	</sql>
	
	<!-- by:yangq 根据用户ID查询用户邀请码信息 -->
	<select id="selectInvitationById" resultMap="BaseResultMap" parameterType="string">
	  SELECT <include refid="resultBaseColumn"/> FROM sys_user_invitation_code where sys_buyer_user_id = #{sysBuyerUserId,jdbcType=VARCHAR} 
	</select>
	
	<!-- by:yangq 根据用户邀请码code查询用户邀请码信息 -->
	<select id="selectInvitationByCode" resultMap="BaseResultMap" parameterType="string">
	  SELECT id,sys_user_id,sys_buyer_user_id,user_type,invitation_code,invitation_user_num,first_order_user_num,
		create_time,update_time FROM sys_user_invitation_code WHERE invitation_code =#{invitationCode,jdbcType=VARCHAR}
	</select>
	
  	<!-- 根据参数获取信息 start -->
	<select id="findByQueryVo" resultMap="extResultMap" 
					parameterType="com.okdeer.mall.system.entity.SysUserInvitationCodeVo">
		select
		<include refid="extResultBaseColumn" />
		<include refid="resultBaseColumn" />
		from
		<include refid="tableName" />
		left join <include refid="sysUser"/> ON suic.sys_user_id=suser.id
		left join <include refid="sysBuyerUser"/> ON suic.sys_buyer_user_id=buser.id
		where suic.invitation_user_num > 0
		<if test="ids != null">
			AND suic.id  in 
		    <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">  
	            #{item}   
	        </foreach>
		</if>
	 	<if test="ids == null">
			<include refid="condition" />
		</if> 
		order by suic.invitation_user_num desc,suic.first_order_user_num desc,suic.create_time desc 
	</select>
	<!-- 根据参数获取信息 end -->
		
	<!-- 保存信息 start -->
	<insert id="saveCode"
		parameterType="com.okdeer.mall.system.entity.SysUserInvitationCode">
		insert into
		<include refid="tableBaseName" />
		(id,sys_user_id,sys_buyer_user_id,user_type,invitation_code,invitation_user_num,first_order_user_num,create_time,update_time)
		values
		<trim>
			(
			#{id,jdbcType=VARCHAR},
			#{sysUserId,jdbcType=VARCHAR},
			#{sysBuyerUserId,jdbcType=VARCHAR},
			#{userType,jdbcType=TINYINT},
			#{invitationCode,jdbcType=VARCHAR},
			#{invitationUserNum,jdbcType=INTEGER},
			#{firstOrderUserNum,jdbcType=INTEGER},
			#{createTime,jdbcType=TIMESTAMP},
			#{updateTime,jdbcType=TIMESTAMP}
			)
		</trim>
	</insert>
	<!-- 保存信息 end -->

	<!-- 更改信息 start -->
	<update id="updateCode"
		parameterType="com.okdeer.mall.system.entity.SysUserInvitationCode">
		update
		<include refid="tableBaseName" />
		set
		invitation_user_num = IFNULL(invitation_user_num,0) + 1,
		update_time=#{updateTime,jdbcType=TIMESTAMP}
		where
		id=#{id,jdbcType=VARCHAR}
	</update>
	<!-- 更改信息 end -->
	
	<!-- 根据用户Id查询邀请码信息 added by zhaoqc  -->
  	<select id="findInvitationCodeByUserId" resultMap="BaseResultMap">
  		select suic.id,suic.sys_user_id,suic.sys_buyer_user_id,suic.user_type,
			suic.invitation_code,suic.invitation_user_num,suic.first_order_user_num,
			suic.create_time,suic.update_time
		from sys_user_invitation_code suic 
		where 1=1
		<if test="userType == 0">
			and suic.sys_user_id = #{userId, jdbcType=VARCHAR}
		</if>
  		<if test="userType == 1">
  			and suic.sys_buyer_user_id = #{userId, jdbcType=VARCHAR}
  		</if>
  	</select>
  	<!--end added by zhaoqc  -->
  	
  	
  	<!-- 根据用户Id查询邀请码信息 added by tuzhiding 2016-10-4  -->
  	<select id="findInvitationByIdCode" resultMap="BaseResultMap">
  		SELECT s.id,s.sys_user_id,s.sys_buyer_user_id,s.user_type,
			s.invitation_code,s.invitation_user_num,s.first_order_user_num,
			s.create_time,s.update_time
		from sys_user_invitation_code s 
		where s.sys_user_id = #{userId, jdbcType=VARCHAR}
  			or s.sys_buyer_user_id = #{userId, jdbcType=VARCHAR}
  			or s.invitation_code = #{invitationCode, jdbcType=VARCHAR}
  	</select>
  	<!--end added by tuzhiding 2016-10-4 -->
  	
  	
  	<!-- 根据邀请码查询邀请码实体 added by zhaoqc -->
  	<select id="findInvitationCodeByCode" resultMap="BaseResultMap">
  		select suic.id,suic.sys_user_id,suic.sys_buyer_user_id,suic.user_type,
			suic.invitation_code,suic.invitation_user_num,suic.first_order_user_num,
			suic.create_time,suic.update_time
		from sys_user_invitation_code suic 
		where 1=1
		<if test="invitationCode != null">
			and suic.invitation_code = #{invitationCode, jdbcType=VARCHAR}
		</if>
  	</select>
  	<!-- End added by zhaoqc -->
  	
  	<!-- Bug:13700 根据邀请码修改下单人数 -->
  	<update id="updateFirstOrderNum" parameterType="map">
  		UPDATE sys_user_invitation_code 
  		SET first_order_user_num = IFNULL(first_order_user_num,0) + 1 ,
  			update_time = #{updateTime}
  		WHERE id = #{id}
  	</update>
  	
  	<select id="selectIdByOrderId" parameterType="string" resultType="string">
  		SELECT suic.id from trade_order tr LEFT JOIN 
		sys_user_invitation_code suic on suic.sys_buyer_user_id = tr.user_id
		where tr.id = #{orderId, jdbcType=VARCHAR}
  	</select>
</mapper>