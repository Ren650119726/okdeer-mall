<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.okdeer.mall.activity.coupons.mapper.ActivitySaleGoodsMapper">

	<resultMap type="com.okdeer.mall.activity.coupons.entity.ActivitySaleGoods" id="ActivitySaleGoods" >
		<result property="id" column="id" />
		<result property="storeSkuId" column="store_sku_id" />
		<result property="saleId" column="sale_id" />
		<result property="tradeMax" column="trade_max" />
		<result property="saleStock" column="sale_stock" />
		<result property="salePrice" column="sale_price" />
		<result property="sort" column="sort" />
		<result property="disabled" column="disabled" />
		<result property="createTime" column="create_time" />
		<result property="createUserId" column="create_user_id" />
		<result property="updateTime" column="update_time" />
		<result property="updateUserId" column="update_user_id" />
	</resultMap>

    <sql id="columns">
		id,store_sku_id,sale_id,trade_max,sale_stock,sale_price,sort,disabled,create_time,create_user_id,update_time,update_user_id
	</sql>

    <insert id="saveBatch" parameterType="list">
        insert into activity_sale_goods(
			<include refid="columns"/>
		)values
		<foreach collection="list" item="item" index="index" separator="," >
        (
            #{item.id},
            #{item.storeSkuId},
            #{item.saleId},
            #{item.tradeMax},
            #{item.saleStock},
            #{item.salePrice},
            #{item.sort},
            #{item.disabled},
            #{item.createTime},
            #{item.createUserId},
            #{item.updateTime},
            #{item.updateUserId}
        )
		</foreach>
	</insert>

    <delete id="deleteBySaleId" parameterType="string">
        delete from activity_sale_goods where sale_id = #{value} 
    </delete>
    
    <delete id="deleteById" parameterType="string">
        delete from activity_sale_goods where id = #{value} 
    </delete>

	<update id="updateById" parameterType="com.okdeer.mall.activity.coupons.entity.ActivitySaleGoods">
		update activity_sale_goods set		
		<if test="tradeMax != null">
			trade_max = #{tradeMax},
		</if>
		<if test="saleStock != null">
			sale_stock = #{saleStock},
		</if>
		<if test="sort != null">
			sort = #{sort},
		</if>
		<if test="disabled != null">
			disabled = #{disabled},
		</if>
		<if test="updateTime != null">
			update_time = #{updateTime},
		</if>
		<if test="updateUserId != null">
			update_user_id = #{updateUserId},
		</if>
		id = #{id}
		where id = #{id}
	</update>
    
    <select id="get" parameterType="string" resultMap="ActivitySaleGoods">
        select <include refid="columns"/> from activity_sale_goods where id = #{value} 
    </select>
    
    <select id="listBySaleId" parameterType="string" resultMap="ActivitySaleGoods">
    	select 
		s.*,
		gss.sku_id as goodsSkuId
		from activity_sale_goods s
		left join goods_store_sku gss on (s.store_sku_id = gss.id)
		where s.sale_id = #{value}
		order by s.sort desc
    </select>

<!-- 根据店铺商品的id和活动id去查询单个记录  addBy  zhulq -->
<select id="selectByObject" parameterType="com.okdeer.mall.activity.coupons.entity.ActivitySaleGoods" resultMap="ActivitySaleGoods">
     SELECT id, store_sku_id, sale_price, trade_max, sale_id, disabled 
     FROM activity_sale_goods WHERE 1=1
     <if test="disabled != null">
	      AND disabled = #{disabled}
     </if>
     <if test="storeSkuId != null">
	     AND store_sku_id = #{storeSkuId}
     </if>
     <if test="saleId != null">
	     AND sale_id = #{saleId}
     </if>
</select>

	<select id="selectActivitySaleByParams" parameterType="map" resultMap="ActivitySaleGoods">
	    SELECT * FROM activity_sale_goods WHERE store_sku_id = #{storeSkuId,jdbcType=VARCHAR} AND sale_id = #{saleId,jdbcType=VARCHAR}
	</select>

	<!-- 根据活动ID和店铺商品id查询活动商品信息 Begin added by maojj 2016-07-15 -->
	<select id="findActivityGoodsList" parameterType="map" resultMap="ActivitySaleGoods">
		SELECT <include refid="columns" />
		FROM activity_sale_goods
		WHERE sale_id = #{saleId}
		AND store_sku_id IN
		<foreach collection="storeSkuIds" item="item" separator="," open="(" close=")">
			#{item}
		</foreach>
	</select>
	<!-- End added by maojj 2016-07-15 -->
	
	<!-- added by mengsj begin 2017-01-03 -->
	<select id="findSaleGoodsByParams" parameterType="com.okdeer.mall.activity.dto.ActivitySaleGoodsParamDto" resultType="com.okdeer.mall.activity.coupons.entity.ActivitySaleGoodsBo">
		SELECT  sg.id,
				sg.store_sku_id storeSkuId,
				sg.sale_id saleId,
				sg.trade_max tradeMax,
				sg.sale_stock saleStock,
				sg.sale_price salePrice,
				sg.sort sort,
				sg.disabled disabled,
				sg.create_time createTime,
				sg.create_user_id createUserId,
				sg.update_time updateTime,
				sg.update_user_id updateUserId, 
				sku.name skuName,
				sku_pic.url picUrl,
				cat.name skuCategoryName,
				sku.bar_code as barCode,
				sku.online_price as onlinePrice,
				record.sale_num	saleNum			
		FROM activity_sale_goods sg
			LEFT JOIN goods_store_sku sku ON sg.store_sku_id = sku.id
			LEFT JOIN goods_store_sku_picture sku_pic ON (sku_pic.store_sku_id = sku.id AND sku_pic.type = 1)
			LEFT JOIN goods_store_spu spu ON spu.id = sku.store_spu_id
			LEFT JOIN goods_spu_category cat ON spu.spu_category_id = cat.id
			LEFT JOIN goods_store_sku_stock stock ON sku.id = stock.store_sku_id
			LEFT JOIN (select count(1) as sale_num,sale_goods_id,sale_id  from activity_sale_record rc GROUP BY sale_id,sale_goods_id) record ON (sg.sale_id = record.sale_id AND record.sale_goods_id = sg.id)
		WHERE sg.sale_id = #{param.activityId,jdbcType=VARCHAR} 
		<if test="param.skuName != null and param.skuName!=''">
			AND sku.name CONCAT('%', #{param.skuName,jdbcType=VARCHAR},'%')
		</if>
		<if test="param.skuCategoryName != null and param.skuCategoryName != ''">
			AND cat.name CONCAT('%', #{param.skuCategoryName,jdbcType=VARCHAR},'%')
		</if>
		<if test="param.barCode != null and param.barCode != ''">
			AND sku.bar_code CONCAT('%', #{param.barCode,jdbcType=VARCHAR},'%')
		</if>
		<if test="param.scareBuyStatus != null and param.scareBuyStatus != ''">
			AND sg.disabled = #{param.scareBuyStatus}
		</if>
	</select>
	<!-- added by mengsj end 2017-01-03 -->
	
	<!-- 根据活动ID和店铺商品id查询活动商品信息 Begin added by maojj 2016-12-31 -->
	<select id="findBySaleIdsAndSkuIds" parameterType="map" resultMap="ActivitySaleGoods">
		SELECT <include refid="columns" />
		FROM activity_sale_goods
		WHERE sale_id IN
		<foreach collection="saleIds" item="item" separator="," open="(" close=")">
			#{item}
		</foreach>
		AND store_sku_id IN
		<foreach collection="storeSkuIds" item="item" separator="," open="(" close=")">
			#{item}
		</foreach>
	</select>
	<!-- End added by maojj 2016-12-31 -->
</mapper>
