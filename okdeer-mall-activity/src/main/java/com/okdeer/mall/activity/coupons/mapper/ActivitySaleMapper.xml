<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.okdeer.mall.activity.coupons.mapper.ActivitySaleMapper">

 	<resultMap type="com.okdeer.mall.activity.coupons.entity.ActivitySale" id="ActivitySale" > 
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="status" column="status" />
		<result property="storeId" column="store_id" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="limit" column="limit" />
		<result property="createTime" column="create_time" />
		<result property="createUserId" column="create_user_id" />
		<result property="updateTime" column="update_time" />
		<result property="updateUserId" column="update_user_id" />
		<result property="disabled" column="disabled" />
	</resultMap>

    <sql id="columns">
		id,name,status,store_id,start_time,end_time,`limit`,create_time,create_user_id,update_time,update_user_id,disabled
	</sql>

    <select id="list" parameterType="map" resultMap="ActivitySale">
		select <include refid="columns"/>
		,(select count(*) from activity_sale_goods asg where asg.sale_id = s.id) as activitySaleGoodsCount 
		from activity_sale s
		where disabled = 0 and s.create_user_id = #{createUserId}
		<if test="saleName != null and saleName != ''">
			and name like concat('%',#{saleName},'%' )
		</if>
		<if test="createStartTime != null and createStartTime != ''">
			and create_time &gt;= #{createStartTime}
		</if>
		<if test="createEndTime != null and createEndTime != ''">
			and create_time &lt;= #{createEndTime}
		</if>
		
		
		<if test="startStartTime != null and startStartTime != '' ">
			and start_time &gt;= #{startStartTime}
		</if>
		<if test="startEndTime != null and startEndTime != ''">
			and start_time &lt;= #{startEndTime}
		</if>
		
		<if test="endStartTime != null and endStartTime != ''">
			and end_time &gt;= #{endStartTime}
		</if>
		<if test="endEndTime != null and endEndTime != ''">
			and end_time &lt;= #{endEndTime}
		</if>
		
		<if test="status != null and status != ''">
			and status = #{status}
		</if>
		order by create_time desc
	</select>
	
    <select id="listGoodsStoreSku" parameterType="map" resultType="map">
	select 		
				s.id,
				s.name,
				s.properties_indb as propertiesIndb,
				s.bar_code as barCode,
				s.style_code as styleCode,
				s.offline_price as offlinePrice,
				s.online_price as onlinePrice,
				s.create_time as createTime,
				s.sku_id as skuId,
				s.sale_num as saleNum,
				d.`name` AS categoryName,
				p.url as url,
				f.sellable,
				f.actual,
				f.locked
				<!-- 如果特惠活动主键不为空,需要关联特惠活动商品表,把限购数量,库存,价格等关联出来 -->
				<if test="id != null and id != ''">
					,
					asg.trade_max as tradeMax,
					asg.sale_stock as saleStock,
					asg.sale_price as salePrice,
					asg.sort as sort,
					asg.id as activitySaleGoodsId
				</if>
				
		from goods_store_sku s
		left JOIN goods_store_spu spu on s.store_spu_id = spu.id
		LEFT JOIN goods_spu_category d ON spu.spu_category_id = d.`id` 
		LEFT JOIN goods_spu_category_spu_type e ON d.`id` = e.`spu_category_id` 
		LEFT JOIN goods_store_sku_stock f ON s.`id` = f.`store_sku_id`
		LEFT JOIN goods_store_sku_picture p ON (p.`store_sku_id` = f.`store_sku_id` AND p.`type` = '1')
		LEFT JOIN goods_store_sku_plu plu on plu.store_sku_id = s.id
		
		<if test="id != null and id != ''">
			left join activity_sale_goods asg  on ( asg.sale_id = #{id} and asg.store_sku_id = s.id) 
		</if>
		
		where s.disabled = 0 
		and s.status = 1
		and s.violation = 0
<!-- 	李建伟增加的需求,	只查计件的商品 -->
		and (plu.type = 1 or plu.type is null)
		<!-- 	王凡增加的需求,	没有主图的过滤掉 -->
		and p.url is not null 
		<!-- storeId等于登陆人的 -->
		and s.store_id = #{storeId}
		and s.import_type = 0
		 
		<!-- 要筛选出未绑定活动的,如果是修改的话,自己所属的商品ids也要筛选出来 -->
		<if test="isActivity != null and isActivity != ''">
		and ( s.is_activity = #{isActivity}
			<if test="editGoodsIds != null and editGoodsIds != ''">
				or s.id in 
				<foreach item="item" index="index" collection="editGoodsIds" open="(" separator="," close=")">  
		  			#{item}  
		 		</foreach>  
			</if>
		)
		</if>
		
		<!-- 可销售库存大于0,才出现商品供选择  如果是修改的话,自己所属的商品ids也要筛选出来-->
		<if test="sellable != null">
		and ( f.sellable &gt; 0
			<if test="editGoodsIds != null and editGoodsIds != ''">
				or s.id in 
				<foreach item="item" index="index" collection="editGoodsIds" open="(" separator="," close=")">  
		  			#{item}  
		 		</foreach>  
			</if>
		)
		</if>
		
		<if test="goodsName != null and goodsName != ''">
			and s.name like concat('%',#{goodsName},'%' )
		</if>
		<if test="categoryName != null and categoryName != ''">
			and d.`name` like concat('%',#{categoryName},'%' )
		</if>
		<if test="barCode != null and barCode != ''">
			and s.bar_code like concat('%',#{barCode},'%' )
		</if>
		<if test="online != null and online != ''">
			and s.online = #{online}
		</if>
		<if test="goodsIds != null and goodsIds.length != 0">
			and s.id in 
			<foreach item="item" index="index" collection="goodsIds" open="(" separator="," close=")">  
	  			#{item}  
	 		</foreach>  
		</if>
		
		order by 
		<if test="id != null and id != ''">
			asg.sort asc,
		</if>
		s.create_time desc
	</select>

    <insert id="save" parameterType="com.okdeer.mall.activity.coupons.entity.ActivitySale">
        insert into activity_sale(
			<include refid="columns"/>
		)values(
            #{id},
            #{name},
            #{status},
            #{storeId},
            #{startTime},
            #{endTime},
            #{limit},
            #{createTime},
            #{createUserId},
            #{updateTime},
            #{updateUserId},
            #{disabled}
        )
	</insert>

    <update id="update" parameterType="com.okdeer.mall.activity.coupons.entity.ActivitySale">
        update activity_sale set
			<if test="name != null">
				name = #{name},
			</if>
			<if test="status != status">
				status = #{status},
			</if>
			<if test="storeId != null">
				store_id = #{storeId},
			</if>
			<if test="startTime != null">
				start_time = #{startTime},
			</if>
			<if test="endTime != null">
				end_time = #{endTime},
			</if>
			<if test="limit != null">
				`limit` = #{limit},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			<if test="updateUserId != null">
				update_user_id = #{updateUserId},
			</if>
			<if test="disabled != null">
				disabled = #{disabled},
			</if>
        id = #{id}
        where id = #{id}
    </update>

    <select id="get" resultMap="ActivitySale" parameterType="string">
        select <include refid="columns"/> from activity_sale where id = #{value} and disabled = 0 
    </select>
    
    <select id="getAcSaleStatus" resultMap="ActivitySale" parameterType="string">
        select <include refid="columns"/> from activity_sale where id = #{value} and disabled = 0
    </select>
    
    <select id="validateExist" parameterType="map" resultType="int">
    	select count(*) from activity_sale s
    	where s.disabled = 0 
    	and s.create_user_id = #{createUserId}
    	<!-- 未开始0,进行中1的才算存在-->
    	and (s.status = 0 or s.status = 1)
		AND 
		(
			#{startTime} BETWEEN s.start_time and s.end_time 
       		OR 
       		#{endTime} BETWEEN s.start_time and s.end_time 
       		OR 
       		(start_time &gt;= #{startTime} and end_time &lt;= #{endTime})
       	)
    	<if test="id != null and id != ''">
    		and s.id != #{id}
    	</if>
    </select>

     <update id="updateBatchStatus" parameterType="map">
    	update activity_sale set status = #{status} where id in 
		<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
  			#{item}  
 		</foreach>  
    </update>
    
    <select id="listByTask" parameterType="map" resultMap="ActivitySale">
    	select s.* from activity_sale s where 
		(s.`status` = 0 and  s.start_time &lt;= NOW())
		OR
		(s.`status` = 1 and  s.end_time &lt;= NOW());
    </select>

	<select id="selectActivitySale" parameterType="string" resultType="int">
	   SELECT sa.limit FROM activity_sale sa WHERE sa.`id`=#{storeId,jdbcType=VARCHAR}
	</select>
	
	<select id="selectActivitySaleCount" parameterType="string" resultType="int">
	   SELECT COUNT(1) FROM activity_sale sa WHERE sa.`id`=#{id,jdbcType=VARCHAR}
	</select>
	
	<select id="selectActivitySaleList" parameterType="string" resultType="string">
		SELECT ag.store_sku_id FROM activity_sale sa LEFT JOIN activity_sale_goods ag ON sa.`id`=ag.sale_id WHERE sa.`id`=#{id,jdbcType=VARCHAR}
	</select>
	
	
	<select id="selectById" resultMap="ActivitySale" parameterType="string">
        select <include refid="columns"/> from activity_sale where id = #{id} and disabled = 0 and status = 1
    </select>
    
    <select id="listByStoreId" parameterType="map" resultMap="ActivitySale">
    	select <include refid="columns"/> from activity_sale s where 1 = 1 
		<if test="storeId != null and storeId != ''">
    		and store_id = #{storeId}
    	</if>
    	and status = 1
    </select>

</mapper>
