<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.okdeer.mall.activity.coupons.mapper.ActivityCouponsRecordMapper" >
  <resultMap id="BaseResultMap" type="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecord" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="collect_type" property="collectType" javaType="com.okdeer.mall.activity.coupons.enums.ActivityCouponsType" jdbcType="TINYINT" />
    <result column="coupons_id" property="couponsId" jdbcType="VARCHAR" />
    <result column="coupons_collect_id" property="couponsCollectId" jdbcType="VARCHAR" />
    <result column="collect_time" property="collectTime" jdbcType="TIMESTAMP" />
    <result column="collect_user_id" property="collectUserId" jdbcType="VARCHAR" />
    <result column="valid_time" property="validTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" javaType="com.okdeer.mall.activity.coupons.enums.ActivityCouponsRecordStatusEnum" jdbcType="TINYINT" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="room_id" property="roomId" jdbcType="VARCHAR" />   
    <result column="thrid_code" property="thridCode" jdbcType="VARCHAR" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="rec_date" property="recDate" jdbcType="VARCHAR" />
    <result column="effect_time" property="effectTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
   <resultMap id="VoResultMap" type="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecordVo" extends="BaseResultMap">
    <result column="face_value" property="faceValue" javaType="integer" jdbcType="INTEGER" />
    <result property="belongType" column="belong_type" javaType="string" jdbcType="VARCHAR"/> 
    <result property="createUserId" column="create_user_id" javaType="string" jdbcType="VARCHAR"/>    
  </resultMap>
  <sql id="Base_Column_List" >
    id, collect_type, coupons_id, coupons_collect_id, collect_time, collect_user_id, 
    valid_time, status, order_id, room_id,thrid_code, device_id, rec_date, effect_time
  </sql>
  <sql id="condition" >
    <if test="null!=params" >
      <if test="null!=params.orderId and ''!=params.orderId" >
        AND order_id = #{params.orderId,jdbcType=VARCHAR}
      </if>
      <if test="null != params.couponsId and '' != params.couponsId" >
        AND coupons_id = #{params.couponsId,jdbcType=VARCHAR}
      </if>
      <if test="null != params.userId and '' != params.userId" >
        AND collect_user_id = #{params.userId,jdbcType=VARCHAR}
      </if>
    </if>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from activity_coupons_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByParams" resultMap="BaseResultMap" parameterType="map" >
    SELECT 
    <include refid="Base_Column_List" />
     FROM activity_coupons_record WHERE 1=1 
    <include refid="condition" />
    ORDER BY collect_time DESC
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    DELETE FROM activity_coupons_record
    WHERE id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecord" >
    insert into activity_coupons_record (id, collect_type, coupons_id, 
      coupons_collect_id, collect_time, collect_user_id, 
      valid_time, status, order_id, 
      room_id, device_id, rec_date, effect_time)
    values (#{id,jdbcType=VARCHAR}, #{collectType,jdbcType=TINYINT}, #{couponsId,jdbcType=VARCHAR}, 
      #{couponsCollectId,jdbcType=VARCHAR}, #{collectTime,jdbcType=TIMESTAMP}, #{collectUserId,jdbcType=VARCHAR}, 
      #{validTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{orderId,jdbcType=VARCHAR}, 
      #{roomId,jdbcType=VARCHAR}, #{deviceId,jdbcType=VARCHAR},#{recDate,jdbcType=VARCHAR},#{effectTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecord" >
    insert into activity_coupons_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="collectType != null" >
        collect_type,
      </if>
      <if test="couponsId != null" >
        coupons_id,
      </if>
      <if test="couponsCollectId != null" >
        coupons_collect_id,
      </if>
      <if test="collectTime != null" >
        collect_time,
      </if>
      <if test="collectUserId != null" >
        collect_user_id,
      </if>
      <if test="validTime != null" >
        valid_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="thridCode != null" >
        thrid_code,
      </if>
      <if test="deviceId != null" >
          device_id,
      </if>
      <if test="recDate != null" >
          rec_date,
      </if>
      <if test="effectTime != null" >
          effect_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="collectType != null" >
        #{collectType,jdbcType=TINYINT},
      </if>
      <if test="couponsId != null" >
        #{couponsId,jdbcType=VARCHAR},
      </if>
      <if test="couponsCollectId != null" >
        #{couponsCollectId,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null" >
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="collectUserId != null" >
        #{collectUserId,jdbcType=VARCHAR},
      </if>
      <if test="validTime != null" >
        #{validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="thridCode != null" >
        #{thridCode,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
      	#{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="recDate != null" >
    	#{recDate,jdbcType=VARCHAR},
      </if>
      <if test="effectTime != null" >
        #{effectTime,jdbcType=TIMESTAMP},
       </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecord" >
    update activity_coupons_record
    <set >
      <if test="collectType != null" >
        collect_type = #{collectType,jdbcType=TINYINT},
      </if>
      <if test="couponsId != null" >
        coupons_id = #{couponsId,jdbcType=VARCHAR},
      </if>
      <if test="couponsCollectId != null" >
        coupons_collect_id = #{couponsCollectId,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null" >
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="collectUserId != null" >
        collect_user_id = #{collectUserId,jdbcType=VARCHAR},
      </if>
      <if test="validTime != null" >
        valid_time = #{validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        room_id = #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
          device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="recDate != null" >
          rec_date = #{recDate,jdbcType=VARCHAR},
      </if>
      <if test="effectTime != null" >
          effect_time = #{effectTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecord" >
    update activity_coupons_record
    set collect_type = #{collectType,jdbcType=TINYINT},
      coupons_id = #{couponsId,jdbcType=VARCHAR},
      coupons_collect_id = #{couponsCollectId,jdbcType=VARCHAR},
      collect_time = #{collectTime,jdbcType=TIMESTAMP},
      collect_user_id = #{collectUserId,jdbcType=VARCHAR},
      valid_time = #{validTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      order_id = #{orderId,jdbcType=VARCHAR},
      room_id = #{roomId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <resultMap id="RecordVoMap" type="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecordVo" extends="BaseResultMap">     
        <result property="name" column="name" javaType="string" jdbcType="VARCHAR"/> 
        <result property="faceValue" column="face_value" javaType="integer" jdbcType="INTEGER"/>
        <result property="activityId" column=" activity_id " javaType="string" jdbcType="VARCHAR"/>
        <result property="activityName" column="activity_name" javaType="string" jdbcType="VARCHAR"/>
        <result property="collectUserName" column="user_name" javaType="string" jdbcType="VARCHAR"/>              
        <result property="arriveLimit" column="arrive_limit" javaType="integer" jdbcType="INTEGER"/>
        <result property="validDay" column="valid_day" javaType="integer" jdbcType="INTEGER"/>  
        <result property="orderNo" column="order_no" javaType="string" jdbcType="VARCHAR"/>
        <result property="belongType" column="belong_type" javaType="string" jdbcType="VARCHAR"/> 
        <result property="useUserType" column="use_user_type"  javaType="com.okdeer.mall.common.enums.UseUserType" jdbcType="TINYINT"/> 
        <result property="useClientType" column="use_client_type" javaType="com.okdeer.mall.common.enums.UseClientType" jdbcType="TINYINT"/> 
  </resultMap>
  
  <resultMap id="CouponsFindMap" type="com.okdeer.mall.activity.coupons.entity.ActivityCoupons">
       	<result property="faceValue" column="face_value" javaType="integer" jdbcType="INTEGER"/>
        <result property="arriveLimit" column="arrive_limit" javaType="integer" jdbcType="INTEGER"/>
    </resultMap>
  
  <sql id="BaseSelectSQL">
         id, collect_type, coupons_id, coupons_collect_id, collect_time, collect_user_id,
         valid_time, STATUS, order_id, room_id, thrid_code
  </sql>
  
  <sql id="couponsVo">
  		cou.`face_value`,cou.`arrive_limit`
  </sql>
  
   <select id="selectAllRecords" parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecordVo" resultMap="RecordVoMap">
	  select A.id, A.collect_type, A.coupons_id, A.coupons_collect_id, A.collect_time, A.collect_user_id, B.name, B.activity_id, B.arrive_limit, 
             B.valid_day, A.valid_time, A.STATUS, A.order_id, T.order_no, A.room_id, C.name as activity_name, D.login_name as user_name, 
             B.face_value, B.belong_type, B.use_user_type, B.use_client_type 
      FROM activity_coupons_record A
      LEFT JOIN activity_coupons B ON B.id = A.coupons_id
      LEFT JOIN activity_collect_coupons C ON C.id = B.activity_id
      LEFT JOIN sys_buyer_user D ON D.id = A.collect_user_id   
      LEFT JOIN trade_order T ON T.id = A.order_id
      WHERE 1 = 1 
      <if test="name != null and name != ''">
            AND B.name LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
      </if>
      <if test="collectUserName != null and collectUserName != ''">
            AND D.login_name LIKE CONCAT('%',#{collectUserName,jdbcType=VARCHAR},'%')
      </if> 
      <if test="startTime != null">
			<![CDATA[ AND A.collect_time >= #{startTime}]]> 
	  </if>
	  <if test="endTime != null">
			<![CDATA[ AND A.collect_time < #{endTime}]]>  
	  </if>
	  <if test="belongType != null and belongType != ''">
<!-- 			0是运营商,可以看到所有人的,  大于0,是代理商,只能看到自己的 -->
			AND B.belong_type = #{belongType}
	</if>
	  <if test="status != null">
			AND A.STATUS = #{status,jdbcType=TINYINT} 
	  </if>  
	  ORDER BY 
		A.collect_time 
	  DESC 
   </select> 
   
   <!-- begin yangq 获取用户的邀请记录 -->
   <select id="selectAllRecordsByUserId" parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecordVo" resultMap="RecordVoMap">
	  select A.id, A.collect_type, A.coupons_id, A.coupons_collect_id, A.collect_time, A.collect_user_id, B.name, B.activity_id, B.arrive_limit, 
             B.valid_day, A.valid_time, A.STATUS, A.order_id, A.room_id, C.name as activity_name, D.login_name as user_name, B.face_value, B.belong_type 
      FROM activity_coupons_record A
      LEFT JOIN activity_coupons B ON B.id = A.coupons_id
      LEFT JOIN activity_collect_coupons C ON C.id = B.activity_id
      LEFT JOIN sys_buyer_user D ON D.id = A.collect_user_id   
      WHERE 1 = 1 
      <if test="couponsCollectId != null and couponsCollectId != ''">
            AND A.coupons_collect_id = #{couponsCollectId,jdbcType=VARCHAR}
      </if>
	  <if test="collectUserId != null">
			AND A.collect_user_id = #{collectUserId,jdbcType=VARCHAR} 
	  </if>  
	  ORDER BY 
		A.collect_time 
	  DESC 
   </select> 
   <!-- end yangq 获取用户的邀请记录 -->
   
   <!-- 根据记录id查询订单相关信息 added by tangy -->
   <select id="findOrderByRecordId" resultMap="RecordVoMap">
	  select T.order_no, A.id
      FROM activity_coupons_record A 
      LEFT JOIN trade_order T ON T.id = A.order_id   
      WHERE A.id IN 
	  <foreach collection="recordIds" item="item" open="(" close=")" separator=",">
           #{item,jdbcType=VARCHAR}
      </foreach>
   </select> 
   <!-- end added by tangy -->
	
   <select id="selectExportRecords" parameterType="java.util.Map" resultMap="RecordVoMap">
<!-- 	  select A.id, A.collect_type, A.coupons_id, A.coupons_collect_id, A.collect_time, A.collect_user_id, B.name, B.activity_id, B.arrive_limit, 
             B.valid_day, A.valid_time, A.STATUS, A.order_id, A.room_id, C.name as activity_name, D.nick_name user_name, B.face_value 
      FROM activity_coupons_record A
      LEFT JOIN activity_coupons B ON B.id = A.coupons_id
      LEFT JOIN activity_collect_coupons C ON C.id = B.activity_id 
      LEFT JOIN sys_buyer_user D ON D.id = A.collect_user_id  
      WHERE 1 = 1  -->
      select T.order_no, A.id, A.collect_type, A.coupons_id, A.coupons_collect_id, A.collect_time, A.collect_user_id, B.name, B.activity_id, B.arrive_limit, 
             B.valid_day, A.valid_time, A.STATUS, A.order_id, A.room_id, C.name as activity_name, D.login_name as user_name, B.face_value, B.belong_type 
      FROM activity_coupons_record A
      LEFT JOIN activity_coupons B ON B.id = A.coupons_id
      LEFT JOIN activity_collect_coupons C ON C.id = B.activity_id 
      LEFT JOIN trade_order T ON T.id = A.order_id
      LEFT JOIN sys_buyer_user D ON D.id = A.collect_user_id   
      WHERE 1 = 1 
      <if test="name != null and name != ''">
            AND B.name LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
      </if>
      <if test="collectUserName != null and collectUserName != ''">
            AND D.user_name LIKE CONCAT('%',#{collectUserName,jdbcType=VARCHAR},'%')
      </if> 
      <if test="startTime != null">
			<![CDATA[ AND A.collect_time >= #{startTime}]]> 
	  </if>
	  <if test="endTime != null">
			<![CDATA[ AND A.collect_time < #{endTime}]]>  
	  </if>
	  <if test="belongType != null and belongType != ''">
<!-- 			0是运营商,可以看到所有人的,  大于0,是代理商,只能看到自己的 -->
			AND B.belong_type = #{belongType}
	</if>
	  <if test="status != null">
			AND A.STATUS = #{status,jdbcType=TINYINT} 
	  </if> 
	  ORDER BY A.collect_time DESC 
  </select>

  <select id="updateUseStatus" resultType="java.lang.Integer" parameterType="java.lang.String">
   	update activity_coupons_record
	SET status = 0,
	order_id = ''
	WHERE order_id= #{orderId,jdbcType=VARCHAR}
   </select>
   
  <select id="updateUseStatusAndExpire" resultType="java.lang.Integer" parameterType="java.lang.String">
   	update activity_coupons_record
	SET status = 2
	WHERE order_id= #{orderId,jdbcType=VARCHAR}
   </select>
  
  <!-- wusw:根据代金券id、活动id、活动类型和领取人id，查询代金券领取记录信息 -->
	<select id="selectCountByParams" resultType="java.lang.Integer" parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecord">
	  select count(1)
	  FROM activity_coupons_record 
	  WHERE  1=1
	  <!-- 领取人id -->
	  <if test="collectUserId != null and collectUserId != ''">
	     AND collect_user_id = #{collectUserId,jdbcType=VARCHAR}
	  </if>
	  <!-- 代金券领取活动（注册活动）id -->
	  <if test="couponsCollectId != null and couponsCollectId != ''">
	    AND coupons_collect_id = #{couponsCollectId,jdbcType=VARCHAR}
	  </if>
	  <!-- 代金券id -->
	  <if test="couponsId != null and couponsId != ''">
	    AND coupons_id = #{couponsId,jdbcType=VARCHAR}
	  </if>
	  <!-- 活动类型 -->
	  <if test="collectType != null">
	     AND collect_type = #{collectType,jdbcType=TINYINT}
	  </if>
	  <!-- 领取状态 -->
	  <if test="status != null">
	     AND `status` = #{status,jdbcType=TINYINT}
	  </if>
	  <!-- 领取时间-->
	  <if test="collectTime != null">
	     AND collect_time = #{collectTime}
	  </if>	  
	</select>
	
	  <!-- zhulq:根据随机码查询代金券领取记录信息 -->
	<select id="selectCountByRandCode" resultType="int" parameterType="string">
		  SELECT
		  	 count(1)
		  FROM  activity_coupons_rand_code rc 
		  WHERE rc.is_exchange=1 
		  <!-- 代金券领取活动（注册活动）id -->
		  <if test="randCode != null and randCode != ''">
		    	and rc.rand_code =  #{randCode,jdbcType=VARCHAR}
		  </if>
	</select>
  
   <!-- wusw:代金券领取活动、代金券、限制类目等关联信息 -->
    <resultMap id="couponsAndLimitCategoryDetailMap" type="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecordQueryVo" extends="BaseResultMap">
      <!-- 代金券活动信息 -->
      <!--  <id property="collectCouponsId" column="collectCouponsId" jdbcType="VARCHAR"/>
	  <result property="collectCouponsName" column="collectCouponsName" jdbcType="VARCHAR"/>
	  <result property="identityLimit" column="identity_limit" jdbcType="TINYINT" javaType="com.okdeer.mall.enums.IdentityLimit"/> -->
      <!-- 代金券信息 -->
      <association property="activityCoupons" javaType="com.okdeer.mall.activity.coupons.entity.ActivityCoupons">		
		<id property="id" column="couponsId" javaType="string" jdbcType="VARCHAR"/>
        <result property="name" column="couponsName" javaType="string" jdbcType="VARCHAR"/>
        <result property="faceValue" column="face_value" javaType="integer" jdbcType="INTEGER"/>     	
        <result property="arriveLimit" column="arrive_limit" javaType="integer" jdbcType="INTEGER"/>
        <result property="validDay" column="valid_day" javaType="integer" jdbcType="INTEGER"/>
        <result property="everyLimit" column="every_limit" javaType="integer" jdbcType="INTEGER"/>
        <result property="isCashDelivery" column="is_cash_delivery" javaType="com.okdeer.mall.activity.coupons.enums.CashDelivery" jdbcType="TINYINT"/>
        <result property="isCategoryLimit" column="is_category_limit" javaType="com.okdeer.mall.activity.coupons.enums.CategoryLimit"  jdbcType="TINYINT"/>
        <result property="type" column="type" javaType="integer" jdbcType="INTEGER"/>
        <result property="isCategory" column="is_category" javaType="integer" jdbcType="INTEGER"/>
        <result property="areaType" column="coupons_area_type" javaType="com.okdeer.mall.common.enums.AreaType"
                   jdbcType="TINYINT"/>
        <result property="useUserType" column="use_user_type"  javaType="com.okdeer.mall.common.enums.UseUserType" jdbcType="TINYINT"/> 
        <result property="useClientType" column="use_client_type" javaType="com.okdeer.mall.common.enums.UseClientType" jdbcType="TINYINT"/> 
        <result property="deviceDayLimit" column="device_day_limit" jdbcType="INTEGER"/>
        <result property="accountDayLimit" column="account_day_limit" jdbcType="INTEGER"/>
        <collection property="activityCouponsCategory" ofType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsCategory">
	       <id column="categoryid" property="id" jdbcType="VARCHAR" />
           <result column="coupons_id" property="couponsId" jdbcType="VARCHAR" />
           <result column="category_id" property="categoryId" jdbcType="VARCHAR" />
           <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
	    </collection> 
      </association> 
      <!-- 限制使用类目信息 -->
    <!--   <collection property="goodsSpuCategoryList"  ofType="com.okdeer.mall.goods.category.entity.GoodsSpuCategory">
         <id column="spuCategoryId" property="id" jdbcType="VARCHAR" />
		 <result column="spuCategoryName" property="name" jdbcType="VARCHAR" />
      </collection> -->
    </resultMap>
    
    <resultMap type="com.okdeer.mall.order.vo.RechargeCouponVo" id="rechargeCouponRsMap">
    	<id property="recordId" column="recordId" jdbcType="VARCHAR"/>
    	<result property="couponId" column="couponId" jdbcType="VARCHAR"/>
    	<result property="usableRange" column="usableRange" jdbcType="VARCHAR"/>
    	<result property="couponName" column="couponName" jdbcType="VARCHAR"/>
    	<result property="indate" column="indate" jdbcType="VARCHAR"/>
    	<result property="couponPrice" column="couponPrice" jdbcType="VARCHAR"/>
    	<result property="arrive" column="arrive" jdbcType="VARCHAR"/>
    	<result column="status" property="status" javaType="com.okdeer.mall.activity.coupons.enums.ActivityCouponsRecordStatusEnum" jdbcType="TINYINT" />
    	<result property="activityId" column="activity_id" javaType="string" jdbcType="VARCHAR"/>
    	<result property="deviceDayLimit" column="device_day_limit" jdbcType="INTEGER"/>
        <result property="accountDayLimit" column="account_day_limit" jdbcType="INTEGER"/>
    </resultMap>
    
  <!-- wusw:根据领取人id、领取状态，查询领取的代金券详细信息 -->
  <select id="selectMyCouponsDetailByParams" resultMap="couponsAndLimitCategoryDetailMap" parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecord">
   SELECT 
   coupons.id AS couponsId,coupons.`name` AS couponsName,coupons.face_value,coupons.arrive_limit,
   coupons.valid_day,coupons.every_limit,coupons.is_cash_delivery,coupons.is_category_limit,coupons.valid_day,
   coupons.type AS type,coupons.is_category AS is_category, coupons.area_type as coupons_area_type, 
   record.id,record.collect_time,record.valid_time,coupons.use_user_type,coupons.use_client_type, 
   coupons.device_day_limit, coupons.account_day_limit,		
   CASE
   WHEN coupons.type = 1 THEN nav.name
   WHEN coupons.type = 2 THEN spu.name
   ELSE '' END as category_name
   FROM activity_coupons_record record
   LEFT JOIN activity_coupons coupons ON record.coupons_id = coupons.id
   LEFT JOIN activity_coupons_category category ON category.coupon_id = coupons.id	
   LEFT JOIN goods_navigate_category nav ON nav.id = category.category_id
   LEFT JOIN goods_spu_category spu ON spu.id = category.category_id
   WHERE 1=1
   <if test="collectUserId != null and collectUserId != ''">
     AND record.collect_user_id = #{collectUserId,jdbcType=VARCHAR}
   </if>
   <if test="status != null and status.name() == 'UNUSED'">
     AND record.`status` in (0,3)
   </if>
   <if test="status != null and status.name() != 'UNUSED'">
     AND record.`status` = #{status,jdbcType=TINYINT}
   </if>
    ORDER BY record.collect_time DESC
  </select> 
  
  <!-- add by zhulq  新增aql  使用于以前的版本 我的代金券 -->
  <select id="selectMyCouponsDetailByParamsOld" resultMap="couponsAndLimitCategoryDetailMap" parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecord">
   SELECT 
   coupons.id AS couponsId,coupons.`name` AS couponsName,coupons.face_value,coupons.arrive_limit,
   coupons.valid_day,coupons.every_limit,coupons.is_cash_delivery,coupons.is_category_limit,coupons.valid_day,
   coupons.type AS type,coupons.is_category AS is_category, coupons.area_type as coupons_area_type, 
   record.id,record.collect_time,record.valid_time,coupons.use_user_type,coupons.use_client_type, 
   coupons.device_day_limit, coupons.account_day_limit,  		
   CASE
   WHEN coupons.type = 1 THEN nav.name
   WHEN coupons.type = 2 THEN spu.name
   ELSE '' END as category_name
   FROM activity_coupons_record record
   LEFT JOIN activity_coupons coupons ON record.coupons_id = coupons.id
   LEFT JOIN activity_coupons_category category ON category.coupon_id = coupons.id	
   LEFT JOIN goods_navigate_category nav ON nav.id = category.category_id
   LEFT JOIN goods_spu_category spu ON spu.id = category.category_id
   WHERE coupons.create_time &lt;= '2016-10-19 23:59:59'
   <if test="collectUserId != null and collectUserId != ''">
     AND record.collect_user_id = #{collectUserId,jdbcType=VARCHAR}
   </if>
    <if test="status != null and status.name() == 'UNUSED'">
     AND record.`status` in (0,3)
   </if>
   <if test="status != null and status.name() != 'UNUSED'">
     AND record.`status` = #{status,jdbcType=TINYINT}
   </if>
    ORDER BY record.collect_time DESC
  </select>
  
  <!-- yangq:根据领取人id、领取状态，店铺ID，查询领取的代金券详细信息 -->
  <select id="selectCouponsDetailByStoreId" resultMap="couponsAndLimitCategoryDetailMap"  parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecord">
	   SELECT coupons.id AS couponsId,coupons.`name` AS couponsName,coupons.face_value,coupons.arrive_limit,
          coupons.valid_day,coupons.every_limit,coupons.is_cash_delivery,coupons.is_category_limit,coupons.valid_day,
          record.id,record.collect_time,record.valid_time,record.collect_type,record.coupons_collect_id
	   FROM activity_coupons_record record LEFT JOIN activity_coupons_relation_store relation ON record.`coupons_id` = relation.`coupons_id`
	   LEFT JOIN activity_coupons coupons ON record.coupons_id = coupons.id
	   WHERE 1=1
	   <if test="collectUserId != null and collectUserId != ''">
	     AND record.collect_user_id = #{collectUserId,jdbcType=VARCHAR}
	   </if>
	   <if test="status != null">
	     AND record.`status` = #{status,jdbcType=TINYINT}
	   </if>
	   <if test="storeId != null">
	     AND relation.`store_id` = #{storeId,jdbcType=VARCHAR}
	   </if>
   </select>
   
   <select id="selectCouponsAllId" resultMap="couponsAndLimitCategoryDetailMap"  parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecord">
     SELECT 
		  coupons.id AS couponsId,
		  coupons.`name` AS couponsName,
		  coupons.face_value,
		  coupons.arrive_limit,
		  coupons.valid_day,
		  coupons.every_limit,
		  coupons.is_cash_delivery,
		  coupons.is_category_limit,
		  coupons.valid_day,
		  record.id,
		  record.collect_time,
		  record.valid_time,
		  record.collect_type,
		  record.coupons_collect_id 
		FROM
		  activity_coupons_record record 
		  LEFT JOIN activity_coupons coupons 
		    ON record.coupons_id = coupons.id 
		WHERE 1 = 1 
		  <if test="collectUserId != null and collectUserId != ''">
		  AND record.collect_user_id = #{collectUserId,jdbcType=VARCHAR}
		  </if>
		  AND record.`status` = 0 AND coupons.`area_type` = 0
   </select>
   
   <!-- Begin modified by maojj 查询条件去除type -->
   <!-- @author yangqin begin -->
   <select id="selectCouponsItem" parameterType="com.okdeer.mall.activity.coupons.entity.CouponsFindVo" resultMap="CouponsFindMap">
   		SELECT <include refid="couponsVo"/>
		FROM activity_collect_coupons co 
		LEFT JOIN activity_coupons cou  ON co.`id` = cou.`activity_id` 
		WHERE cou.`activity_id` = #{activityId,jdbcType=VARCHAR} 
		AND cou.`id`= #{activityItemId,jdbcType=VARCHAR}
   </select>
  <!-- @author yangqin end -->
  <!-- End modified by maojj 查询条件去除type -->
  
<!--   zhulq 定时任务 -->
   <select id="selectAllForJob" resultMap="BaseResultMap">
    SELECT 
    <include refid="Base_Column_List" />
     FROM activity_coupons_record WHERE status = 0
  </select>
  
     <update id="updateAllByBatch" parameterType="map">
    	update activity_coupons_record set status = #{status} where id in 
		<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
  			#{item}  
 		</foreach>  
 		and status = 0
    </update>
    
   <select id="selectAllVendorById" parameterType="map" resultMap="BaseResultMap">
   		SELECT 
		  coupons.id AS couponsId,
		  coupons.`name` AS couponsName,
		  coupons.face_value,
		  coupons.arrive_limit,
		  coupons.valid_day,
		  coupons.every_limit,
		  coupons.is_cash_delivery,
		  coupons.is_category_limit,
		  coupons.valid_day,
		  record.id,
		  record.collect_time,
		  record.valid_time,
		  record.collect_type,
		  record.coupons_collect_id 
		FROM
		  activity_coupons_record record 
		  LEFT JOIN activity_coupons coupons 
		    ON record.coupons_id = coupons.id 
		WHERE 1 = 1 
		  AND record.collect_user_id = #{collectUserId,jdbcType=VARCHAR} 
		  AND record.`status` = '0' AND coupons.`area_type`=0 
   </select>
   
   <!-- modified by maojj 2016-10-10 防止用户刷代金券。下单时将代金券状态更改为已使用时，添加状态为0的条件 -->
   <update id="updateActivityCouponsStatus" parameterType="map">
      UPDATE activity_coupons_record 
      SET 
      		status = 1,
      		order_id = #{orderId,jdbcType=VARCHAR},
      		device_id = #{deviceId,jdbcType=VARCHAR} ,
      		rec_date = #{recDate,jdbcType=VARCHAR}
      WHERE status = 0
      AND id = #{id,jdbcType=VARCHAR}
   </update>
    
   <insert id="insertSelectiveBatch" parameterType="list" >
    insert into activity_coupons_record
        (id, collect_type, coupons_id, coupons_collect_id, collect_time, 
         collect_user_id, valid_time, status, order_id, room_id) values
     <foreach collection="list" item="item" index="index" separator="," >
       (#{item.id,jdbcType=VARCHAR},
        #{item.collectType,jdbcType=TINYINT},
        #{item.couponsId,jdbcType=VARCHAR},
        #{item.couponsCollectId,jdbcType=VARCHAR},
        #{item.collectTime,jdbcType=TIMESTAMP},
        #{item.collectUserId,jdbcType=VARCHAR},
        #{item.validTime,jdbcType=TIMESTAMP},
        #{item.status,jdbcType=TINYINT},
        #{item.orderId,jdbcType=VARCHAR},
        #{item.roomId,jdbcType=VARCHAR}
        )
     </foreach>
  </insert> 
  <!--  从预领取记录中批量插入代金券  tuzhd -->
  <insert id="insertBatchRecordByBefore" parameterType="list" >
    insert into activity_coupons_record
        (id, collect_type, coupons_id, coupons_collect_id, collect_time, 
         collect_user_id, valid_time, status, order_id, room_id) values
     <foreach collection="list" item="item" index="index" separator="," >
       (#{item.id,jdbcType=VARCHAR},
        #{item.collectType,jdbcType=TINYINT},
        #{item.couponsId,jdbcType=VARCHAR},
        #{item.couponsCollectId,jdbcType=VARCHAR},
        #{item.collectTime,jdbcType=TIMESTAMP},
        #{item.collectUserId,jdbcType=VARCHAR},
        #{item.validTime,jdbcType=TIMESTAMP},
        #{item.status,jdbcType=TINYINT},
        #{item.orderId,jdbcType=VARCHAR},
        #{item.roomId,jdbcType=VARCHAR}
        )
     </foreach>
  </insert> 
  
  
    <!-- zhulq:根据代金券id、活动id、活动类型和领取人id，查询其他人代金券领取记录信息 -->
<!-- 	<select id="selectOtherCountByParams" resultType="int" parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecord">
	  SELECT count(1)
	  FROM activity_coupons_record 
	  WHERE  1=1
	  领取人id
	  <if test="collectUserId != null and collectUserId != ''">
	     AND collect_user_id != #{collectUserId,jdbcType=VARCHAR}
	  </if>
	  代金券领取活动（注册活动）id
	  <if test="couponsCollectId != null and couponsCollectId != ''">
	    AND coupons_collect_id = #{couponsCollectId,jdbcType=VARCHAR}
	  </if>
	  代金券id
	  <if test="couponsId != null and couponsId != ''">
	    AND coupons_id = #{couponsId,jdbcType=VARCHAR}
	  </if>
	  活动类型
	  <if test="collectType != null">
	     AND collect_type = #{collectType,jdbcType=TINYINT}
	  </if>
	  领取状态
	  <if test="status != null">
	     AND `status` = #{status,jdbcType=TINYINT}
	  </if>
	</select> -->
	
	<!-- 查询用户有效的代金券信息 Begin added by maojj -->
	<select id="findValidCoupons" parameterType="com.okdeer.mall.activity.bo.FavourParamBO" resultType="com.okdeer.mall.order.vo.Coupons">
		SELECT
			t2.name AS couponTitle, t2.type,
			0 AS usableRange,
			date_format(date_add(t.valid_time, interval -1 day),'%Y-%m-%d') AS indate,
			t.coupons_collect_id AS id,
			t2.id AS couponId,
			FORMAT(t2.face_value,2) AS couponPrice,
			t.id AS recordId,
			t.collect_type AS couponsType,
			t2.id AS activityItemId ,
			FORMAT(t2.arrive_limit,2) AS arrive,
			t2.is_category AS isCategory,
			t2.use_user_type AS useUserType,
			t2.use_client_type AS useClientType,
			t2.device_day_limit AS deviceDayLimit,
			t2.account_day_limit AS accountDayLimit
		FROM
			activity_coupons_record t
			LEFT JOIN activity_coupons t2 ON t.coupons_id = t2.id
		WHERE
			t.collect_user_id = #{userId}
		AND t.status = 0
		AND t2.disabled = 0
		<if test="clientType != null" >
       		AND (t2.use_client_type = 0 or t2.use_client_type = #{clientType,jdbcType=TINYINT})
    	</if>
    	<if test="onlyCouponsType != null">
    		and t2.type = #{onlyCouponsType,jdbcType=TINYINT}
    	</if>
		<if test="couponsType != null">
			AND (t2.type = 0 OR ( t2.type = #{couponsType,jdbcType=TINYINT}
			     AND (
			       <!-- 服务店代金券查询 -->
			       <if test="storeType != null and storeType.name() == 'SERVICE_STORE'">
			       t2.area_type = 0 OR
				   ( (t2.area_type = 3 AND (EXISTS (SELECT 1 FROM activity_coupons_relation_store t1 WHERE t.coupons_id = t1.coupons_id AND t1.store_id = #{storeId} AND t2.area_type = 3)) ) 
	                   <if test="addressId != null and addressId != '' ">
	                     OR (t2.area_type = 1 AND EXISTS(SELECT 1 FROM activity_coupons_area aca LEFT JOIN member_consignee_address mca ON mca.id = #{addressId} 
	                      WHERE aca.coupons_id = t2.id AND ((aca.type = 0 AND aca.area_id = mca.city_id) OR (aca.type = 1 AND aca.area_id = mca.province_id))))
	                </if>
		           )
					</if>
					<!-- 平台发起的代金券活动，只有云上店可以使用 -->
					<if test="storeType != null and storeType.name() == 'CLOUD_STORE'">
					    (EXISTS (SELECT 1 FROM activity_coupons_relation_store t1 WHERE t.coupons_id = t1.coupons_id AND t1.store_id = #{storeId}))
						OR t2.area_type = 0
					</if>
				)
			  )
			  <if test="storeType != null and storeType.name() == 'CLOUD_STORE'">
			  	OR t2.type = 6
			  </if>
			) 
		</if>
		AND t2.arrive_limit &lt;= #{totalAmount}
		ORDER BY t2.face_value DESC, t.collect_time DESC
	</select>
	<!-- End added by maojj -->
	
	<!-- 查询用户有效的手机充值代金券 begin added by zhaoqc -->
	<select id="findValidRechargeCoupons" parameterType="map" resultMap="rechargeCouponRsMap">
		select c.name as couponName,0 AS usableRange,
			DATE_FORMAT(t.valid_time, '%Y-%m-%d %T') AS indate,
			t.id as recordId,
			c.id as couponId,
			c.activity_id,
			FORMAT(c.face_value, 2) as couponPrice,
			FORMAT(c.arrive_limit,2) as arrive, t.status,
			c.device_day_limit,c.account_day_limit
		FROM activity_coupons_record t
		LEFT join activity_coupons c ON t.coupons_id=c.id
		WHERE t.collect_user_id = #{userId}
			and t.status = 0
			and c.disabled = 0 
			and c.arrive_limit &lt;= #{orderAmount}
			and c.type = 3
		ORDER BY c.face_value DESC, t.valid_time
	</select>
	<!-- end added by zhaoqc -->
	
	<!-- 查询优惠券信息 Begin added by zhaoqc -->
	<select id="findRechargeCouponInfo" resultMap="rechargeCouponRsMap">
		SELECT DATE_FORMAT(r.valid_time, '%Y-%m-%d %T') AS indate,
			FORMAT(c.face_value, 2) as couponPrice,
			FORMAT(c.arrive_limit,2) as arrive,
			r.status
		FROM activity_coupons_record r
		LEFT join activity_coupons c on r.coupons_id=c.id
		WHERE r.id=#{recordId, jdbcType=VARCHAR} 
			AND c.id=#{couponId, jdbcType=VARCHAR}
			AND r.collect_user_id = #{userId, jdbcType=VARCHAR}
			AND r.status = 0
			AND c.type=3
	</select>
	<!-- End added by zhaoqc -->
	
	<!-- add by wushp 20160919 根据用户统计各种状态的代金券数量 -->
	<select id="findStatusCountByUserId" parameterType="java.lang.String" resultType="com.okdeer.mall.activity.coupons.entity.CouponsStatusCountVo">
		SELECT 
		  STATUS,COUNT(0) AS COUNT,
		  CASE
		    WHEN t.status = 0 
		    THEN 'unUse' 
		    WHEN t.status = 1 
		    THEN 'used' 
		    WHEN t.status = 2 
		    THEN 'expires' 
		  END AS statusStr 
		FROM
		  activity_coupons_record t 
		WHERE t.`collect_user_id` = #{userId} 
		GROUP BY t.status 	
	</select>
	<!-- end by wushp 20160919 根据用户统计各种状态的代金券数量 -->
	
	<!-- add by tangy 20160923 根据商品类目ids查询商品是否符合代金券指定分类 -->
    <select id="findIsContainBySpuCategoryIds" resultType="int">
        SELECT COUNT(1) FROM goods_spu_category tt
		LEFT JOIN goods_navigate_category_association gca ON gca.spu_category_id = tt.id
		INNER JOIN activity_coupons_category acc ON acc.coupon_id = #{couponsId} AND acc.category_id = gca.navigate_category_id
		WHERE tt.id IN 
        <foreach item="item" index="index" collection="spuCategoryIds" open="(" separator="," close=")">  
  			#{item}  
 		</foreach>
	</select>
	
	<!-- add by tangy 20161011根据商品类目ids查询商品是否符合代金券指定分类 -->
    <select id="findServerBySpuCategoryIds" resultType="int">
        SELECT COUNT(1) FROM goods_spu_category tt
		INNER JOIN activity_coupons_category acc ON acc.coupon_id = #{couponsId} AND acc.category_id = tt.id AND acc.type = 2
		WHERE tt.id IN 
        <foreach item="item" index="index" collection="spuCategoryIds" open="(" separator="," close=")">  
  			#{item}  
 		</foreach>
	</select>
	
	<!-- 根据代金券id获取类目名称集 -->
	<select id="findByCategoryNames" resultType="java.util.Map" >
		SELECT tt.coupon_id AS couponId,
		CASE tt.type WHEN 1 THEN GROUP_CONCAT(t2.`name`)
		WHEN 2 THEN GROUP_CONCAT(t3.`name`)
		END AS categoryNames
		FROM activity_coupons_category tt
		LEFT JOIN goods_navigate_category t2 ON tt.type = 1 AND t2.id = tt.category_id
		LEFT JOIN goods_spu_category t3 ON tt.type = 2 AND t3.id = tt.category_id
		WHERE tt.coupon_id IN 
        <foreach item="item" index="index" collection="couponIds" open="(" separator="," close=")">  
  			#{item}  
 		</foreach>
 		GROUP BY tt.coupon_id
	</select>
    <!-- end by tangy 20160923 根据商品ids查询商品是否符合代金券指定分类 -->
    
   <!-- begin by:yangq 保存邀请码记录 -->
   <insert id="saveActivityCouponsRecord" parameterType="com.okdeer.mall.activity.coupons.entity.ActivityCouponsRecord">
        insert into activity_coupons_record(
			id, collect_type, coupons_id, coupons_collect_id, collect_time, collect_user_id, valid_time,status,order_id,room_id
		)values(
            #{id,jdbcType=VARCHAR},
            #{collectType,jdbcType=INTEGER},
            #{couponsCollectId,jdbcType=VARCHAR},
            #{collectTime,jdbcType=TIMESTAMP},
            #{collectUserId,jdbcType=VARCHAR},
            #{validTime,jdbcType=VARCHAR},
            #{status,jdbcType=INTEGER},
            #{orderId,jdbcType=VARCHAR},
            #{roomId,jdbcType=VARCHAR}
        )
	</insert>
   <!-- end by:yangq 保存邀请码记录 -->
   
   <!-- begin added by maojj 20161018 查询用户参与邀请注册送代金券领取的总金额 -->
   <select id="findTotalRewardAmount" parameterType="map" resultType="java.lang.Integer">
   		SELECT
			sum(t1.face_value)
		FROM
			activity_coupons_record t0
		LEFT JOIN activity_coupons t1 ON t0.coupons_id = t1.id
		WHERE
			t0.coupons_collect_id = #{activityId}
		AND t0.collect_user_id = #{userId}
		<if test="limitDate != null">
			AND t0.collect_time &gt; #{limitDate}
		</if>
   </select>
   <!-- End added by maojj 20161018 -->
    
  <!-- 1、当代金券设置的领取后的有效期大于3天，则在代金券结束前第三天发送；2、当代金券设置的领取后的有效期大于1天小于或等于3天 tuzhiding-->
  <select id="getIsNoticeUser" resultType="java.util.Map" >
  		select 
			distinct u.`phone`,u.id
		from 
			(select 
			  	s.`id`,s.collect_user_id,s.`valid_time` ,s.`collect_time`,
				CASE WHEN  datediff(s.`valid_time`,s.`collect_time`) > 3 AND datediff(s.`valid_time`,now()) = 3 THEN
					1
				WHEN (datediff(s.`valid_time`,s.`collect_time`) between 2 AND 3) AND datediff(s.`valid_time`,now()) = 1 THEN 
					1
				ELSE 
					0
			 	END isMsg 	  
			from `activity_coupons_record` s 
			where s.`status` = 0 
			      and s.`valid_time` > now()
			) v 
			INNER JOIN sys_buyer_user u ON v.collect_user_id =u.id
		where isMsg = 1
  </select> 
  
  <!-- tuzhd根据用户id查询其是否存在已使用的新用户专享代金劵 用于首单条件判断 -->
  <select id="findCouponsCountByUser" resultType="int">
		SELECT COUNT(1)
		FROM activity_coupons_record r left join activity_coupons c on r.coupons_id =c.id
		WHERE r.status=1
			<!-- 新用户专享代金劵 -->
			<if test="useUserType != null" >
	       		AND c.use_user_type = #{useUserType,jdbcType=TINYINT}
	    	</if>
			<if test="null != userId and ''!= userId">
				AND r.collect_user_id = #{userId,jdbcType=VARCHAR} 
			</if>
   </select>
   
   <!-- 根据代金劵活动新人限制查询领取未使用的代金劵数量    -->
  <select id="findcountByNewType" resultType="int" >
     	SELECT 
		  count(1)
		FROM
		  activity_coupons_record r 
		  inner JOIN activity_collect_coupons c 
		    	ON r.coupons_collect_id = c.id 
		WHERE c.disabled = 0  
		  <if test="userId != null and userId != ''">
		  		AND r.collect_user_id = #{userId,jdbcType=VARCHAR}
		  </if>
		  <if test="status != null ">
		  		AND r.status = #{status,jdbcType=TINYINT}
		  </if>
		  <if test="getUserType != null">
		  		AND c.get_user_type = #{getUserType,jdbcType=TINYINT}
		  </if>
   </select>
  
   <select id="countActivityRecord" parameterType="com.okdeer.mall.activity.coupons.bo.ActivityRecordParamBo"
   		resultType="com.okdeer.mall.activity.coupons.bo.ActivityRecordBo">
   		SELECT coupons_id AS pkId,
   			   count(*) AS totalNum
   		FROM activity_coupons_record
   		WHERE coupons_id IN
   			<foreach collection="pkIdList" item="pkId" separator="," open="(" close=")">
   				#{pkId}
   			</foreach>
   		<if test="deviceId != null">
   			AND device_id = #{deviceId,jdbcType=VARCHAR}
   		</if>
   		<if test="userId != null">
   			AND collect_user_id = #{userId,jdbcType=VARCHAR}
   		</if>
   		<if test="recDate != null">
   			AND rec_date = #{recDate,jdbcType=VARCHAR}
   		</if>
   		AND status = 1
   		GROUP BY coupons_id
   </select>
   
   <!-- 统计我的代金券的关联活动数据(代金券活动已使用代金券) -->
   <select id="countCollectActivityRecord" parameterType="com.okdeer.mall.activity.coupons.bo.ActivityRecordParamBo"
   		resultType="com.okdeer.mall.activity.coupons.bo.ActivityRecordBo">
   		SELECT coupons_collect_id AS pkId,
   			   count(*) AS totalNum
   		FROM activity_coupons_record LEFT JOIN activity_coupons  coupons ON coupons.id=coupons_id
   		WHERE coupons_collect_id in ( 
   			SELECT coupons_collect_id 
   			FROM activity_coupons_record 
   			WHERE coupons_id IN 
   			<foreach collection="pkIdList" item="pkId" separator="," open="(" close=")">
   				#{pkId}
   			</foreach>
   		)
   		<if test="deviceId != null">
   			AND device_id = #{deviceId,jdbcType=VARCHAR}
   		</if>
   		<if test="userId != null">
   			AND collect_user_id = #{userId,jdbcType=VARCHAR}
   		</if>
   		<if test="recDate != null">
   			AND rec_date = #{recDate,jdbcType=VARCHAR}
   		</if>
   		AND status = 1
   		AND coupons.type != 6
   		GROUP BY coupons_collect_id
   </select>
   
   <select id="countDayFreq" parameterType="com.okdeer.mall.activity.coupons.bo.ActivityRecordParamBo" resultType="int">
   		SELECT count(*)
   		FROM activity_coupons_record LEFT JOIN activity_coupons  coupons ON coupons.id=coupons_id
   		<where> 
	   		<if test="pkId != null">
	   			coupons_id = #{pkId,jdbcType=VARCHAR}
	   		</if>
	   		<if test="collectId != null">
	   			AND coupons_collect_id = #{collectId,jdbcType=VARCHAR}
	   			AND coupons.type != 6
	   		</if>
	   		<if test="deviceId != null">
	   			AND device_id = #{deviceId,jdbcType=VARCHAR}
	   		</if>
	   		<if test="userId != null">
	   			AND collect_user_id = #{userId,jdbcType=VARCHAR}
	   		</if>
	   		<if test="recDate != null">
	   			AND rec_date = #{recDate,jdbcType=VARCHAR}
	   		</if>
	   		AND status = 1
   		</where>
   </select>

	<!-- Begin V2.6.0_P02 added by maojj 2017-09-09 -->
	<select id="findForJob" parameterType="date" resultMap="BaseResultMap">
    	SELECT <include refid="Base_Column_List" />
     	FROM activity_coupons_record 
     	WHERE (status IN (0,3) AND valid_time &lt;= #{currentDate,jdbcType=TIMESTAMP})
     	OR (status = 3 AND effect_time &lt;= #{currentDate,jdbcType=TIMESTAMP})
  	</select>
  	<!-- End V2.6.0_P02 added by maojj 2017-09-09 -->
</mapper> 