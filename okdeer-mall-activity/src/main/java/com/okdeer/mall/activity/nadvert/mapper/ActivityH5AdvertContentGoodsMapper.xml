<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.okdeer.mall.activity.nadvert.mapper.ActivityH5AdvertContentGoodsMapper" >
    <resultMap id="BaseResultMap" type="com.okdeer.mall.activity.nadvert.entity.ActivityH5AdvertContentGoods" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="activity_id" property="activityId" jdbcType="VARCHAR" />
        <result column="content_id" property="contentId" jdbcType="VARCHAR" />
        <result column="store_sku_id" property="storeSkuId" jdbcType="VARCHAR" />
        <result column="sku_name" property="skuName" jdbcType="VARCHAR" />
        <result column="sku_price" property="skuPrice" jdbcType="DECIMAL" />
        <result column="market_price" property="marketPrice" jdbcType="DECIMAL" />
        <result column="goods_sku_pic" property="goodsSkuPic" jdbcType="VARCHAR" />
        <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
        <result column="sellable_stock" property="sellableStock" jdbcType="INTEGER" />
        <result column="locked_stock" property="lockedStock" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    </resultMap>
    
    

    <sql id="Base_Column_List" >
        id, activity_id, content_id,store_sku_id, pic_url,create_time, create_user_id
    </sql>

    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        	aa.*,bb.url goods_sku_pic
        from activity_h5_advert_content_goods
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="findByActId" resultMap="BaseResultMap" parameterType="java.lang.Object" >
        select 
        	aa.id, 
        	aa.activity_id, 
        	aa.content_id, 
        	aa.store_sku_id,
        	sku.name sku_name, 
        	aa.pic_url, 
        	aa.create_time, 
        	(case when bb.url is not null then bb.url when dd.url then dd.url end) goods_sku_pic,
        	(case when ee.id is not null then ee.seckill_price else sku.online_price end) AS sku_price,
        	sku.market_price,
        	stock.sellable AS sellable_stock,
        	stock.locked AS locked_stock
        from activity_h5_advert_content_goods aa
        LEFT JOIN goods_sku cc ON aa.store_sku_id = cc.id
        LEFT JOIN goods_sku_picture bb ON (aa.store_sku_id = bb.sku_id AND bb.type = 1)
        LEFT JOIN goods_store_sku sku on (
	        <choose>
	        	<when test="goodsType == 1">aa.store_sku_id = sku.sku_id</when>
	        	<otherwise>aa.store_sku_id = sku.id</otherwise>
	        </choose>
        )
        LEFT JOIN goods_store_sku_picture dd ON (sku.id = dd.store_sku_id AND dd.type = 1) 
        LEFT JOIN goods_store_sku_stock stock ON stock.store_sku_id = sku.id
        LEFT JOIN activity_seckill ee ON (ee.store_sku_id = aa.store_sku_id AND seckill_status = 1)
        where 
        	1=1
        <if test="activityId != null">
        	 AND aa.activity_id = #{activityId,jdbcType=VARCHAR}
        </if>	
        <if test="contentId != null">
        	 AND aa.content_id = #{contentId,jdbcType=VARCHAR}
        </if>
        GROUP BY aa.store_sku_id;	
    </select>
    
	
	<!-- begin 根据h5活动id获取便利店商品列表mengsj 20170826-->
	<select id="findBldGoodsByActivityId" resultType="com.okdeer.archive.goods.store.dto.GoodsStoreActivitySkuDto" parameterType="String">
		SELECT
	        sku.id,
			sku.name,
			sku.alias,
			IFNULL(sku.tag_type,0) AS tagType,
			sku.bar_code,
			sku.update_time AS updateTime,
			sku.store_id,
			sku.type,
			if(sa.type=5,asg.sale_price,sku.online_price) AS onlinePrice,
			sku.market_price AS marketPrice,
			if(sa.type=5,asg.trade_max,sku.trade_max) AS tradeMax,
			IFNULL(sku.guaranteed,0) AS guaranteed,
			IFNULL(sku.obsolete,0) AS obsolete,
			sku.properties_indb AS propertiesIndb, 		
			sku.activity_type AS activityType,
			picture.url,
			stock.sellable AS sellableStock,
			asg.sale_price,
			stock.locked AS lockedStock,
			asg.trade_max AS lowPriceUpper,
			sa.limit as limitNum,
			sku.online AS online,
			if(sa.type=5,1,0) isPrivliege
		FROM activity_h5_advert_content_goods s
			INNER JOIN goods_store_sku sku on s.store_sku_id = sku.sku_id
			LEFT JOIN goods_store_sku_plu plu ON plu.store_sku_id = sku.id AND plu.type = 1 AND plu.disabled = 0
			LEFT JOIN goods_store_sku_picture picture ON sku.id = picture.store_sku_id AND picture.type =1
			LEFT JOIN goods_store_sku_stock stock ON stock.`store_sku_id` = sku.`id`
			LEFT JOIN `activity_sale` sa ON sa.`id` = sku.`activity_id` AND sa.status = 1 AND sa.disabled = 0
			LEFT JOIN `activity_sale_goods` asg on sa.id = asg.`sale_id` AND sku.id=asg.store_sku_id
	    WHERE sku.disabled = 0
			AND stock.disabled = 0
			AND sku.`status` = 1
			AND sku.violation = 0
			AND sku.store_id = #{storeId,jdbcType=VARCHAR}
		  	AND s.activity_id = #{activityId,jdbcType=VARCHAR}
		  	AND s.content_id = #{contentId,jdbcType=VARCHAR}
		GROUP BY sku.id 
	</select>
	
	<!-- add by mengsj 查询h5活动关联的服务商品 -->
	<select id="findFwdGoodsByContent" resultType="map" parameterType="java.lang.String">
		select 
			CAST(se.is_collect AS SIGNED) as addSendPrice,
			CAST(se.is_support_purchase AS SIGNED) as canConfirmOrder,
			se.starting_price as fullPrice,
			sku.`name` as goodsName,
			sku.id as goodsStoreSkuId,
			CAST(se.is_starting_price AS SIGNED) as hasFullPrice,
			CAST(se.is_distribution_fee AS SIGNED) as hasSendPrice,
			CAST(se.is_shopping_cart AS SIGNED) as isSupportCart,
			sku.market_price as marketPrice,
			pic.url as picUrl,
			sku.online_price as onlinePrice,
			stock.sellable as sellable,
			se.distribution_fee as sendPrice,
			sku.store_id as skuStoreId,
			CAST(sku.type AS SIGNED) as skuType,
			service.is_shop_num as isShopNum,
			service.shop_num as startBuyNum,
			si.store_name as storeName,
			sku.update_time as updateTime	,
			css.column_server_id as serverColumnId,
			cs .server_name as serverColumnName
		from goods_store_sku sku
			INNER JOIN activity_h5_advert_content_goods g on sku.id = g.store_sku_id
			LEFT JOIN store_info si on (sku.store_id = si.id)
			LEFT JOIN goods_store_sku_stock stock on (sku.id = stock.store_sku_id)
			LEFT JOIN goods_store_sku_picture pic on (sku.id = pic.store_sku_id and pic.type = 1)
			LEFT JOIN goods_store_sku_service service on (sku.id = service.store_sku_id)
			LEFT JOIN store_info_ext ext on (si.id = ext.store_id)
			LEFT JOIN store_service_ext se on (si.id = se.store_id)
			LEFT JOIN column_server_store css on (css.store_id = si.id)
			LEFT JOIN column_server cs on (css.column_server_id = cs.id)
		where 1 = 1 
			<if test="activityId != null and activityId != ''">
		        AND g.activity_id = #{activityId,jdbcType=VARCHAR}
		    </if>
		    <if test="contentId != null and contentId != ''">
		        AND g.content_id = #{contentId,jdbcType=VARCHAR}
		    </if>	
	        ORDER BY g.create_time DESC 
	</select>
    
    <insert id="add" parameterType="com.okdeer.mall.activity.nadvert.entity.ActivityH5AdvertContentGoods" >
        insert into activity_h5_advert_content_goods
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="activityId != null" >
                activity_id,
            </if>
            <if test="contentId != null" >
                content_id,
            </if>
            <if test="godsSkuId != null" >
                store_sku_id,
            </if>
            <if test="picUrl != null" >
                pic_url,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="createUserId != null" >
                create_user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="activityId != null" >
                #{activityId,jdbcType=VARCHAR},
            </if>
            <if test="contentId != null" >
                #{contentId,jdbcType=VARCHAR},
            </if>
            <if test="storeSkuId != null" >
                #{storeSkuId,jdbcType=VARCHAR},
            </if>
            <if test="picUrl != null" >
                #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null" >
                #{createUserId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    
    <insert id="batchSave" parameterType="com.okdeer.mall.activity.nadvert.entity.ActivityH5AdvertContentGoods">
    	INSERT INTO activity_h5_advert_content_goods (<include refid="Base_Column_List" />)
    	VALUES  
	    <foreach collection="list" item="item" index="index" separator="," >  
	        (#{item.id,jdbcType=VARCHAR},
	         #{item.activityId,jdbcType=VARCHAR},
	         #{item.contentId,jdbcType=VARCHAR},
	         #{item.storeSkuId,jdbcType=VARCHAR},
	         #{item.picUrl,jdbcType=VARCHAR},
	         #{item.createTime,jdbcType=TIMESTAMP},
	         #{item.createUserId,jdbcType=VARCHAR})
	    </foreach> 
    </insert>

    <update id="update" parameterType="com.okdeer.mall.activity.nadvert.entity.ActivityH5AdvertContentGoods" >
        update activity_h5_advert_content_goods
        <set >
            <if test="activityId != null" >
                activity_id = #{activityId,jdbcType=VARCHAR},
            </if>
            <if test="contentId != null" >
                content_id = #{contentId,jdbcType=VARCHAR},
            </if>
            <if test="godsSkuId != null" >
                store_sku_id = #{godsSkuId,jdbcType=VARCHAR},
            </if>
            <if test="picUrl != null" >
                pic_url = #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null" >
                create_user_id = #{createUserId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <delete id="delete" parameterType="java.lang.String" >
        delete from activity_h5_advert_content_goods
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    
    <delete id="deleteByActId" parameterType="java.lang.String" >
        delete from activity_h5_advert_content_goods
        where
        	1=1
        <if test="activityId != null">
	       	AND activity_id = #{activityId,jdbcType=VARCHAR}
        </if>	 
        <if test="contentId != null">
	       	AND content_id = #{contentId,jdbcType=VARCHAR}
        </if>	 
    </delete>

</mapper>