<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.okdeer.mall.order.mapper.TradeOrderPayMapper" >
  <resultMap id="BaseResultMap" type="com.okdeer.mall.order.entity.TradeOrderPay" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="TINYINT" javaType="com.okdeer.mall.order.enums.PayTypeEnum"/>
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="returns" property="returns" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, pay_type, pay_amount, pay_time, create_time,returns
  </sql>
  <sql id="condition" >
    <if test="null!=params" >
      <if test="null!=params.queryCondition and ''!=params.queryCondition" >
        ${params.queryCondition}
      </if>
    </if>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from trade_order_pay
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByParams" resultMap="BaseResultMap" parameterType="map" >
    SELECT 
    <include refid="Base_Column_List" />
     FROM trade_order_pay WHERE 1=1 
    <include refid="condition" />
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    DELETE FROM trade_order_pay
    WHERE id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.okdeer.mall.order.entity.TradeOrderPay" >
    insert into trade_order_pay (id, order_id, pay_type, 
      pay_amount, pay_time, create_time,returns
      )
    values (#{id,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{payType,jdbcType=BIT}, 
      #{payAmount,jdbcType=DECIMAL}, #{payTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP},#{returns,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.okdeer.mall.order.entity.TradeOrderPay" >
    insert into trade_order_pay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
       <if test="returns != null" >
        returns,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=BIT},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returns != null" >
        #{returns,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <!-- author yangq 订单支付  begin -->
  <insert id="insertTradeOrderPay" parameterType="com.okdeer.mall.order.entity.TradeOrderPay" >
    insert into trade_order_pay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=BIT},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <!-- author yangq 订单支付 end -->
  
  <update id="updateByPrimaryKeySelective" parameterType="com.okdeer.mall.order.entity.TradeOrderPay" >
    update trade_order_pay
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=BIT},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.okdeer.mall.order.entity.TradeOrderPay" >
    update trade_order_pay
    set order_id = #{orderId,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=BIT},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
   <select id="selectByOrderId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade_order_pay
    where order_id = #{orderId,jdbcType=VARCHAR}
   </select>
   
   <select id="selectTradeOrderPayByOrderId" parameterType="java.lang.String" resultType="int">
      select count(1) from trade_order_pay where order_id = #{orderId,jdbcType=VARCHAR}
   </select>
   
   
   <!-- 根据OrderID集合查询支付信息 -->
  <select id="selectByOrderIds" resultMap="BaseResultMap" parameterType="list" >
    SELECT 
    <include refid="Base_Column_List" />
     FROM trade_order_pay WHERE 1=1 
     <if test="orderIds != null">
          AND order_id  in 
          <foreach collection="orderIds" index="index" item="item" open="(" separator="," close=")">  
              #{item}   
          </foreach>
      </if>
      <!-- 如果ID集合为空，不查询任何数据,1=2会报错 -->
      <if test="orderIds == null">
       AND id = 'a'
      </if>
  </select>
</mapper>