<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.okdeer.mall.order.mapper.TradeOrderMapper">
	<resultMap id="BaseResultMap" type="com.okdeer.mall.order.entity.TradeOrder">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="store_id" property="storeId" jdbcType="VARCHAR" />
		<result column="store_name" property="storeName" jdbcType="VARCHAR" />
		<result column="pid" property="pid" jdbcType="VARCHAR" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderTypeEnum" />
		<result column="pick_up_type" property="pickUpType" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.PickUpTypeEnum" />
		<result column="pick_up_code" property="pickUpCode" jdbcType="VARCHAR" />
		<result column="pick_up_time" property="pickUpTime" jdbcType="VARCHAR" />
		<result column="order_resource" property="orderResource"
			jdbcType="TINYINT" javaType="com.okdeer.mall.order.enums.OrderResourceEnum" />
		<result column="status" property="status" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderStatusEnum" />
		<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
		<result column="actual_amount" property="actualAmount"
			jdbcType="DECIMAL" />
		<result column="income" property="income" jdbcType="DECIMAL" />
		<result column="preferential_price" property="preferentialPrice"
			jdbcType="DECIMAL" />
		<result column="fare" property="fare" jdbcType="DECIMAL" />
		<result column="activity_type" property="activityType"
			jdbcType="TINYINT" javaType="com.okdeer.mall.activity.coupons.enums.ActivityTypeEnum" />
		<result column="activity_id" property="activityId" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="invoice" property="invoice" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.WithInvoiceEnum" />
		<result column="disabled" property="disabled" jdbcType="TINYINT"
			javaType="com.okdeer.base.common.enums.Disabled" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
		<result column="payment_status" property="paymentStatus"
			jdbcType="TINYINT" javaType="com.okdeer.mall.order.enums.PaymentStatusEnum" />
		<result column="delivery_time" property="deliveryTime"
			jdbcType="TIMESTAMP" />
		<result column="received_time" property="receivedTime"
			jdbcType="TIMESTAMP" />
		<result column="pay_way" property="payWay" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.PayWayEnum" />
		<result column="reason" property="reason" jdbcType="VARCHAR" />
		<result column="activity_item_id" property="activityItemId"
			jdbcType="VARCHAR" />
		<result column="pospay" property="pospay" jdbcType="VARCHAR" />
		<result column="pick_up_id" property="pickUpId" jdbcType="VARCHAR" />
		<result column="trade_num" property="tradeNum" jdbcType="VARCHAR" />
		<result column="seller_id" property="sellerId" jdbcType="VARCHAR" />
		<result column="shipments_user_id" property="shipmentsUserId"
			jdbcType="VARCHAR" />
		<result column="is_show" property="isShow" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderIsShowEnum" />
		<result column="is_complete" property="isComplete" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderComplete" />
		<result column="compain_status" property="compainStatus"
			jdbcType="TINYINT" javaType="com.okdeer.mall.order.enums.CompainStatusEnum" />
		<!-- add by zengjiz 2016-9-22 增加消费码状态字断 -->
		<result column="consumer_code_status" property="consumerCodeStatus" jdbcType="TINYINT" />	
		<association property="tradeOrderLogistics"
			javaType="com.okdeer.mall.order.entity.TradeOrderLogistics">
			<result column="logistics_id" property="id" jdbcType="VARCHAR" />
			<result column="logistics_company_name" property="logisticsCompanyName"
				jdbcType="VARCHAR" />
			<result column="logistics_no" property="logisticsNo" jdbcType="VARCHAR" />
			<result column="consignee_name" property="consigneeName"
				jdbcType="VARCHAR" />
			<result column="mobile" property="mobile" jdbcType="VARCHAR" />
			<result column="telephone" property="telephone" jdbcType="VARCHAR" />
			<result column="area" property="area" jdbcType="VARCHAR" />
			<result column="address" property="address" jdbcType="VARCHAR" />
			<result column="logistics_type" property="type" jdbcType="TINYINT" />
		</association>
	</resultMap>

	<resultMap id="BaseTradeOrderDetail" type="com.okdeer.mall.order.entity.TradeOrder">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="store_id" property="storeId" jdbcType="VARCHAR" />
		<result column="pid" property="pid" jdbcType="VARCHAR" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderTypeEnum" />
		<result column="pick_up_type" property="pickUpType" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.PickUpTypeEnum" />
		<result column="pick_up_code" property="pickUpCode" jdbcType="VARCHAR" />
		<result column="pick_up_time" property="pickUpTime" jdbcType="VARCHAR" />
		<result column="order_resource" property="orderResource"
			jdbcType="TINYINT" javaType="com.okdeer.mall.order.enums.OrderResourceEnum" />
		<result column="status" property="status" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderStatusEnum" />
		<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
		<result column="actual_amount" property="actualAmount"
			jdbcType="DECIMAL" />
		<result column="preferential_price" property="preferentialPrice"
			jdbcType="DECIMAL" />
		<result column="fare" property="fare" jdbcType="DECIMAL" />
		<result column="activity_type" property="activityType"
			jdbcType="TINYINT" javaType="com.okdeer.mall.activity.coupons.enums.ActivityTypeEnum" />
		<result column="activity_id" property="activityId" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="invoice" property="invoice" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.WithInvoiceEnum" />
		<result column="disabled" property="disabled" jdbcType="TINYINT"
			javaType="com.okdeer.base.common.enums.Disabled" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
		<result column="payment_status" property="paymentStatus"
			jdbcType="TINYINT" javaType="com.okdeer.mall.order.enums.PaymentStatusEnum" />
		<result column="delivery_time" property="deliveryTime"
			jdbcType="TIMESTAMP" />
		<result column="received_time" property="receivedTime"
			jdbcType="TIMESTAMP" />
		<result column="pay_way" property="payWay" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.PayWayEnum" />
		<result column="reason" property="reason" jdbcType="VARCHAR" />
		<result column="pospay" property="pospay" jdbcType="VARCHAR" />
		<result column="activity_item_id" property="activityItemId"
			jdbcType="VARCHAR" />
		<result column="pick_up_id" property="pickUpId" jdbcType="VARCHAR" />
		<result column="trade_num" property="tradeNum" jdbcType="VARCHAR" />
		<result column="is_show" property="isShow" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderIsShowEnum" />
		<result column="compain_status" property="compainStatus"
			jdbcType="TINYINT" javaType="com.okdeer.mall.order.enums.CompainStatusEnum" />
		<collection property="tradeOrderItem"
			ofType="com.okdeer.mall.order.entity.TradeOrderItem">
			<result column="order_id" property="orderId" jdbcType="VARCHAR" />
			<result column="store_spu_id" property="storeSpuId" jdbcType="VARCHAR" />
			<result column="store_sku_id" property="storeSkuId" jdbcType="VARCHAR" />
			<result column="sku_name" property="skuName" jdbcType="VARCHAR" />
			<result column="properties_indb" property="propertiesIndb"
				jdbcType="VARCHAR" />
			<result column="bar_code" property="barCode" jdbcType="VARCHAR" />
			<result column="style_code" property="styleCode" jdbcType="VARCHAR" />
			<result column="main_pic_prl" property="mainPicPrl" jdbcType="VARCHAR" />
			<result column="spu_type" property="spuType" jdbcType="TINYINT"
				javaType="com.okdeer.archive.goods.base.enums.GoodsTypeEnum" />
			<result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
			<result column="quantity" property="quantity" jdbcType="INTEGER" />
			<result column="weight" property="weight" jdbcType="DECIMAL" />
			<result column="service_assurance" property="serviceAssurance"
				jdbcType="TINYINT" />
			<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
			<result column="actual_amount" property="actualAmount"
				jdbcType="DECIMAL" />
			<result column="preferential_price" property="preferentialPrice"
				jdbcType="DECIMAL" />
			<result column="appraise" property="appraise" jdbcType="TINYINT"
				javaType="com.okdeer.mall.order.enums.AppraiseEnum" />
			<result column="bar_code" property="barCode" jdbcType="VARCHAR" />
			<result column="sty_code" property="styleCode" jdbcType="VARCHAR" />
		</collection>
	</resultMap>

	<!-- 交班统计 -->
	<resultMap id="PosShiftExchangeResultMap"
		type="com.okdeer.archive.system.pos.entity.PosShiftExchange">
		<result column="onlineOrderTotal" property="onlineOrderTotal"
			jdbcType="DECIMAL" />
		<result column="payDelivery" property="payDelivery" jdbcType="DECIMAL" />
		<result column="posTotalSales" property="posTotalSales"
			jdbcType="DECIMAL" />
		<result column="deliverFee" property="deliverFee" jdbcType="DECIMAL" />
		<result column="actualCashTotal" property="actualCashTotal"
			jdbcType="DECIMAL" />
	</resultMap>

	<!-- 用户订单列表查询 zhongy start -->
	<!-- <resultMap id="UserTradeOrderMap" type="com.okdeer.mall.order.vo.UserTradeOrderVo" 
		extends="BaseResultMap"> <result column="store_id" property="storeId" jdbcType="VARCHAR" 
		/> <result column="store_name" property="storeName" jdbcType="VARCHAR" /> 
		</resultMap> -->
	<!-- 用户订单列表查询 zhongy end -->


	<!-- 用户app订单详细 zhongy start -->
	<resultMap id="UserTradeOrderDetailMap"
		type="com.okdeer.mall.order.vo.UserTradeOrderDetailVo" extends="BaseResultMap">
		<!-- 订单下单倒计时 -->
		<result column="remaining_time" property="remainingTime"
			jdbcType="INTEGER" />
		<!-- 关联支付信息 -->
		<association property="tradeOrderPay"
			javaType="com.okdeer.mall.order.entity.TradeOrderPay">
			<result column="pay_type" property="payType" jdbcType="TINYINT"
				javaType="com.okdeer.mall.order.enums.PayTypeEnum" />
			<result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
			<result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
		</association>
		<!-- 关联发票信息 -->
		<association property="tradeOrderInvoice"
			javaType="com.okdeer.mall.order.entity.TradeOrderInvoice">
			<id column="invoice_id" property="id" jdbcType="VARCHAR" />
			<result column="head" property="head" jdbcType="VARCHAR" />
			<result column="context" property="context" jdbcType="VARCHAR" />
		</association>
		<!-- 店铺信息 -->
		<association property="storeInfo"
			javaType="com.okdeer.archive.store.entity.StoreInfo">
			<id column="store_id" property="id" jdbcType="VARCHAR" />
			<result column="store_name" property="storeName" jdbcType="VARCHAR" />
			<result column="store_mobile" property="mobile" jdbcType="VARCHAR" />
			<result column="store_area" property="area" jdbcType="VARCHAR" />
			<result column="store_address" property="address" jdbcType="VARCHAR" />
			<result column="store_type" property="type" jdbcType="TINYINT"
				javaType="com.okdeer.archive.store.enums.StoreTypeEnum" />
			<association property="storeInfoExt"
				javaType="com.okdeer.archive.store.entity.StoreInfoExt">
				<id column="storeExtId" property="id" jdbcType="VARCHAR" />
				<result column="servicePhone" property="servicePhone"
					jdbcType="VARCHAR" />
			</association>
		</association>
	</resultMap>
	<!-- 用户app订单详细 zhongy end -->

	<resultMap id="TradeOrderPayMap" type="com.okdeer.mall.order.entity.TradeOrder"
		extends="BaseResultMap">
		<association property="tradeOrderPay"
			javaType="com.okdeer.mall.order.entity.TradeOrderPay">
			<result column="pay_type" property="payType" jdbcType="TINYINT" />
			<result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
			<result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
			<result column="pay_create_time" property="createTime"
				jdbcType="TIMESTAMP" />
		</association>
		<association property="tradeOrderInvoice"
			javaType="com.okdeer.mall.order.entity.TradeOrderInvoice">
			<result column="head" property="head" jdbcType="VARCHAR" />
			<result column="context" property="context" jdbcType="VARCHAR" />
		</association>
	</resultMap>

	<!-- zengj:订单ResultMap -->
	<resultMap id="TradeOrderMap" type="com.okdeer.mall.order.entity.TradeOrder"
		extends="BaseResultMap">
		<id property="id" column="id" jdbcType="VARCHAR" />
		<!-- 操作人用户信息 -->
		<association property="sysUser"
			javaType="com.okdeer.archive.system.entity.SysUser">
			<result column="user_name" property="userName" jdbcType="VARCHAR" />
			<result column="login_name" property="loginName" jdbcType="VARCHAR" />
		</association>
		<!-- 支付信息 -->
		<association property="tradeOrderPay"
			javaType="com.okdeer.mall.order.entity.TradeOrderPay">
			<result column="pay_type" property="payType" jdbcType="TINYINT" />
			<result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
			<result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
			<result column="pay_create_time" property="createTime"
				jdbcType="TIMESTAMP" />
		</association>
		<!-- 发票信息 -->
		<association property="tradeOrderInvoice"
			javaType="com.okdeer.mall.order.entity.TradeOrderInvoice">
			<result column="head" property="head" jdbcType="VARCHAR" />
			<result column="context" property="context" jdbcType="VARCHAR" />
		</association>
		<!-- 订单项信息 -->
		<collection property="tradeOrderItem"
			ofType="com.okdeer.mall.order.entity.TradeOrderItem" select="selectOrderItemList"
			column="{orderId = id}">
			<id column="item_id" property="id" jdbcType="VARCHAR" />
			<result column="order_id" property="orderId" jdbcType="VARCHAR" />
			<result column="store_spu_id" property="storeSpuId" jdbcType="VARCHAR" />
			<result column="store_sku_id" property="storeSkuId" jdbcType="VARCHAR" />
			<result column="sku_name" property="skuName" jdbcType="VARCHAR" />
			<result column="properties_indb" property="propertiesIndb"
				jdbcType="VARCHAR" />
			<result column="bar_code" property="barCode" jdbcType="VARCHAR" />
			<result column="style_code" property="styleCode" jdbcType="VARCHAR" />
			<result column="main_pic_prl" property="mainPicPrl" jdbcType="VARCHAR" />
			<result column="spu_type" property="spuType" jdbcType="TINYINT"
				javaType="com.okdeer.archive.goods.base.enums.GoodsTypeEnum" />
			<result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
			<result column="quantity" property="quantity" jdbcType="INTEGER" />
			<result column="service_assurance" property="serviceAssurance"
				jdbcType="INTEGER" />
			<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
			<result column="actual_amount" property="actualAmount"
				jdbcType="DECIMAL" />
			<result column="preferential_price" property="preferentialPrice"
				jdbcType="DECIMAL" />
			<result column="status" property="status" jdbcType="TINYINT"
				javaType="com.okdeer.mall.order.enums.OrderItemStatusEnum" />
			<result column="appraise" property="appraise" jdbcType="TINYINT"
				javaType="com.okdeer.mall.order.enums.AppraiseEnum" />
			<result column="compain_status" property="compainStatus"
				jdbcType="TINYINT" javaType="com.okdeer.mall.order.enums.CompainStatusEnum" />
			<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
			<result column="bar_code" property="barCode" jdbcType="VARCHAR" />
			<result column="sty_code" property="styleCode" jdbcType="VARCHAR" />
			<result column="trade_num" property="trade_num" jdbcType="VARCHAR" />
			<result column="weight" property="weight" jdbcType="DECIMAL" />
			<result column="income" property="income" jdbcType="DECIMAL" />
			<!-- 订单项详情信息，服务订单特有属性 -->
			<collection property="tradeOrderItemDetails"
				ofType="com.okdeer.mall.order.entity.TradeOrderItemDetail">
				<result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
				<result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
				<result column="consume_code" property="consumeCode"
					jdbcType="VARCHAR" />
				<result column="consume_status" property="status" jdbcType="TINYINT"
					javaType="com.okdeer.mall.order.enums.ConsumeStatusEnum" />
			</collection>
		</collection>
	</resultMap>

	<!-- 订单列表 -财务系统接口调用 -luosm start -->
	<resultMap id="ERPOrderResultMap" type="com.okdeer.mall.order.vo.ERPTradeOrderVo">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderTypeEnum" />
		<result column="store_name" property="storeName" jdbcType="VARCHAR" />
		<result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
		<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
		<result column="actual_amount" property="actualAmount"
			jdbcType="DECIMAL" />
		<result column="preferential_price" property="preferentialPrice"
			jdbcType="DECIMAL" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="pay_way" property="payWay" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.PayWayEnum" />
		<result column="status" property="status" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderStatusEnum" />
		<result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
		<result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
		<result column="order_resource" property="orderResource"
			jdbcType="TINYINT" javaType="com.okdeer.mall.order.enums.OrderResourceEnum" />
		<result column="pay_type" property="payType" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.PayTypeEnum" />
	</resultMap>
	<!-- 订单列表 -财务系统接口调用 -luosm end -->
	<sql id="Erp_column_list">
		id,order_no,type,store_name,user_phone,total_amount,actual_amount,preferential_price,create_time,pay_way,status
	</sql>

	<resultMap id="TradeOrderItemMap" type="com.okdeer.mall.order.entity.TradeOrderItem">
		<result column="sku_name" property="skuName" jdbcType="VARCHAR" />
		<result column="main_pic_prl" property="mainPicPrl" jdbcType="VARCHAR" />
		<result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
		<result column="quantity" property="quantity" jdbcType="INTEGER" />
		<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
		<result column="actual_amount" property="actualAmount"
			jdbcType="DECIMAL" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="bar_code" property="barCode" jdbcType="VARCHAR" />
		<result column="style_code" property="styleCode" jdbcType="VARCHAR" />
		<result column="order_id" property="orderId" jdbcType="VARCHAR" />
		<result column="properties_indb" property="propertiesIndb"
			jdbcType="VARCHAR" />
		<result column="spu_type" property="spuType" jdbcType="VARCHAR" />
		<result column="store_sku_id" property="storeSkuId" jdbcType="VARCHAR" />
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="refunds_status" property="refundsStatus"
			jdbcType="VARCHAR" />
		<result column="trade_num" property="trade_num" jdbcType="VARCHAR" />
		<result column="weight" property="weight" jdbcType="DECIMAL" />
		<result column="income" property="income" jdbcType="DECIMAL" />
		<result column="categoryName" property="categoryName" jdbcType="VARCHAR" />

		<association property="tradeOrderRefunds"
			javaType="com.okdeer.mall.order.entity.TradeOrderRefunds">
			<result column="refunds_id" property="id" />
			<result column="refund_no" property="refundNo" />
		</association>
		<collection property="tradeOrderItemDetails"
			ofType="com.okdeer.mall.order.entity.TradeOrderItemDetail">
			<result column="detail_id" property="id" jdbcType="VARCHAR" />
			<result column="consume_code" property="consumeCode" jdbcType="VARCHAR" />
			<result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
			<result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
			<result column="detail_status" property="status" jdbcType="TINYINT"
				javaType="com.okdeer.mall.order.enums.ConsumeStatusEnum" />
		</collection>
	</resultMap>

	<resultMap id="ActivityAndOrderItemMap" type="com.okdeer.mall.order.entity.TradeOrder"
		extends="BaseResultMap">

		<!-- 关联订单项信息 -->
		<collection property="tradeOrderItem"
			ofType="com.okdeer.mall.order.entity.TradeOrderItem">
			<result column="item_id" property="id" jdbcType="VARCHAR" />
			<result column="item_unit_price" property="unitPrice"
				jdbcType="DECIMAL" />
			<result column="item_quantity" property="quantity" jdbcType="INTEGER" />
			<result column="item_total_amount" property="totalAmount"
				jdbcType="DECIMAL" />
			<result column="item_actual_amount" property="actualAmount"
				jdbcType="DECIMAL" />
			<result column="item_preferential_price" property="preferentialPrice"
				jdbcType="DECIMAL" />
		</collection>
	</resultMap>

	<resultMap id="TradeOrderItemDetailMap" type="com.okdeer.mall.order.entity.TradeOrder"
		extends="BaseResultMap">
		<!-- 交易订单项消费详细表(仅服务型商品有) -->
		<collection property="tradeOrderItemDetail"
			ofType="com.okdeer.mall.order.entity.TradeOrderItemDetail">
			<result column="id" property="id" jdbcType="VARCHAR" />
			<result column="order_item_id" property="orderItemId"
				jdbcType="VARCHAR" />
			<result column="consume_code" property="consumeCode" jdbcType="VARCHAR" />
			<result column="status" property="status" jdbcType="TINYINT"
				javaType="com.okdeer.mall.order.enums.ConsumeStatusEnum" />
			<result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
			<result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
			<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		</collection>
	</resultMap>

	<resultMap id="TradeOrderStatusVoMap" type="com.okdeer.mall.order.vo.TradeOrderStatusVo">
		<result column="status" property="status" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderStatusEnum" />
		<result column="status_name" property="statusName" jdbcType="VARCHAR" />
		<result column="count" property="count" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="PhysicsOrderVoMap" type="com.okdeer.mall.order.vo.PhysicsOrderVo">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="store_id" property="storeId" jdbcType="VARCHAR" />
		<result column="store_name" property="storeName" jdbcType="VARCHAR" />
		<result column="agent_id" property="agentId" jdbcType="VARCHAR" />
		<result column="full_name" property="fullName" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="TINYINT"
			javaType="com.okdeer.archive.store.enums.StoreTypeEnum" />
		<result column="actual_amount" property="actualAmount"
			jdbcType="DECIMAL" />
		<result column="pay_type" property="payType" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderPayTypeEnum" />
		<result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderStatusEnum" />
		<result column="order_resource" property="orderResource"
			jdbcType="TINYINT" javaType="com.okdeer.mall.order.enums.OrderResourceEnum" />
		<result column="pay_way" property="payWay" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.PayWayEnum" />
		<result column="pick_up_time" property="pickUpTime" jdbcType="VARCHAR" />
	</resultMap>

	<!-- 服务订单列表Vo zhongy start -->
	<resultMap id="UserServiceOrderMap"
		type="com.okdeer.mall.order.vo.UserTradeServiceOrderVo">
		<result column="id" property="orderId" jdbcType="VARCHAR" />
		<result column="main_pic_prl" property="mainPicPrl" jdbcType="VARCHAR" />
		<result column="sku_name" property="skuName" jdbcType="VARCHAR" />
		<result column="unit_price" property="unitPrice" jdbcType="VARCHAR" />
		<result column="quantity" property="quantity" jdbcType="TINYINT" />
		<result column="actual_amount" property="actualAmount"
			jdbcType="DECIMAL" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="store_name" property="storeName" jdbcType="VARCHAR" />
		<result column="order_status" property="orderStatus" jdbcType="TINYINT" />
		<result column="compain_status" property="compainStatus"
			jdbcType="TINYINT" />
		<result column="appraise" property="appraise" jdbcType="TINYINT" />
		<result column="status" property="status" jdbcType="TINYINT" />
	</resultMap>
	<!-- 服务订单列表 zhongy end -->

	<!-- zengj:订单Vo -->
	<resultMap id="TradeOrderVo" type="com.okdeer.mall.order.vo.TradeOrderVo"
		extends="BaseResultMap">
		<result column="goods_count" property="goodsCount" jdbcType="INTEGER" />
		<result column="goods_type_count" property="goodsTypeCount"
			jdbcType="INTEGER" />
		<result column="refunds_count" property="refundsCount"
			jdbcType="INTEGER" />
		<!-- 关联支付信息 -->
		<association property="tradeOrderPay"
			javaType="com.okdeer.mall.order.entity.TradeOrderPay">
			<id column="pay_id" property="id" jdbcType="VARCHAR" />
			<result column="pay_type" property="payType" jdbcType="TINYINT" />
			<result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
		</association>
		<!-- 关联发票信息 -->
		<association property="tradeOrderInvoice"
			javaType="com.okdeer.mall.order.entity.TradeOrderInvoice">
			<id column="invoice_id" property="id" jdbcType="VARCHAR" />
			<result column="head" property="head" jdbcType="VARCHAR" />
			<result column="context" property="context" jdbcType="VARCHAR" />
		</association>
		<!-- 关联收货地址信息 -->
		<association property="tradeOrderLogistics"
			javaType="com.okdeer.mall.order.entity.TradeOrderLogistics">
			<result column="logistics_id" property="id" jdbcType="VARCHAR" />
			<result column="order_id" property="orderId" jdbcType="VARCHAR" />
			<result column="logisticsType" property="type" jdbcType="BIT"
				javaType="com.okdeer.mall.common.enums.LogisticsType" />
			<result column="consignee_name" property="consigneeName"
				jdbcType="VARCHAR" />
			<result column="province_id" property="provinceId" jdbcType="VARCHAR" />
			<result column="city_id" property="cityId" jdbcType="VARCHAR" />
			<result column="area_id" property="areaId" jdbcType="VARCHAR" />
			<result column="area" property="area" jdbcType="VARCHAR" />
			<result column="address" property="address" jdbcType="VARCHAR" />
			<result column="zip_code" property="zipCode" jdbcType="VARCHAR" />
			<result column="telephone" property="telephone" jdbcType="VARCHAR" />
			<result column="mobile" property="mobile" jdbcType="VARCHAR" />
			<result column="logistics_company_name" property="logisticsCompanyName"
				jdbcType="VARCHAR" />
			<result column="logistics_no" property="logisticsNo" jdbcType="VARCHAR" />
		</association>
		<!-- 关联订单项信息 -->
		<collection property="tradeOrderItemVoList"
			ofType="com.okdeer.mall.order.vo.TradeOrderItemVo">
			<id column="item_id" property="id" jdbcType="VARCHAR" />
			<result column="sku_name" property="skuName" jdbcType="VARCHAR" />
			<result column="main_pic_prl" property="mainPicPrl" jdbcType="VARCHAR" />
			<result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
			<result column="quantity" property="quantity" jdbcType="DECIMAL" />
			<result column="store_sku_id" property="storeSkuId" jdbcType="VARCHAR" />
			<result column="properties_indb" property="propertiesIndb"
				jdbcType="VARCHAR" />
			<result column="refunds_item_id" property="refundsItemId"
				jdbcType="VARCHAR" />
			<result column="refunds_status" property="refundsStatus"
				jdbcType="VARCHAR" />
			<result column="service_assurance" property="serviceAssurance"
				jdbcType="INTEGER" />
			<!-- 订单项详情信息，服务订单特有属性 -->
			<collection property="tradeOrderItemDetails"
				ofType="com.okdeer.mall.order.entity.TradeOrderItemDetail">
				<id column="detail_id" property="id" jdbcType="VARCHAR" />
				<result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
				<result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
				<result column="use_time" property="useTime" jdbcType="TIMESTAMP" />
				<result column="consume_code" property="consumeCode"
					jdbcType="VARCHAR" />
				<result column="detail_status" property="status" jdbcType="TINYINT"
					javaType="com.okdeer.mall.order.enums.ConsumeStatusEnum" />
			</collection>
		</collection>
	</resultMap>

	<!-- add by zhulq 充值订单 -->
	<resultMap id="RechargeOrderVoMap"
		type="com.okdeer.mall.order.entity.TradeOrderRechargeVo">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="sku_name" property="goodsName" jdbcType="VARCHAR" />
		<result column="recharge_mobile" property="rechargePhone"
			jdbcType="VARCHAR" />
		<result column="actual_amount" property="actualAmount"
			jdbcType="DECIMAL" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="type" property="orderType" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderTypeEnum" />
		<result column="pay_type" property="payType" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderPayTypeEnum" />
		<result column="status" property="status" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderStatusEnum" />
		<result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
		<result column="quantity" property="quantity" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
	</resultMap>
	<!-- add by zhulq -->

	<!-- 交易订单 首页 统计 -->
	<resultMap id="TradeOrderStatisticsVoMap"
		type="com.okdeer.mall.order.vo.TradeOrderStatisticsVo">
		<result column="order_counts" property="orderCounts" jdbcType="INTEGER" />
		<result column="order_total_amount" property="orderTotalAmount"
			jdbcType="DECIMAL" />
		<result column="user_counts" property="userCounts" jdbcType="INTEGER" />
		<result column="order_refunds_counts" property="orderRefundsCounts"
			jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		id, user_id, store_id, pid, order_no, type, pick_up_type, pick_up_code,
		pick_up_time,order_resource, is_complete,
		status, total_amount, actual_amount, preferential_price, fare, activity_type,
		activity_id, activity_item_id,pay_way,
		remark, invoice, disabled, create_time,
		update_time,is_show,pospay,reason,trade_num,user_phone,payment_status,payment_time,income,seller_id,shipments_user_id,consumer_code_status
	</sql>

	<sql id="order_column_list">
		it.id,it.sku_name,it.main_pic_prl,it.unit_price,it.quantity,it.actual_amount,it.status,it.bar_code,it.style_code,it.order_id,it.properties_indb,it.spu_type,it.store_sku_id,
		tor.refunds_status,tor.id as refunds_id,tor.refund_no,tori.weight,
		td.id as detail_id,td.status as
		detail_status,td.start_time,td.end_time,td.consume_code
	</sql>

	<sql id="order_pay_column_list">
		tr.*,op.pay_type,op.pay_time,su.login_name,su.user_name
	</sql>

	<sql id="collect_column_list">
		tr.id,tr.order_no,tr.create_time,op.properties_indb,
	</sql>

	<sql id="condition">
		<if test="null!=params">
			<if test="null!=params.queryCondition and ''!=params.queryCondition">
				${params.queryCondition}
			</if>
		</if>
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from trade_order
		where id = #{id,jdbcType=VARCHAR}
	</select>

	<!-- 财务系统接口-通过订单id查询订单详情 luosm start 12050 update by wusw 20160810 12051 
		update by wusw 20160811 -->
	<select id="selectByOrderId" resultType="com.okdeer.mall.order.entity.TradeOrder"
		parameterType="java.lang.String">
		SELECT o.id,
		o.`status`,
		o.reason,
		o.update_time AS updateTime,
		o.store_name AS storeName,
		i.type AS storeType,
		i.mobile AS storeMobile,
		o.remark,
		o.pick_up_type AS pickUpType,
		o.pick_up_time AS pickUpTime,
		d.`name` AS activityName,
		o.preferential_price AS preferentialPrice,
		o.order_no AS orderNo,
		o.pay_way AS payWay,
		o.create_time AS createTime,
		o.delivery_time AS deliveryTime,
		o.total_amount AS totalAmount,
		o.fare,
		o.actual_amount AS actualAmount,
		o.activity_id AS activityId,
		o.activity_type AS activityType
		FROM
		trade_order o
		LEFT JOIN store_info i ON o.store_id = i.id
		LEFT JOIN activity_discount d on o.activity_id = d.id
		WHERE 1 = 1
		AND o.id = #{id,jdbcType=VARCHAR}
	</select>
	<!-- 通过订单id查询订单详情 luosm end -->

	<select id="selectByParams" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from trade_order
		where 1=1
		<if test="pickUpCode != null and pickUpCode != ''">
			and pick_up_code = #{pickUpCode, jdbcType=VARCHAR}
		</if>
		<if test="storeId != null and storeId != ''">
			and store_id = #{storeId, jdbcType=VARCHAR}
		</if>
		<if test="orderId != null and orderId != ''">
			and order_id = #{orderId, jdbcType=VARCHAR}
		</if>
	</select>

	<select id="selectByParamsTrade" resultMap="BaseResultMap"
		parameterType="string">
		select
		<include refid="Base_Column_List" />
		from trade_order where 1=1
		AND trade_num = #{tradeNum,jdbcType=VARCHAR}
	</select>

	<sql id="order_params_condition">
		<if test="null!=params">
			<if test="null!=params.payType">
				AND op.pay_type = #{params.payType}
			</if>
			<if test="null!=params.skuName and ''!= params.skuName">
				AND it.sku_name = #{params.skuName}
			</if>
			<if test="null!=params.storeId and ''!= params.storeId">
				AND tr.store_id = #{params.storeId}
			</if>
			<if test="null!=params.orderNo and ''!= params.orderNo">
				AND tr.order_no = #{orderNo}
			</if>
			<if test="null!=params.userId and ''!= params.userId">
				AND tr.userId = #{params.userId}
			</if>
			<if test="null!=params.startCreateTime">
			    <![CDATA[ AND tr.create_time >= #{params.startCreateTime} ]]>
			</if>
			<if test="null!=params.endCreateTime">
			    <![CDATA[ AND tr.create_time >= #{params.endCreateTime} ]]>
			</if>
			<if test="null!=params.queryCondition and ''!=params.queryCondition">
				${params.queryCondition}
			</if>
		</if>
	</sql>

	<sql id="order_condition">
		<if test="null!=orderId and ''!= orderId">
			AND tr.id = #{orderId}
		</if>
		<if test="null!=orderNo and ''!= orderNo">
			AND tr.order_No like CONCAT('%',#{orderNo},'%')
		</if>
		<if test="storeId != null and storeId !=''">
			AND tr.store_id = #{storeId}
		</if>
		<if test="orderResource != null">
			AND tr.order_resource = #{orderResource}
		</if>
	</sql>

	<sql id="refund_order_condition">
		<if test="null!=orderId and ''!= orderId">
			AND tr.id = #{orderId}
		</if>
		<!-- 该条件为POS退款查询订单项信息，不能模糊搜索，只能精确匹配，但是XS有可能不会传过来(POS输入没有字母，但是扫描枪能扫描)，所以做前匹配 -->
		<if test="null!=orderNo and ''!= orderNo">
			AND tr.order_No like concat('%',#{orderNo})
		</if>
		<if test="storeId != null and storeId !=''">
			AND tr.store_id = #{storeId}
		</if>
		<if test="orderResource != null">
			AND tr.order_resource = #{orderResource}
		</if>
	</sql>


	<sql id="order_paytype_condition">
		<if test="null!=skuName and '' !=skuName">
			AND EXISTS(SELECT 1 FROM trade_order_item i WHERE tr.id = i.order_id AND
			i.sku_name like CONCAT('%',#{skuName,jdbcType=VARCHAR},'%'))
		</if>
		<if test="null != payType">
			<!-- 如果支付方式是现金支付的，付款表是没记录的，所以需要查询货到付款和线下支付的订单 -->
			<if test="payType == 4">
				AND tr.pay_way in(1,3)
			</if>
			<!-- 否则根据支付类型查询支付表的支付类型 -->
			<if test="payType != 4 and payType != -1">
				AND op.pay_type = #{payType}
			</if>
			<!-- 查询未支付信息 -->
			<if test="payType == -1">
				AND (tr.pay_way in (0,2) and op.pay_type is null and tr.status
				in(0,11))
			</if>
		</if>
		<if test="null != storeId and '' != storeId">
			AND tr.store_id = #{storeId}
		</if>
		<if test="null!=orderResource">
			AND tr.order_resource = #{orderResource,jdbcType=TINYINT}
		</if>
		<if test="null != orderNo and '' != orderNo">
			AND tr.order_no like CONCAT('%',#{orderNo},'%')
		</if>
		<if test="null != userPhone and '' != userPhone">
			AND tr.user_phone like CONCAT('%',#{userPhone},'%')
		</if>
		<if test="null != status">
			AND tr.status in
			<foreach collection="status" index="index" item="item" open="("
				close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<!-- 订单来源，多个时使用IN -->
		<if test="null!=orderResources">
			AND tr.order_resource IN
			<foreach collection="orderResources" index="index" item="item"
				open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="null != type">
			AND tr.type = #{type}
		</if>
		<if test="null != startCreateTime">
			    <![CDATA[ AND tr.create_time >= #{startCreateTime} ]]>
		</if>
		<if test="null != endCreateTime">
			    <![CDATA[ AND tr.create_time <= #{endCreateTime} ]]>
		</if>
		<if test="null != orderIds">
			AND tr.id IN
			<foreach collection="orderIds" index="index" item="item"
				open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
	</sql>

	<!-- zengj:订单搜索导出的排序 -->
	<sql id="order_paytype_orderby">
		<!-- 根据页面不同的页签有不同的排序 -->
		<if test="tabs != null and tabs != ''">
			<!-- 所有订单页签，排序规则为 未发货、已发货、等待买家付款、交易成功、买家拒收、交易关闭. 在相同状态下（如在未付款状态下），排序规则为时间顺序排序，时间越接近于当前时间排在越后 -->
			<if test="tabs == 'all'">
				order by (case
				when tr.`status` = 1 then 0
				when tr.`status` = 3 then 1
				when tr.`status` in(0,11) then 2
				when tr.`status` in(2,4,5,12,13) then 3
				when tr.`status` in(6,10) then 4
				end),tr.create_time asc
			</if>
			<!-- 待付款页签，排序规则为 下单时间倒叙，最新的订单排最前面 -->
			<if test="tabs == 'unpaid'">
				order by tr.create_time desc
			</if>
			<!-- 待发货页签，排序规则为 时间升序，越早下的订单排越前面 -->
			<if test="tabs == 'dropshipping'">
				order by tr.create_time asc
			</if>
			<!-- 已发货页签，排序规则为 发货时间倒叙，最新发货的订单排最前面 -->
			<if test="tabs == 'shipping'">
				order by tr.delivery_time desc
			</if>
			<!-- 交易成功页签，交易关闭页签 排序规则为最后修改时间倒叙，最新的订单在最前面 -->
			<if test="tabs == 'finished' or tabs == 'closed'">
				order by tr.update_time desc
			</if>
		</if>
		<!-- 默认排序 -->
		<if test="tabs == null or tabs == ''">
			order by tr.create_time asc
		</if>
	</sql>

	<sql id="order_params_paytype_condition">
		<if test="null!=params">
			<if test="null!=payType">
				AND op.pay_type = #{payType}
			</if>
			<if test="null!=params.queryCondition and ''!=params.queryCondition">
				${params.queryCondition}
			</if>
		</if>
	</sql>

	<select id="selectTraderOrderList" resultMap="TradeOrderItemMap"
		parameterType="map">
		SELECT
		<include refid="order_column_list" />
		FROM trade_order AS tr LEFT JOIN trade_order_item it
		ON tr.id=it.order_id LEFT JOIN trade_order_pay op ON op.order_id=tr.id
		LEFT JOIN trade_order_refunds_item tori ON tori.order_item_id = it.id
		LEFT JOIN trade_order_refunds tor ON tori.refunds_id=tor.id
		LEFT JOIN trade_order_item_detail td ON td.order_item_id = it.id
		WHERE 1=1
		<include refid="order_condition" />
		ORDER BY
		tr.create_time
		DESC
	</select>

	<select id="findTraderOrderList" resultMap="TradeOrderItemMap"
		parameterType="map">
		SELECT
		it.id,it.sku_name,it.main_pic_prl,it.unit_price,it.quantity,it.actual_amount,it.status,it.bar_code,it.style_code,it.order_id,it.properties_indb,it.spu_type,it.store_sku_id,
		it.weight, it.income
		FROM trade_order AS tr LEFT JOIN trade_order_item it
		ON tr.id=it.order_id
		WHERE 1=1
		<include refid="refund_order_condition" />
		ORDER BY
		tr.create_time
		DESC
	</select>

	<!-- 用户订单列表查询 zhongy start -->
	<select id="selectUserOrderList" resultMap="BaseResultMap"
		parameterType="map">
		SELECT store.id as store_id,store.store_name,
		o.id,o.order_no,o.status,o.remark,o.total_amount,o.trade_num,o.user_id,o.actual_amount,o.preferential_price,o.fare,
		o.pick_up_type,o.pick_up_time,o.create_time,
		logistics.logistics_no,logistics.type as logistics_type
		FROM
		trade_order o
		LEFT JOIN trade_order_logistics logistics on logistics.order_id = o.id
		LEFT JOIN store_info store ON o.store_id = store.id
		WHERE o.is_show = 1
		<if test="null!=params">
			<if test="null != params.skuName and '' != params.skuName">
				AND o.id in (select item.order_id from trade_order_item item where
				item.sku_name like CONCAT('%',#{params.skuName},'%'))
			</if>
			<!-- 关键字查询，关键字包含商品名称和订单编号 -->
			<if test="null != params.keyword and '' != params.keyword">
				AND (o.id in (select item.order_id from trade_order_item item where
				item.sku_name like CONCAT('%',#{params.keyword},'%'))
				OR o.order_no like CONCAT('%',#{params.keyword},'%')
				)
			</if>
			<if test="null != params.userId and params.userId != ''">
				AND o.user_id = #{params.userId,jdbcType=VARCHAR}
			</if>
			<if test="params.status != null ">
				AND o.status in
				<foreach collection="params.status" open="(" close=")"
					index="index" item="item" separator=",">
					#{item}
				</foreach>
			</if>
			<if test="null != params.type">
				AND o.type = #{params.type,jdbcType=TINYINT}
			</if>
			<if test="null != params.orderNo and '' != params.orderNo">
				AND o.order_no = #{params.orderNo,jdbcType=VARCHAR}
			</if>
			<if test="null != params.activityType">
				AND o.activity_type != #{params.activityType,jdbcType=TINYINT}
			</if>
			<if test="null != params.storeType">
				AND store.type = #{params.storeType,jdbcType=TINYINT}
			</if>
		</if>
		ORDER BY o.create_time desc
	</select>
	<!-- 用户订单列表查询 zhongy end -->

	<!-- 用户未评价订单列表查询 zhongy start -->
	<select id="selectUserIsCommentOrderList" resultMap="BaseResultMap"
		parameterType="map">
		select * from
		(SELECT store.id as store_id,store.store_name,
		o.id,o.order_no,o.status,o.remark,o.total_amount,o.actual_amount,o.preferential_price,o.fare,o.pick_up_type,o.pick_up_time,
		logistics.logistics_no,logistics.type as
		logistics_type,o.create_time,(select count(0) from trade_order_comment
		toc where toc.order_id=o.id) as is_comment
		FROM trade_order o
		LEFT JOIN trade_order_logistics logistics on logistics.order_id = o.id
		LEFT JOIN store_info store ON o.store_id = store.id
		WHERE o.is_show = 1
		AND o.status = 5
		<if test="null!=params">
			<if test="null != params.skuName and '' != params.skuName">
				AND o.id in (select item.order_id from trade_order_item
				item where item.sku_name like CONCAT('%',#{params.skuName},'%')
			</if>
			<if test="null != params.userId and params.userId != ''">
				AND o.user_id = #{params.userId,jdbcType=VARCHAR}
			</if>
			<if test="null != params.type">
				AND o.type = #{params.type,jdbcType=TINYINT}
			</if>
			<if test="null != params.orderNo and '' != params.orderNo">
				AND o.order_no = #{params.orderNo,jdbcType=VARCHAR}
			</if>
		</if>
		) wf
		where wf.is_comment = 0
		order by wf.create_time DESC
	</select>
	<!-- 用户未评价订单列表查询 zhongy end -->

	<!-- begin 用户未评价服务店订单列表查询 add by wushp -->
	<select id="findNotCommentServiceOrderList" resultMap="BaseResultMap"
		parameterType="map">
		select * from
		(SELECT store.id as store_id,store.store_name,
		o.id,o.order_no,o.status,o.remark,o.total_amount,o.actual_amount,o.preferential_price,o.fare,o.pick_up_type,o.pick_up_time,
		logistics.logistics_no,logistics.type as
		logistics_type,o.create_time,(select count(0) from trade_order_comment
		toc where toc.order_id=o.id) as is_comment
		FROM trade_order o
		LEFT JOIN trade_order_logistics logistics on logistics.order_id = o.id
		LEFT JOIN store_info store ON o.store_id = store.id
		WHERE o.is_show = 1
		AND o.status = 5
		<if test="null!=params">
			<if test="null != params.skuName and '' != params.skuName">
				AND o.id in (select item.order_id from trade_order_item
				item where item.sku_name like CONCAT('%',#{params.skuName},'%')
			</if>
			<if test="null != params.userId and params.userId != ''">
				AND o.user_id = #{params.userId,jdbcType=VARCHAR}
			</if>
			<if test="null != params.type">
				AND o.type = #{params.type,jdbcType=TINYINT}
			</if>
			<if test="null != params.orderNo and '' != params.orderNo">
				AND o.order_no = #{params.orderNo,jdbcType=VARCHAR}
			</if>
		</if>
		) wf
		where wf.is_comment = 0
		order by wf.create_time DESC
	</select>
	<!-- end 用户未评价服务店订单列表查询 add by wushp -->

	<!-- 用户订单详细查询 zhongy start -->
	<select id="selectUserOrderDetail" resultMap="UserTradeOrderDetailMap"
		parameterType="java.lang.String">
		SELECT
		o.id,o.status,o.pick_up_type,o.pick_up_time,o.pick_up_code,o.received_time,o.delivery_time,o.compain_status,o.pay_way,o.is_complete,
		o.total_amount,o.actual_amount,o.preferential_price,o.fare,o.order_no,o.create_time,o.remark,o.activity_type,o.reason,o.trade_num,
		logistics.consignee_name,logistics.telephone,logistics.mobile,logistics.area,logistics.address,
		logistics.type as
		logistics_type,logistics.logistics_no,logistics.logistics_company_name,
		pay.pay_type,pay.pay_amount,pay.pay_time,
		TIMESTAMPDIFF(SECOND,DATE_FORMAT(NOW(),'%Y-%m-%d
		%H:%i:%s'),o.create_time) AS remaining_time,
		store.id as store_id,store.store_name as store_name,store.mobile as
		store_mobile,store.area as store_area,store.address as store_address,
		store.type as store_type,invoice.id as
		invoice_id,invoice.head,invoice.context
		FROM trade_order o
		LEFT JOIN trade_order_logistics logistics ON o.id = logistics.order_id
		LEFT JOIN trade_order_pay pay ON o.id = pay.order_id
		LEFT JOIN trade_order_invoice invoice ON o.id = invoice.order_id
		LEFT JOIN store_info store ON o.store_id = store.id
		WHERE o.is_show = 1
		AND o.id = #{orderId,jdbcType=VARCHAR}
	</select>
	<!-- 用户订单详细查询 zhongy end -->

	<!-- 用户服务订单列表查询 zhongy start 条件：全部、未付款 -->
	<select id="selectUserServiceOrderList" resultMap="UserServiceOrderMap"
		parameterType="map">
		select * from (
		select
		tor.update_time,toi.main_pic_prl,toi.sku_name,toi.unit_price,toi.quantity,toi.actual_amount,
		tor.id,tor.order_no,si.store_name,tor.status as
		order_status,toi.compain_status,toi.appraise,wangf.order_sta as status
		from trade_order tor
		LEFT JOIN trade_order_item toi ON toi.order_id=tor.id
		LEFT JOIN store_info si on tor.store_id = si.id
		left join
		(select wangfan.order_id,
		CASE
		WHEN wxf > 0 then 0
		when ygq > 0 then 2
		WHEN yxf > 0 then 1
		else 100
		end order_sta
		from (select
		wf.order_id,wf.order_item_id,
		sum(case when wf.`status`=0 then result else 0 end) wxf,
		sum(case when wf.`status`=1 then result else 0 end) yxf,
		sum(case when wf.`status`=3 then result else 0 end) ygq
		from (SELECT toid.order_item_id,count(toid.`status`) as
		result,toid.`status`,toi_two.order_id
		FROM
		trade_order_item_detail toid
		LEFT JOIN trade_order_item toi_two ON toid.order_item_id = toi_two.id
		GROUP BY toid.order_item_id,toid.`status`) wf GROUP BY
		wf.order_item_id) wangfan) wangf on tor.id=wangf.order_id
		where tor.is_show=1
		AND tor.type=1
		AND tor.user_id= #{params.userId,jdbcType=VARCHAR}
		<if test="null!=params">
			<if test="params.status != null ">
				AND tor.status in
				<foreach collection="params.status" open="(" close=")"
					index="index" item="item" separator=",">
					#{item}
				</foreach>
			</if>
			<if test="null != params.skuName and '' != params.skuName">
				AND toi.sku_name like CONCAT('%',#{params.skuName},'%')
			</if>
			<if test="null != params.keyword and '' != params.keyword">
				AND (toi.sku_name like CONCAT('%',#{params.keyword},'%')
				or tor.order_no like CONCAT('%',#{params.keyword},'%')
				)
			</if>
		</if>
		) tmpObj
		<!-- 排序规则为：待付款、未消费、已过期、已消费、已取消，相同状态的订单，以订单修改时间倒序排列 -->
		ORDER BY
		CASE
		WHEN tmpObj.order_status = 0 THEN 0
		WHEN tmpObj.status = 0 THEN 1
		WHEN tmpObj.status = 2 THEN 2
		WHEN tmpObj.status = 1 THEN 3
		ELSE 100
		END asc,tmpObj.update_time desc
	</select>

	<!-- #查询所有的服务订单，条件：未消费、已消费、已过期 -->
	<select id="selectUserServiceOrderAlreadyPayList" resultMap="UserServiceOrderMap"
		parameterType="map">
		select
		toi.main_pic_prl,toi.sku_name,toi.unit_price,toi.quantity,toi.actual_amount,tor.id,
		tor.order_no,si.store_name,tor.status as
		order_status,toi.compain_status,toi.appraise,toid.status
		FROM
		trade_order_item_detail toid
		LEFT JOIN trade_order_item toi on
		toid.order_item_id=toi.id
		LEFT JOIN trade_order tor on
		toi.order_id=tor.id
		LEFT JOIN store_info si ON tor.store_id = si.id
		where tor.is_show=1 AND tor.type=1 AND tor.status = 5
		AND tor.user_id= #{params.userId,jdbcType=VARCHAR}
		<if test="null != params.status">
			AND toid.status= #{params.status,jdbcType=TINYINT}
		</if>
		<if test="null != params.skuName and '' != params.skuName">
			AND toi.sku_name like CONCAT('%',#{params.skuName},'%')
		</if>
		group by tor.id
		order by toid.create_time DESC
	</select>
	<!-- 用户服务订单列表查询 zhongy end -->

	<!-- 用户服务订单详细查询 zhongy start -->
	<!-- update by wushp -->
	<select id="selectUserOrderServiceDetail" resultMap="UserTradeOrderDetailMap"
		parameterType="java.lang.String">
		SELECT
		o.id,o.status,o.pick_up_type,o.pick_up_time,o.pick_up_code,o.received_time,o.delivery_time,o.compain_status,o.pay_way,o.is_complete,
		o.total_amount,o.actual_amount,o.preferential_price,o.fare,o.order_no,o.create_time,o.remark,o.activity_type,o.reason,o.trade_num,
		o.update_time,o.pay_way,
		logistics.consignee_name,logistics.telephone,logistics.mobile,logistics.area,logistics.address,
		logistics.type as
		logistics_type,logistics.logistics_no,logistics.logistics_company_name,
		pay.pay_type,pay.pay_amount,pay.pay_time,
		TIMESTAMPDIFF(SECOND,DATE_FORMAT(NOW(),'%Y-%m-%d
		%H:%i:%s'),o.create_time) AS remaining_time,
		store.id as store_id,store.store_name as store_name,store.mobile as
		store_mobile,store.area as store_area,store.address as store_address,
		store.type as store_type,invoice.id as
		invoice_id,invoice.head,invoice.context,
		ext.id as storeExtId,
		ext.service_phone as servicePhone
		FROM trade_order o
		LEFT JOIN trade_order_logistics logistics ON o.id = logistics.order_id
		LEFT JOIN trade_order_pay pay ON o.id = pay.order_id
		LEFT JOIN trade_order_invoice invoice ON o.id = invoice.order_id
		LEFT JOIN store_info store ON o.store_id = store.id
		LEFT JOIN store_info_ext ext ON store.id = ext.store_id
		WHERE o.is_show = 1
		AND o.id = #{orderId,jdbcType=VARCHAR}
	</select>
	<!-- 用户服务订单详细查询 zhongy end -->


	<select id="selectOrderByPayType" resultMap="TradeOrderPayMap"
		parameterType="map">
		SELECT
		<include refid="order_pay_column_list" />
		from trade_order AS tr
		LEFT JOIN trade_order_pay op ON op.order_id=tr.id
		WHERE 1=1
		<include refid="order_paytype_condition" />
		ORDER BY
		<if test="status == null">
			(case
			when tr.`status` = 1 then 0
			when tr.`status` = 3 then 1
			when tr.`status` = 0 then 2
			when tr.`status` = 5 then 3
			when tr.`status` in(2,4) then 4
			when tr.`status` = 6 then 5
			end),
		</if>
		tr.create_time
	</select>

	<!--chenwj 根据参数获取订单列表 -->
	<select id="getTradeOrderByParams" parameterType="map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from trade_order o where 1=1 and o.disabled = 0
		<if test="status != null and status !=''">
			and o.status = #{status}
		</if>
		<if test="storeId != null and storeId !=''">
			and o.store_id = #{storeId}
		</if>
		<if test="orderNo != null and orderNo !=''">
			and o.order_no like CONCAT('%',#{orderNo},'%')
		</if>
		<if test="payWay != null and payWay != ''">
			and o.pay_way = #{payWay}
		</if>
		<if test="refundsStatus !=null">
			and o.refunds_status = #{refundsStatus}
		</if>
		<if test="null != orderResource">
			AND o.order_resource IN
			<foreach collection="orderResource" index="index" item="item"
				open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="null != startCreateTime">
	    <![CDATA[ AND o.create_time >= #{startCreateTime} ]]>
		</if>
		<if test="null != endCreateTime">
	    <![CDATA[ AND o.create_time <= #{endCreateTime} ]]>
		</if>
		<if test="paymentStatus != null and paymentStatus !=''">
			and o.payment_status = #{paymentStatus}
		</if>
		<if test="notStatusList != null">
			AND o.status not in
			<foreach collection="notStatusList" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		order by o.create_time ${createTimeSort}

	</select>

	<!--chenwj 根据条件获取订单数量 -->
	<select id="getTradeOrderCount" parameterType="map" resultType="int">
		select count(1) from trade_order where 1=1
		<if test="storeId != null and storeId != ''">
			and store_id = #{storeId}
		</if>
		<if test="status != null">
			and status = #{status}
		</if>
		<if test="null != orderResource">
			AND order_resource IN
			<foreach collection="orderResource" index="index" item="item"
				open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>

	</select>

	<!-- 查询导出的订单列表 -->
	<select id="selectExportOrder" resultMap="TradeOrderPayMap"
		parameterType="map">
		SELECT
		tr.id,tr.order_no,tr.create_time,tr.status,tr.user_phone,op.pay_type,tr.total_amount
		FROM trade_order AS tr
		LEFT JOIN trade_order_pay op ON op.order_id=tr.id
		WHERE 1=1
		<include refid="order_paytype_condition" />
		<!-- 引用排序sql -->
		<include refid="order_paytype_orderby" />
		<!-- 导出的限制数量 -->
		<if test="maxSize != null">
			LIMIT 0,#{maxSize, jdbcType=INTEGER}
		</if>
	</select>
	<!-- 运营后台实物、服务订单列表查询 新 add by zengj -->
	<select id="selectOrderBackStageNew" resultMap="PhysicsOrderVoMap"
		parameterType="com.okdeer.mall.order.vo.PhysicsOrderVo">
		SELECT
		o.id,
		o.order_no,
		o.store_id,
		<if
			test="(storeName != null and storeName != '') or (fullName != null and fullName != '') or (null!=type)">
			si.store_name,
			si.type,
			si.agent_id,
		</if>
		<if test="fullName != null and fullName != ''">
			pa.full_name,
		</if>
		<if test="null!=payType">
			pay.pay_type,
		</if>
		o.actual_amount,
		o.user_phone,
		o.create_time,
		o. STATUS,
		o.order_resource,
		o.pick_up_time
		FROM
		trade_order o
		<if
			test="(storeName != null and storeName != '') or (fullName != null and fullName != '') or(null!=type)">
			INNER JOIN store_info si ON o.store_id=si.id
		</if>
		<if test="fullName != null and fullName != ''">
			LEFT JOIN psms_agent pa ON pa.id=si.agent_id
		</if>
		<if test="null!=payType">
			LEFT JOIN trade_order_pay pay ON pay.order_id=o.id
		</if>
		WHERE 1=1
		AND o.disabled =0
		AND o.order_resource !=2

		<if test="ids != null">
			AND o.id in
			<foreach collection="ids" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="ids == null">
			<if test="null!=orderType">
				AND o.type = #{orderType,jdbcType=TINYINT}
			</if>
			<if test="null!=userPhone and ''!= userPhone">
				AND o.user_phone = #{userPhone,jdbcType=VARCHAR}
			</if>
			<if test="null!=orderNo and ''!= orderNo">
				AND o.order_no = #{orderNo,jdbcType=VARCHAR}
			</if>
			<if test="null != storeName and storeName != ''">
				AND si.store_name LIKE CONCAT('%',#{storeName,jdbcType=VARCHAR},'%')
			</if>
			<if test="null != fullName and fullName != ''">
				AND pa.full_name LIKE CONCAT('%',#{fullName,jdbcType=VARCHAR},'%')
			</if>
			<if test="null!=status">
				AND o.status = #{status,jdbcType=TINYINT}
			</if>
			<if test="null!=payType">
				AND pay.pay_type = #{payType,jdbcType=TINYINT}
			</if>
			<if test="null!=type">
				AND si.type = #{type,jdbcType=TINYINT}
			</if>
			<if test="null != startTime">
				AND o.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
			</if>
			<if test="null != endTime">
				AND o.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
			</if>
			<if test="null!=orderResource">
				AND o.order_resource = #{orderResource,jdbcType=TINYINT}
			</if>
		</if>

		ORDER BY o.create_time DESC
	</select>
	<!-- 运营后台实物、服务订单列表查询 start -->
	<select id="selectOrderBackStage" resultMap="PhysicsOrderVoMap"
		parameterType="com.okdeer.mall.order.vo.PhysicsOrderVo">
		SELECT o.id,o.order_no,si.store_name,
		pa.full_name,si.type,o.actual_amount,
		pay.pay_type,o.user_phone,o.create_time,o.status,o.order_resource,
		o.pick_up_time
		from trade_order o
		LEFT JOIN store_info si ON o.store_id=si.id
		LEFT JOIN psms_agent pa ON
		pa.id=si.agent_id
		LEFT JOIN trade_order_pay pay ON pay.order_id=o.id
		WHERE 1=1
		AND o.disabled =0
		AND o.order_resource !=2
		<if test="ids != null">
			AND o.id in
			<foreach collection="ids" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="ids == null">
			<if test="null!=orderType">
				AND o.type = #{orderType,jdbcType=TINYINT}
			</if>
			<if test="null!=userPhone and ''!= userPhone">
				AND o.user_phone = #{userPhone,jdbcType=VARCHAR}
			</if>
			<if test="null!=orderNo and ''!= orderNo">
				AND o.order_no = #{orderNo,jdbcType=VARCHAR}
			</if>
			<if test="null != storeName and storeName != ''">
				AND si.store_name LIKE CONCAT('%',#{storeName,jdbcType=VARCHAR},'%')
			</if>
			<if test="null != fullName and fullName != ''">
				AND pa.full_name LIKE CONCAT('%',#{fullName,jdbcType=VARCHAR},'%')
			</if>
			<if test="null!=status">
				AND o.status = #{status,jdbcType=TINYINT}
			</if>
			<if test="null!=payType">
				AND pay.pay_type = #{payType,jdbcType=TINYINT}
			</if>
			<if test="null!=type">
				AND si.type = #{type,jdbcType=TINYINT}
			</if>
			<if test="null != startTime">
				AND o.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
			</if>
			<if test="null != endTime">
				AND o.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
			</if>
			<if test="null!=orderResource">
				AND o.order_resource = #{orderResource,jdbcType=TINYINT}
			</if>
		</if>

		ORDER BY o.create_time DESC
	</select>
	<!-- 运营后台实物、服务订单列表查询 end -->

	<select id="selectOrderNum" resultType="java.lang.Integer"
		parameterType="map">
		SELECT count(1) FROM trade_order WHERE store_id =
		#{storeId,jdbcType=VARCHAR} AND status = #{status,jdbcType=BIT}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		DELETE FROM trade_order
		WHERE id = #{id,jdbcType=VARCHAR}
	</delete>

	<insert id="insert" parameterType="com.okdeer.mall.order.entity.TradeOrder">
		insert into trade_order (id, user_id, store_id,
		pid, order_no, type, pick_up_type,
		pick_up_code, pick_up_time, status,
		total_amount, actual_amount, preferential_price,
		fare, activity_type, activity_id,activity_item_id,
		remark, invoice, disabled,
		create_time, update_time,is_show)
		values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
		#{storeId,jdbcType=VARCHAR},
		#{pid,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, #{type,jdbcType=BIT},
		#{pickUpType,jdbcType=BIT},
		#{pickUpCode,jdbcType=VARCHAR}, #{pickUpTime,jdbcType=VARCHAR}, #{status,jdbcType=BIT},
		#{totalAmount,jdbcType=DECIMAL}, #{actualAmount,jdbcType=DECIMAL},
		#{preferentialPrice,jdbcType=DECIMAL},
		#{fare,jdbcType=DECIMAL}, #{activityType,jdbcType=BIT}, #{activityId,jdbcType=VARCHAR},
		#{activityItemId,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR}, #{invoice,jdbcType=BIT}, #{disabled,jdbcType=BIT},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},#{isShow,jdbcType=TINYINT})
	</insert>
	<insert id="insertSelective" parameterType="com.okdeer.mall.order.entity.TradeOrder">
		insert into trade_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="storeId != null">
				store_id,
			</if>
			<if test="pid != null">
				pid,
			</if>
			<if test="orderNo != null">
				order_no,
			</if>
			<if test="sellerId != null">
				seller_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="pickUpType != null">
				pick_up_type,
			</if>
			<if test="pickUpCode != null">
				pick_up_code,
			</if>
			<if test="pickUpTime != null">
				pick_up_time,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="totalAmount != null">
				total_amount,
			</if>
			<if test="actualAmount != null">
				actual_amount,
			</if>
			<if test="preferentialPrice != null">
				preferential_price,
			</if>
			<if test="fare != null">
				fare,
			</if>
			<if test="activityType != null">
				activity_type,
			</if>
			<if test="activityId != null">
				activity_id,
			</if>
			<if test="activityItemId != null">
				activity_item_id,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="invoice != null">
				invoice,
			</if>
			<if test="disabled != null">
				disabled,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="orderResource != null">
				order_resource,
			</if>
			<if test="pospay != null">
				pospay,
			</if>
			<if test="isShow != null">
				is_show,
			</if>
			<if test="payWay != null">
				pay_way,
			</if>
			<if test="tradeNum != null">
				trade_num,
			</if>
			<if test="userPhone !=null">
				user_phone,
			</if>
			<if test="storeName !=null">
				store_name,
			</if>
			<if test="income != null">
				income,
			</if>
			<if test="deliveryTime != null">
				delivery_time,
			</if>
			<if test="shipmentsUserId != null">
				shipments_user_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="storeId != null">
				#{storeId,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				#{pid,jdbcType=VARCHAR},
			</if>
			<if test="orderNo != null">
				#{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="sellerId != null">
				#{sellerId,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=TINYINT},
			</if>
			<if test="pickUpType != null">
				#{pickUpType,jdbcType=TINYINT},
			</if>
			<if test="pickUpCode != null">
				#{pickUpCode,jdbcType=VARCHAR},
			</if>
			<if test="pickUpTime != null">
				#{pickUpTime,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="totalAmount != null">
				#{totalAmount,jdbcType=DECIMAL},
			</if>
			<if test="actualAmount != null">
				#{actualAmount,jdbcType=DECIMAL},
			</if>
			<if test="preferentialPrice != null">
				#{preferentialPrice,jdbcType=DECIMAL},
			</if>
			<if test="fare != null">
				#{fare,jdbcType=DECIMAL},
			</if>
			<if test="activityType != null">
				#{activityType,jdbcType=TINYINT},
			</if>
			<if test="activityId != null">
				#{activityId,jdbcType=VARCHAR},
			</if>
			<if test="activityItemId != null">
				#{activityItemId,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="invoice != null">
				#{invoice,jdbcType=TINYINT},
			</if>
			<if test="disabled != null">
				#{disabled,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="orderResource != null">
				#{orderResource,jdbcType=TINYINT},
			</if>
			<if test="pospay != null">
				#{pospay,jdbcType=VARCHAR},
			</if>
			<if test="isShow != null">
				#{isShow,jdbcType=TINYINT},
			</if>
			<if test="payWay != null">
				#{payWay,jdbcType=TINYINT},
			</if>
			<if test="tradeNum != null">
				#{tradeNum,jdbcType=VARCHAR},
			</if>
			<if test="userPhone != null">
				#{userPhone,jdbcType=VARCHAR},
			</if>
			<if test="storeName != null">
				#{storeName,jdbcType=VARCHAR},
			</if>
			<if test="income != null">
				#{income,jdbcType=VARCHAR},
			</if>
			<if test="deliveryTime != null">
				#{deliveryTime,jdbcType=VARCHAR},
			</if>
			<if test="shipmentsUserId != null">
				#{shipmentsUserId,jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>


	<!-- 根据交易号修改定单状态 -->
	<update id="updateTradeOrderByTradeNum" parameterType="com.okdeer.mall.order.entity.TradeOrder">
		update trade_order
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="storeId != null">
				store_id = #{storeId,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				pid = #{pid,jdbcType=VARCHAR},
			</if>
			<if test="orderNo != null">
				order_no = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=BIT},
			</if>
			<if test="pickUpType != null">
				pick_up_type = #{pickUpType,jdbcType=BIT},
			</if>
			<if test="pickUpCode != null">
				pick_up_code = #{pickUpCode,jdbcType=VARCHAR},
			</if>
			<if test="pickUpTime != null">
				pick_up_time = #{pickUpTime,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=BIT},
			</if>
			<if test="totalAmount != null">
				total_amount = #{totalAmount,jdbcType=DECIMAL},
			</if>
			<if test="actualAmount != null">
				actual_amount = #{actualAmount,jdbcType=DECIMAL},
			</if>
			<if test="preferentialPrice != null">
				preferential_price = #{preferentialPrice,jdbcType=DECIMAL},
			</if>
			<if test="fare != null">
				fare = #{fare,jdbcType=DECIMAL},
			</if>
			<if test="activityType != null">
				activity_type = #{activityType,jdbcType=BIT},
			</if>
			<if test="activityId != null">
				activity_id = #{activityId,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="invoice != null">
				invoice = #{invoice,jdbcType=BIT},
			</if>
			<if test="disabled != null">
				disabled = #{disabled,jdbcType=BIT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isShow != null">
				is_show = #{isShow,jdbcType=TINYINT},
			</if>
		</set>
		where trade_num = #{tradeNum,jdbcType=VARCHAR}

	</update>

	<!-- 根据交易号修改定单状态,并查询上一个状态是否正确 如果已发货不进行修改等待买家支付中 -->
	<update id="updateTradeOrderByTradeNumIsOder" parameterType="com.okdeer.mall.order.entity.TradeOrder">
		update trade_order
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="storeId != null">
				store_id = #{storeId,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				pid = #{pid,jdbcType=VARCHAR},
			</if>
			<if test="orderNo != null">
				order_no = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=BIT},
			</if>
			<if test="pickUpType != null">
				pick_up_type = #{pickUpType,jdbcType=BIT},
			</if>
			<if test="pickUpCode != null">
				pick_up_code = #{pickUpCode,jdbcType=VARCHAR},
			</if>
			<if test="pickUpTime != null">
				pick_up_time = #{pickUpTime,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=BIT},
			</if>
			<if test="totalAmount != null">
				total_amount = #{totalAmount,jdbcType=DECIMAL},
			</if>
			<if test="actualAmount != null">
				actual_amount = #{actualAmount,jdbcType=DECIMAL},
			</if>
			<if test="preferentialPrice != null">
				preferential_price = #{preferentialPrice,jdbcType=DECIMAL},
			</if>
			<if test="fare != null">
				fare = #{fare,jdbcType=DECIMAL},
			</if>
			<if test="activityType != null">
				activity_type = #{activityType,jdbcType=BIT},
			</if>
			<if test="activityId != null">
				activity_id = #{activityId,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="invoice != null">
				invoice = #{invoice,jdbcType=BIT},
			</if>
			<if test="disabled != null">
				disabled = #{disabled,jdbcType=BIT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isShow != null">
				is_show = #{isShow,jdbcType=TINYINT},
			</if>
		</set>
		where trade_num = #{tradeNum,jdbcType=VARCHAR}
		<if test="status = 11">
			and status = 0
		</if>
	</update>

	<update id="updateByPrimaryKeySelective" parameterType="com.okdeer.mall.order.entity.TradeOrder">
		update trade_order
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="storeId != null">
				store_id = #{storeId,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				pid = #{pid,jdbcType=VARCHAR},
			</if>
			<if test="orderNo != null">
				order_no = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=BIT},
			</if>
			<if test="pickUpType != null">
				pick_up_type = #{pickUpType,jdbcType=BIT},
			</if>
			<if test="pickUpCode != null">
				pick_up_code = #{pickUpCode,jdbcType=VARCHAR},
			</if>
			<if test="pickUpTime != null">
				pick_up_time = #{pickUpTime,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=BIT},
			</if>
			<if test="totalAmount != null">
				total_amount = #{totalAmount,jdbcType=DECIMAL},
			</if>
			<if test="actualAmount != null">
				actual_amount = #{actualAmount,jdbcType=DECIMAL},
			</if>
			<if test="preferentialPrice != null">
				preferential_price = #{preferentialPrice,jdbcType=DECIMAL},
			</if>
			<if test="fare != null">
				fare = #{fare,jdbcType=DECIMAL},
			</if>
			<if test="activityType != null">
				activity_type = #{activityType,jdbcType=BIT},
			</if>
			<if test="activityId != null">
				activity_id = #{activityId,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="invoice != null">
				invoice = #{invoice,jdbcType=BIT},
			</if>
			<if test="disabled != null">
				disabled = #{disabled,jdbcType=BIT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isShow != null">
				is_show = #{isShow,jdbcType=TINYINT},
			</if>
			<if test="isComplete != null">
				is_complete = #{isComplete,jdbcType=TINYINT},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.okdeer.mall.order.entity.TradeOrder">
		update trade_order
		set user_id = #{userId,jdbcType=VARCHAR},
		store_id = #{storeId,jdbcType=VARCHAR},
		pid = #{pid,jdbcType=VARCHAR},
		order_no = #{orderNo,jdbcType=VARCHAR},
		type = #{type,jdbcType=BIT},
		pick_up_type = #{pickUpType,jdbcType=BIT},
		pick_up_code = #{pickUpCode,jdbcType=VARCHAR},
		pick_up_time = #{pickUpTime,jdbcType=VARCHAR},
		status = #{status,jdbcType=BIT},
		total_amount = #{totalAmount,jdbcType=DECIMAL},
		actual_amount = #{actualAmount,jdbcType=DECIMAL},
		preferential_price = #{preferentialPrice,jdbcType=DECIMAL},
		fare = #{fare,jdbcType=DECIMAL},
		activity_type = #{activityType,jdbcType=BIT},
		activity_id = #{activityId,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		invoice = #{invoice,jdbcType=BIT},
		disabled = #{disabled,jdbcType=BIT},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		is_show = #{isShow,jdbcType=TINYINT},
		is_complete = #{isComplete,jdbcType=TINYINT}
		where id = #{id,jdbcType=VARCHAR}
	</update>








	<!-- wusw:订单查询详细信息map（用于历史回款记录） -->
	<resultMap id="orderDetailMap" type="com.okdeer.mall.order.vo.TradeOrderQueryVo"
		extends="BaseResultMap">
		<result column="payType" property="payType" jdbcType="TINYINT"
			javaType="com.okdeer.mall.order.enums.OrderPayTypeEnum" />
	</resultMap>

	<!-- wusw: 根据店铺id、订单状态、支付方式等查询条件查询订单信息列表（参数为实体类型，用于历史回款记录） -->
	<select id="selectShippedOrderByEntity" resultMap="orderDetailMap"
		parameterType="com.okdeer.mall.order.vo.TradeOrderQueryVo">
		SELECT
		A.id,A.status,A.actual_amount,A.fare,A.user_phone,A.create_time,
		A.order_no,A.payment_status,A.user_phone<!-- ,C.pay_type AS payType -->
		FROM trade_order A
		<!-- LEFT JOIN trade_order_pay C ON C.order_id = A.id -->
		WHERE 1 = 1
		<!-- 是否逻辑删除 -->
		<if test="disabled != null">
			AND A.disabled = #{disabled,jdbcType=TINYINT}
		</if>
		<!-- 店铺id -->
		<if test="storeId != null and storeId != ''">
			AND A.store_id = #{storeId,jdbcType=VARCHAR}
		</if>
		<!-- 订单状态 -->
		AND A.`status` in (3,4,5,6)
		<!-- <if test="status != null"> AND A.`status` <![CDATA[ >= ]]> #{status,jdbcType=TINYINT} 
			</if> -->
		<!-- 提货类型 -->
		<if test="pickUpType != null">
			AND A.pick_up_type = #{pickUpType,jdbcType=TINYINT}
		</if>
		<!-- 回款状态 -->
		<if test="paymentStatus != null">
			AND A.payment_status = #{paymentStatus,jdbcType=TINYINT}
		</if>
		<!-- 支付方式 -->
		<if test="payWay != null">
			AND A.pay_way = #{payWay,jdbcType=TINYINT}
		</if>
		<!-- 订单编号 -->
		<if test="orderNo != null and orderNo != ''">
			AND A.order_no LIKE CONCAT('%',#{orderNo},'%')
		</if>
		<!-- 下单时间 -->
		<if test="createTimeStart != null">
			AND A.create_time <![CDATA[ >= ]]>
			#{createTimeStart,jdbcType=TIMESTAMP}
		</if>
		<!-- 下单时间 -->
		<if test="createTimeEnd != null">
			AND A.create_time <![CDATA[ <= ]]>
			#{createTimeEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="skuName != null and skuName != ''">
			AND EXISTS(SELECT 1 FROM trade_order_item B WHERE A.id = B.order_id AND
			B.sku_name like CONCAT('%',#{skuName,jdbcType=VARCHAR},'%'))
		</if>
		ORDER BY A.create_time DESC
	</select>

	<!-- wusw:根据订单id，查询订单项（用于历史回款记录） -->
	<select id="selectShippedOrderItemByEntity" resultMap="TradeOrderItemMap"
		parameterType="map">
		SELECT
		B.main_pic_prl,B.sku_name,B.properties_indb,B.quantity,B.unit_price,B.`status`,A.create_time,A.id
		as orderId
		FROM trade_order A
		LEFT JOIN trade_order_item B ON B.order_id = A.id
		WHERE 1=1
		<if test="params.orderId != null and params.orderId != ''">
			AND A.id = #{params.orderId,jdbcType=VARCHAR}
		</if>
		ORDER BY A.create_time DESC
	</select>

	<!-- wusw: 根据店铺id、订单状态、支付方式等查询条件查询订单信息列表（参数为map类型，用于历史回款记录） -->
	<select id="selectShippedOrderByParams" resultMap="orderDetailMap"
		parameterType="map">
		SELECT
		A.id,A.status,A.actual_amount,A.fare,A.user_phone,A.create_time,A.order_no,A.payment_status,
		B.main_pic_prl,B.sku_name,B.quantity,B.unit_price,B.`status` AS
		itemStatus,C.pay_type AS payType
		FROM trade_order A
		LEFT JOIN trade_order_item B ON B.order_id = A.id
		LEFT JOIN trade_order_pay C ON C.order_id = A.id
		WHERE A.disabled = 0
		<if test="params != null">
			<!-- 店铺id -->
			<if test="params.storeId != null and params.storeId != ''">
				AND A.store_id = #{params.storeId,jdbcType=VARCHAR}
			</if>
			<!-- 订单状态 -->
			<if test="params.status != null">
				AND A.`status` <![CDATA[ >= ]]>
				#{params.status,jdbcType=TINYINT}
			</if>
			<!-- 提货类型 -->
			<if test="params.pickUpType != null">
				AND A.pick_up_type = #{params.pickUpType,jdbcType=TINYINT}
			</if>
			<!-- 回款状态 -->
			<if test="params.paymentStatus != null">
				AND A.payment_status = #{params.paymentStatus,jdbcType=TINYINT}
			</if>
			<!-- 支付方式 -->
			<if test="params.payType != null">
				AND C.pay_type = #{params.payType,jdbcType=TINYINT}
			</if>
			<!-- 订单编号 -->
			<if test="params.orderNo != null and params.orderNo != ''">
				AND A.order_no LIKE CONCAT('%',#{params.orderNo},'%')
			</if>
			<!-- sku名称 -->
			<if test="params.skuName != null and params.skuName != ''">
				AND B.sku_name LIKE CONCAT('%',#{params.skuName},'%')
			</if>
			<!-- 下单时间 -->
			<if test="params.createTimeStart != null">
				AND A.create_time <![CDATA[ >= ]]>
				#{params.createTimeStart,jdbcType=TIMESTAMP}
			</if>
			<!-- 下单时间 -->
			<if test="params.createTimeEnd != null">
				AND A.create_time <![CDATA[ <= ]]>
				#{params.createTimeEnd,jdbcType=TIMESTAMP}
			</if>
		</if>
	</select>

	<!-- wusw:批量修改订单的回款状态 -->
	<update id="updatePaymentStatusByIds">
		UPDATE trade_order
		SET payment_status = #{paymentStatus,jdbcType=TINYINT},
		payment_time = #{paymentTime,jdbcType=TIMESTAMP},
		update_time = #{paymentTime,jdbcType=TIMESTAMP}
		WHERE
		<if test="ids != null ">
			id in
			<foreach collection="ids" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="ids == null ">
			1 = 2
		</if>
	</update>

	<!-- 根据订单id，查询指定回款状态的记录数量 add by wusw start -->
	<select id="selectPaymentStatusCountByIds" resultType="int">
		SELECT COUNT(1)
		FROM trade_order
		WHERE payment_status = #{paymentStatus,jdbcType=TINYINT}
		<if test="ids != null ">
			AND id in
			<foreach collection="ids" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="ids == null ">
			AND 1 = 2
		</if>
	</select>

	<!-- wusw:根据订单id，查询订单、支付、发票信息 -->
	<select id="selectOrderPayInvoiceById" resultMap="TradeOrderPayMap"
		parameterType="java.lang.String">
		SELECT
		tr.id,tr.order_no,tr.invoice,tr.create_time,tr.status,tr.pick_up_type,tr.pick_up_time,tr.preferential_price,tr.total_amount,tr.user_id,tr.type,tr.pick_up_code,
		tr.preferential_price,tr.fare,tr.actual_amount,tr.remark,tr.activity_id,tr.store_id,tr.update_time,tr.received_time,tr.delivery_time,tr.activity_type,
		<!-- begin 商城后台实物订单管理新增订单来源字段 add by wangf01 -->
		tr.order_resource,
		<!-- end 商城后台实物订单管理新增订单来源字段 add by wangf01 -->
		op.pay_type,tr.`pay_way`,op.pay_time,op.pay_amount,op.create_time AS
		pay_create_time,invoice.head,invoice.context,tr.reason
		FROM trade_order tr
		LEFT JOIN trade_order_pay op ON tr.id = op.order_id
		LEFT JOIN trade_order_invoice invoice ON invoice.order_id=tr.id
		WHERE tr.id = #{id,jdbcType=VARCHAR}
	</select>

	<!-- wusw:根据订单id，更新是否显示字段 -->
	<update id="updateIsShowById">
		UPDATE trade_order
		SET is_show = #{isShow,jdbcType=TINYINT},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		WHERE id = #{id,jdbcType=VARCHAR}
	</update>

	<!-- wusw:订单、支付、买家用户信息结果集合（主要用于财务系统接口） -->
	<resultMap id="orderPayBuyerResultMap" type="com.okdeer.mall.order.vo.TradeOrderPayQueryVo">
		<id column="id" property="orderId" jdbcType="VARCHAR" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="store_name" property="shopName" jdbcType="VARCHAR" />
		<result column="user_phone" property="buyer" jdbcType="VARCHAR" />
		<result column="full_name" property="agentName" jdbcType="VARCHAR" />
		<result column="total_amount" property="transMoney" jdbcType="DECIMAL" />
		<result column="actual_amount" property="realMoney" jdbcType="DECIMAL" />
		<result column="preferential_price" property="preferMoney"
			jdbcType="DECIMAL" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="applyTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="dealTime" jdbcType="TIMESTAMP" />
		<result column="order_resource" property="orderResource"
			jdbcType="INTEGER" />
		<result column="payment_time" property="handTime" jdbcType="TIMESTAMP" />
		<result column="pay_type" property="payType" jdbcType="INTEGER" />
		<result column="pay_amount" property="refundAmount" jdbcType="DECIMAL" />
		<result column="returns" property="thirdTransNo" jdbcType="VARCHAR" />
		<result column="trade_num" property="tradeNum" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="store_id" property="storeId" jdbcType="VARCHAR" />
		<result column="reason" property="reason" jdbcType="VARCHAR" />
		<result column="activity_id" property="activityId" jdbcType="VARCHAR" />
		<result column="activity_type" property="activityType"
			jdbcType="TINYINT" javaType="com.okdeer.mall.activity.coupons.enums.ActivityTypeEnum" />

	</resultMap>

	<!-- wusw:查询微信或支付宝支付的，订单状态处于已取消、已拒收、取消中、拒收中的订单 （主要用于财务系统接口） 12508 update 
		by wusw 20160810 -->
	<select id="selectByStatusPayType" resultMap="orderPayBuyerResultMap"
		parameterType="map">
		SELECT DISTINCT
		trade.id,
		trade.order_no,
		trade.user_phone,
		trade.total_amount,
		trade.actual_amount,
		trade.preferential_price,
		trade.payment_time,
		trade.`status`,
		trade.create_time,
		trade.update_time,
		trade.order_resource,
		pay.pay_type,
		pay.pay_amount,
		pay.`returns`,
		store.store_name,
		agent.full_name,
		CASE trade.`status` WHEN 2 THEN 1 WHEN 4 THEN 1 WHEN 12 THEN 0 WHEN 13
		THEN 0 END AS statusSort
		FROM trade_order trade
		LEFT JOIN
		trade_order_pay pay ON pay.order_id = trade.id
		LEFT JOIN store_info
		store ON store.id = trade.store_id
		LEFT JOIN psms_agent agent ON
		agent.id = store.agent_id
		WHERE 1=1
		<!-- trade.disabled = 0 -->
		<if test="params != null">
			<!-- 订单状态 -->
			<if test="params.status != null">
				AND trade.`status` IN
				<foreach collection="params.status" index="index" item="item"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<!-- 订单支付方式 -->
			<if test="params.payWay != null">
				AND trade.pay_way = #{params.payWay,jdbcType=TINYINT}
			</if>
			<!-- 订单支付类型 -->
			<if test="params.payType != null">
				AND pay.pay_type IN
				<foreach collection="params.payType" index="index" item="item"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<!-- 订单编号 -->
			<if test="params.orderNo != null and params.orderNo != ''">
				AND trade.order_no LIKE CONCAT('%',#{params.orderNo},'%')
			</if>
			<if test="params.shopName != null and params.shopName != ''">
				AND store.store_name LIKE CONCAT('%',#{params.shopName},'%')
			</if>
			<!-- 更新时间 -->
			<if test="params.startTime != null">
				AND trade.create_time <![CDATA[ >= ]]>
				#{params.startTime,jdbcType=TIMESTAMP}
			</if>
			<!-- 更新时间 -->
			<if test="params.endTime != null">
				AND trade.create_time <![CDATA[ <= ]]>
				#{params.endTime,jdbcType=TIMESTAMP}
			</if>
			<!-- 买家用户手机号码 -->
			<if test="params.buyer != null and params.buyer != ''">
				AND trade.user_phone LIKE CONCAT('%',#{params.buyer},'%')
			</if>
		</if>
		ORDER BY statusSort ASC, trade.update_time DESC
	</select>

	<!-- wusw:查询微信或支付宝支付的，订单状态处于已取消、已拒收、取消中、拒收中的订单数量 （主要用于财务系统接口） -->
	<select id="selectCountByStatusPayType" resultType="int"
		parameterType="map">
		SELECT COUNT(1)
		FROM trade_order trade
		LEFT JOIN trade_order_pay pay ON pay.order_id = trade.id
		WHERE 1=1
		<!-- trade.disabled = 0 -->
		<if test="params != null">
			<!-- 订单状态 -->
			<if test="params.status != null">
				AND trade.`status` IN
				<foreach collection="params.status" index="index" item="item"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<!-- 订单支付方式 -->
			<if test="params.payWay != null">
				AND trade.pay_way = #{params.payWay,jdbcType=TINYINT}
			</if>
			<!-- 订单支付类型 -->
			<if test="params.payType != null">
				AND pay.pay_type IN
				<foreach collection="params.payType" index="index" item="item"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<!-- 订单编号 -->
			<if test="params.orderNo != null and params.orderNo != ''">
				AND trade.order_no LIKE CONCAT('%',#{params.orderNo},'%')
			</if>
			<if test="params.shopName != null and params.shopName != ''">
				AND trade.store_name LIKE CONCAT('%',#{params.shopName},'%')
			</if>
			<!-- 更新时间 -->
			<if test="params.startTime != null">
				AND trade.create_time <![CDATA[ >= ]]>
				#{params.startTime,jdbcType=TIMESTAMP}
			</if>
			<!-- 更新时间 -->
			<if test="params.endTime != null">
				AND trade.create_time <![CDATA[ <= ]]>
				#{params.endTime,jdbcType=TIMESTAMP}
			</if>
			<!-- 买家用户手机号码 -->
			<if test="params.buyer != null and params.buyer != ''">
				AND trade.user_phone LIKE CONCAT('%',#{params.buyer},'%')
			</if>
		</if>
	</select>

	<!-- wusw:根据订单id集合，查询订单信息 -->
	<select id="selectByOrderIdList" resultMap="orderPayBuyerResultMap">
		SELECT
		trade.id,trade.order_no,trade.trade_num,trade.actual_amount,trade.preferential_price,trade.order_resource,
		trade.user_id,trade.store_id,trade.`status`,trade.reason,trade.activity_id,trade.activity_type,
		pay.pay_type,pay.`returns`,pay.pay_amount
		FROM trade_order trade
		LEFT JOIN trade_order_pay pay ON trade.id = pay.order_id
		WHERE
		<if test="orderIds != null">
			trade.id IN
			<foreach collection="orderIds" index="index" item="item"
				open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="orderIds == null">
			1=2
		</if>
	</select>

	<!-- wusw:根据订单id，查询订单支付剩余时间 -->
	<select id="selectRemainTimeById" resultMap="UserTradeOrderDetailMap"
		parameterType="java.lang.String">
		SELECT trade.id,trade.trade_num,trade.actual_amount,
		TIMESTAMPDIFF(SECOND,DATE_FORMAT(NOW(),'%Y-%m-%d
		%H:%i:%s'),trade.create_time) AS remaining_time
		FROM trade_order trade
		WHERE trade.is_show = 1
		AND trade.id = #{orderId,jdbcType=VARCHAR}
	</select>

	<!-- zengj:获取订单总数，根据订单状态分组 -->
	<select id="getOrderCount" parameterType="java.util.Map"
		resultMap="TradeOrderStatusVoMap">
		SELECT CASE
		WHEN `status` IN (0,11) THEN 0
		WHEN `status` IN (1) THEN 1
		WHEN `status` IN (3) THEN 3
		WHEN `status` IN (4, 5, 6, 13) THEN 5
		WHEN `status` IN (2, 12) THEN 2
		ELSE `STATUS`
		END AS `status`,count(1) as `count` FROM trade_order
		WHERE store_id = #{storeId,jdbcType=VARCHAR}
		and disabled = 0
		<!-- 订单来源，多个时使用IN -->
		<if test="null!=orderResources">
			AND order_resource IN
			<foreach collection="orderResources" index="index" item="item"
				open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		and `status` >= 0
		GROUP BY
		CASE
		WHEN `status` IN (0,11) THEN 0
		WHEN `status` IN (1) THEN 1
		WHEN `status`
		IN (3) THEN 3
		WHEN `status` IN (4, 5, 6, 13) THEN 5
		WHEN `status` IN (2,
		12) THEN 2
		ELSE `STATUS`
		END
	</select>
	
	<!-- luosm:V1.1.0获取服务店到店消费订单总数，根据订单状态分组 -->
   <select id="selectArrivedOrderCount" parameterType="java.util.Map" resultMap="TradeOrderStatusVoMap">
      SELECT CASE
				WHEN `status` IN (0,11) THEN 0
				WHEN `status` IN (5) THEN 2
				WHEN `status` IN (2, 12) THEN 3
				ELSE `STATUS`
			 END AS `status`,count(1) as `count` FROM trade_order 
     	WHERE store_id = #{storeId,jdbcType=VARCHAR} 
     	and disabled = 0
		<!-- 订单来源，多个时使用IN -->
     	<if test="null!=orderResources" >
			AND order_resource IN
		    <foreach collection="orderResources" index="index" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		and `status` >= 0
      GROUP BY 
	  CASE
		WHEN `status` IN (0,11) THEN 0
		WHEN `status` IN (5) THEN 2
		WHEN `status` IN (2, 12) THEN 3
		ELSE `STATUS`
	  END
   </select>

	<!-- zengj:商家版APP订单查询 -->
	<select id="selectOrderInfo" parameterType="java.util.Map"
		resultMap="TradeOrderVo">
		SELECT
		tr.id,tr.order_no,tr.actual_amount,tr.total_amount,tr.preferential_price,tr.fare,tr.status,tr.delivery_time,
		(select sum(ti.quantity) from trade_order_item as ti where ti.order_id
		= tr.id) as goods_count,
		(select count(id) from trade_order_item as ti where ti.order_id = tr.id) as
		goods_type_count,
		tr.create_time,tr.activity_type,tr.activity_id,
		(select count(1) from trade_order_refunds_item r inner join trade_order_item
		i on r.order_item_id = i.id where i.order_id = tr.id) as refunds_count
		FROM trade_order as tr
		WHERE tr.store_id = #{storeId,jdbcType=VARCHAR}
		and disabled = 0
		<!-- 状态 -->
		<if test="status != null">
			AND tr.`status` IN
			<foreach collection="status" index="index" item="item" open="("
				close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<!-- 订单来源，多个时使用IN -->
		<if test="null!=orderResources">
			AND tr.order_resource IN
			<foreach collection="orderResources" index="index" item="item"
				open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<!-- 订单类型 -->
		<if test="type != null">
			AND tr.type = #{type,jdbcType=TINYINT}
		</if>
		<!-- 查询条件为 商品名称、订单号码、手机号码 -->
		<if test="searchCondition != null and searchCondition != ''">
			AND (
			tr.order_no LIKE CONCAT('%',#{searchCondition},'%')
			OR tr.user_phone LIKE CONCAT('%',#{searchCondition},'%')
			OR EXISTS(SELECT 1 FROM trade_order_item i WHERE tr.id = i.order_id AND
			i.sku_name like CONCAT('%',#{searchCondition,jdbcType=VARCHAR},'%'))
			)
		</if>
		<!-- 根据不同的tabs做不同的排序 -->
		<if test="tabs != null and tabs != ''">
			<!-- 待付款、待发货、待收货、已取消 的排序根据下单时间倒叙 -->
			<if
				test="tabs == 'wait_pay' or tabs == 'wait_shipments' or tabs == 'wait_receiving' or tabs == 'cancel'">
				ORDER BY tr.create_time DESC
			</if>
			<!-- 已完成 的排序如果有投诉单，按照投诉时间倒叙，剩下的按照确认收货时间倒叙 -->
			<if test="tabs == 'done'">
				ORDER BY (SELECT c.create_time from trade_order_complain c where
				c.order_id = tr.id) desc,tr.received_time desc
			</if>
		</if>
		<!-- 默认排序为下单时间倒叙,如搜索，目前ID是无序的，所以先用下单时间倒叙 -->
		<if test="tabs == null or tabs == ''">
			ORDER BY tr.create_time DESC
		</if>
	</select>

	<!-- zengj:订单详情 -->
	<select id="getOrderDetail" parameterType="java.lang.String"
		resultMap="TradeOrderVo">
		SELECT
		tr.id,tr.store_id,tr.order_no,tr.actual_amount,tr.total_amount,tr.preferential_price,tr.fare,tr.payment_status,tr.status,tr.update_time,tr.payment_time,tr.pay_way,
		tr.activity_type,tr.activity_id,tr.pick_up_type,tr.remark,tr.delivery_time,tr.received_time,tr.income,
		tp.id as
		pay_id,tp.pay_type,tp.pay_time,tr.invoice,tr.pick_up_time,tr.create_time,tr.type,tr.is_complete,
		ti.id as invoice_id,ti.head,ti.context,it.service_assurance,
		it.id as
		item_id,it.store_sku_id,it.sku_name,it.main_pic_prl,it.unit_price,it.quantity,tr.reason,it.properties_indb,
		ol.id AS
		logistics_id,ol.consignee_name,ol.mobile,ol.area,ol.address,ol.logistics_company_name,ol.logistics_no,ol.type
		AS logisticsType,
		tori.id AS refunds_item_id,
		d.id as detail_id,d.consume_code,d.status as
		detail_status,d.start_time,d.end_time,d.use_time,
		refunds.refunds_status
		FROM trade_order as tr
		LEFT JOIN trade_order_pay AS tp on tr.id = tp.order_id
		LEFT JOIN trade_order_invoice AS ti ON tr.id = ti.order_id
		LEFT JOIN trade_order_item it ON it.order_id = tr.id
		LEFT JOIN trade_order_item_detail d ON it.id = d.order_item_id
		LEFT JOIN trade_order_logistics AS ol ON ol.order_id = tr.id
		LEFT JOIN trade_order_refunds_item tori ON it.id = tori.order_item_id
		LEFT JOIN trade_order_refunds refunds ON tori.refunds_id = refunds.id
		WHERE tr.id = #{orderId, jdbcType=VARCHAR}
	</select>

	<update id="updateOrderStatus" parameterType="com.okdeer.mall.order.entity.TradeOrder">
		update trade_order
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="storeId != null">
				store_id = #{storeId,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				pid = #{pid,jdbcType=VARCHAR},
			</if>
			<if test="orderNo != null">
				order_no = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="sellerId != null">
				seller_id = #{sellerId,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=BIT},
			</if>
			<if test="pickUpType != null">
				pick_up_type = #{pickUpType,jdbcType=BIT},
			</if>
			<if test="pickUpCode != null">
				pick_up_code = #{pickUpCode,jdbcType=VARCHAR},
			</if>
			<if test="pickUpTime != null">
				pick_up_time = #{pickUpTime,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=BIT},
			</if>
			<if test="totalAmount != null">
				total_amount = #{totalAmount,jdbcType=DECIMAL},
			</if>
			<if test="actualAmount != null">
				actual_amount = #{actualAmount,jdbcType=DECIMAL},
			</if>
			<if test="preferentialPrice != null">
				preferential_price = #{preferentialPrice,jdbcType=DECIMAL},
			</if>
			<if test="paymentStatus != null">
				payment_status = #{paymentStatus,jdbcType=BIT},
			</if>
			<if test="fare != null">
				fare = #{fare,jdbcType=DECIMAL},
			</if>
			<if test="activityType != null">
				activity_type = #{activityType,jdbcType=BIT},
			</if>
			<if test="activityId != null">
				activity_id = #{activityId,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="invoice != null">
				invoice = #{invoice,jdbcType=BIT},
			</if>
			<if test="disabled != null">
				disabled = #{disabled,jdbcType=BIT},
			</if>
			<if test="compainStatus !=null">
				compain_status = #{compainStatus,jdbcType=BIT},
			</if>
			<if test="isComplete !=null">
				is_complete = #{isComplete,jdbcType=BIT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="reason != null and reason != ''">
				reason = #{reason,jdbcType=VARCHAR},
			</if>
			<if test="receivedTime != null">
				received_time = #{receivedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deliveryTime != null">
				delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
			</if>
			<if test="shipmentsUserId != null">
				shipments_user_id = #{shipmentsUserId,jdbcType=VARCHAR},
			</if>

		</set>
		WHERE id = #{id,jdbcType=VARCHAR}
		<if test="currentStatus != null">
			AND status = #{currentStatus,jdbcType=BIT}
		</if>
	</update>



	<!-- yangq:微信版APP订单查询 -->
	<select id="selectOrderInfoByUserId" parameterType="java.util.Map"
		resultMap="TradeOrderVo">
		SELECT
		tr.id,tr.order_no,tr.actual_amount,tr.total_amount,tr.preferential_price,tr.fare,tr.status,
		(select sum(ti.quantity) from trade_order_item as ti where ti.order_id
		= tr.id) as goods_count,
		(select count(id) from trade_order_item as ti where ti.order_id = tr.id) as
		goods_type_count,
		tr.create_time,tr.activity_type,tr.activity_id
		FROM trade_order as tr
		WHERE tr.user_id = #{userId,jdbcType=VARCHAR}
		ORDER BY tr.create_time DESC
	</select>

	<!-- yangq:微信版APP订单查询 等待卖家付款 -->
	<select id="selectUnpaidOrderInfoByUserId" parameterType="java.util.Map"
		resultMap="TradeOrderVo">
		SELECT
		tr.id,tr.order_no,tr.actual_amount,tr.trade_num,tr.pay_way,tr.user_id,tr.total_amount,tr.preferential_price,tr.fare,tr.status,
		(select sum(ti.quantity) from trade_order_item as ti where ti.order_id
		= tr.id) as goods_count,
		(select count(id) from trade_order_item as ti where ti.order_id = tr.id) as
		goods_type_count,
		tr.create_time,tr.activity_type,tr.activity_id
		FROM trade_order as tr
		WHERE tr.user_id = #{userId,jdbcType=VARCHAR}
		<if test="status != null">
			AND tr.`status` IN(0)
		</if>
		ORDER BY tr.create_time DESC
	</select>

	<!-- yangq:微信版APP订单查询 待发货 -->
	<select id="selectDropShippingOrderInfoByUserId" parameterType="java.util.Map"
		resultMap="TradeOrderVo">
		SELECT
		tr.id,tr.order_no,tr.actual_amount,tr.total_amount,tr.preferential_price,tr.fare,tr.status,
		(select sum(ti.quantity) from trade_order_item as ti where ti.order_id
		= tr.id) as goods_count,
		(select count(id) from trade_order_item as ti where ti.order_id = tr.id) as
		goods_type_count,
		tr.create_time,tr.activity_type,tr.activity_id
		FROM trade_order as tr
		WHERE tr.user_id = #{userId,jdbcType=VARCHAR}
		<if test="status != null">
			AND tr.`status` IN(1)
		</if>
		ORDER BY tr.create_time DESC
	</select>

	<!-- yangq:微信版APP订单查询 已发货(待收货) -->
	<select id="selectToBeOrderInfoByUserId" parameterType="java.util.Map"
		resultMap="TradeOrderVo">
		SELECT
		tr.id,tr.order_no,tr.actual_amount,tr.total_amount,tr.preferential_price,tr.fare,tr.status,
		(select sum(ti.quantity) from trade_order_item as ti where ti.order_id
		= tr.id) as goods_count,
		(select count(id) from trade_order_item as ti where ti.order_id = tr.id) as
		goods_type_count,
		tr.create_time,tr.activity_type,tr.activity_id
		FROM trade_order as tr
		WHERE tr.user_id = #{userId,jdbcType=VARCHAR}
		<if test="status != null">
			AND tr.`status` IN(1)
		</if>
		ORDER BY tr.create_time DESC
	</select>

	<!-- 订单回款列表 -->
	<select id="posOrderReceivedList" parameterType="java.util.Map"
		resultType="com.okdeer.mall.order.entity.TradeOrder">
		<!-- SELECT a.id, a.order_no as orderNo,count(b.id) AS quantity,a.actual_amount 
			as actualAmount,a.fare, -->
		<!-- a.create_time as createTime,a.store_id as storeId,a.status,a.pay_way 
			as payWay ,a.payment_status,a.pick_up_type -->
		<!-- FROM trade_order a LEFT JOIN trade_order_item b ON a.id = b.order_id -->
		<!-- GROUP BY a.order_no -->
		<!-- HAVING a.store_id = #{storeId} AND a.pay_way = #{payWay} AND payment_status 
			= #{paymentStatus} and pick_up_type= #{pickUpType} -->

		<!-- <if test="status != null and status !=''"> -->
		<!-- AND a.status IN -->
		<!-- <foreach collection="status" index="index" item="item" open="(" separator="," 
			close=")"> -->
		<!-- #{item} -->
		<!-- </foreach> -->
		<!-- </if> -->
		SELECT
		a.id,
		a.order_no AS orderNo,
		(select count(*) from trade_order_item b where b.order_id = a.id) AS
		quantity,
		a.actual_amount AS actualAmount,
		a.fare,
		a.create_time AS createTime,
		a.store_id AS storeId,
		a.STATUS,
		a.pay_way AS payWay,
		a.payment_status,
		a.pick_up_type
		FROM
		trade_order a
		where 1=1
		<if test="storeId != null and storeId != ''">
			AND a.store_id = #{storeId}
		</if>
		<if test="payWay != null ">
			AND a.pay_way = #{payWay}
		</if>
		<if test="paymentStatus != null">
			AND a.payment_status = #{paymentStatus}
		</if>
		<if test="pickUpType != null ">
			AND a.pick_up_type= #{pickUpType}
		</if>
		<if test="status != null ">
			AND a.status IN
			<foreach collection="status" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		order by a.create_time asc
	</select>
	<!-- 订单回款详情 -->
	<select id="orderReceivedDetail" parameterType="java.util.Map"
		resultType="com.okdeer.mall.order.entity.TradeOrderItem">
		SELECT o.`activity_type` as activityType, o.`activity_id` as activityId,
		item.`bar_code` as barCode,item.`sku_name` as
		skuName,item.`properties_indb` as
		propertiesIndb,item.`quantity`,item.`unit_price` as unitPrice,
		item.total_amount as totalAmount,item.actual_amount as
		actualAmount,item.preferential_price as preferentialPrice

		FROM trade_order o
		LEFT JOIN trade_order_item item ON o.id = item.order_id
		WHERE o.id = #{orderId}
	</select>

	<!-- POS现金统计 -->
	<select id="findPosCashCount" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT
		IFNULL(SUM(o.actual_amount),0)
		FROM
		trade_order o
		left join trade_order_pay pay ON pay.order_id = o.id
		WHERE
		o.store_id = #{storeId,jdbcType=VARCHAR}
		AND o.order_resource = 2
		AND o.pay_way =
		3
		AND pay.pay_type = 4
		AND o.create_time &gt;
		#{start,jdbcType=TIMESTAMP}
		AND o.create_time &lt;=
		#{end,jdbcType=TIMESTAMP}

	</select>

	<!-- 货到付款现金统计 -->
	<select id="findOnlineCashCount" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT
		IFNULL(SUM(o.actual_amount),0)
		FROM
		trade_order o
		WHERE
		o.store_id = #{storeId,jdbcType=VARCHAR}
		AND o.payment_status = 1 AND o.pay_way =
		1
		AND o.payment_time &gt; #{start,jdbcType=TIMESTAMP}
		AND o.payment_time
		&lt;= #{end,jdbcType=TIMESTAMP}
	</select>

	<!-- 线上订单总额统计 -->
	<select id="findOnlineSum" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		<![CDATA[ SELECT
			IFNULL(sum(o.total_amount),0.00)
		FROM
			trade_order o LEFT JOIN trade_order_pay p ON p.order_id=o.id
		WHERE
			o.store_id = #{storeId,jdbcType=VARCHAR}
		AND o.order_resource != 2
		AND o.pay_way = 0 AND o.status <> 4 
		AND o.delivery_time > #{start,jdbcType=TIMESTAMP}
		AND o.delivery_time <= #{end,jdbcType=TIMESTAMP} ]]>
	</select>

	<!-- 配送费总额 统计 -->
	<select id="findFareSum" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
   <![CDATA[ SELECT IFNULL(sum(o.fare),0.00)
		FROM
			trade_order o LEFT JOIN trade_order_pay p ON p.order_id=o.id
		WHERE
			o.store_id = #{storeId,jdbcType=VARCHAR}
		AND o.order_resource != 2 
		AND o.status <> 4 
		AND (
		       (
		          o.pay_way = 0 AND o.delivery_time > #{start,jdbcType=TIMESTAMP} AND o.delivery_time <= #{end,jdbcType=TIMESTAMP}
		       )
               OR (
                     o.pay_way=1 AND o.payment_status = 1 
                     AND o.payment_time > #{start,jdbcType=TIMESTAMP} AND o.payment_time <= #{end,jdbcType=TIMESTAMP}
                  )
		   ) ]]>
	</select>

	<!-- pos销售总额统计 -->
	<select id="findPosSum" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT
		IFNULL(sum(o.actual_amount),0.00)
		FROM
		trade_order o
		WHERE
		o.store_id = #{storeId,jdbcType=VARCHAR}
		AND o.order_resource = 2
		AND o.pay_way = 3
		AND o.create_time &gt; #{start,jdbcType=TIMESTAMP}
		AND
		o.create_time &lt;= #{end,jdbcType=TIMESTAMP}
	</select>

	<!-- 根据店铺id、时间段查询订单统计数据 -->
	<select id="findPosShiftExchangeByStoreId" resultMap="PosShiftExchangeResultMap">
        <![CDATA[  SELECT IFNULL(SUM(onlineOrderTotal),0.00) AS onlineOrderTotal, IFNULL(SUM(payDelivery),0.00) AS payDelivery, IFNULL(SUM(posTotalSales),0.00) AS posTotalSales, 
                          IFNULL(SUM(deliverFee),0.00) AS deliverFee, IFNULL(SUM(posTotalCash),0.00) AS actualCashTotal
			FROM (
				SELECT
				CASE WHEN tt.pay_way = 0 AND tt.`status` IN(3, 5) THEN tt.income ELSE 0 END AS onlineOrderTotal,
				CASE WHEN tt.pay_way = 1 AND tt.payment_status = 1 THEN tt.income ELSE 0 END AS payDelivery,
				CASE WHEN tt.order_resource = 2 AND tt.`status` IN(3, 5) THEN tt.income ELSE 0 END AS posTotalSales,
				CASE WHEN tt.order_resource = 2 AND tp.pay_type = 4 AND tt.`status` IN(3, 5) THEN tt.income ELSE 0 END AS posTotalCash,
				tt.fare AS deliverFee
				FROM trade_order tt LEFT JOIN trade_order_pay tp ON tp.order_id = tt.id
				WHERE tt.store_id = #{storeId,jdbcType=VARCHAR} 
				AND tt.disabled = 0 	
				AND (
				(((tt.order_resource = 2 OR tt.pay_way = 0) AND tt.`status` IN(3, 5))
					AND tt.delivery_time > #{startTime,jdbcType=TIMESTAMP}
				    AND tt.delivery_time <= #{endTime,jdbcType=TIMESTAMP}
				)  OR
				(tt.pay_way = 1 AND tt.payment_status = 1
			     	AND tt.payment_time > #{startTime,jdbcType=TIMESTAMP} 
				 	AND tt.payment_time <= #{endTime,jdbcType=TIMESTAMP}
				))
			) aa
         ]]>
	</select>

	<select id="getTradeOrderRefundsImage" parameterType="java.lang.String"
		resultType="com.okdeer.mall.order.entity.TradeOrderRefundsImage">
		select image_path as imagePath from trade_order_refunds_image where
		refunds_id = #{refundsId}
	</select>






	<sql id="orderStatisticsCondition">
		<if test="orderResource != null">
			AND o.order_resource IN
			<foreach collection="orderResource" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="status != null">
			AND o.STATUS IN
			<foreach collection="status" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="payWay != null">
			AND o.`pay_way` = #{payWay}
		</if>
		<if test="paymentStatus != null">
			AND o.payment_status = #{paymentStatus}
		</if>
		<if test="storeId != null and storeId !=''">
			AND o.`store_id` = #{storeId}
		</if>
		<!-- <if test="sellerId != null and sellerId !=''"> AND o.`seller_id` = 
			#{sellerId} </if> -->

		<if test="activityType != null">
			AND o.activity_type IN
			<foreach collection="activityType" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="startTime != null">
			<if test="payWay != null and payWay == 1">
			    <![CDATA[  AND o.payment_time >= #{startTime} ]]>
			</if>
			<if test="payWay == null or payWay != 1">
			     <![CDATA[ AND o.`delivery_time` >= #{startTime} ]]>
			</if>
		</if>
		<if test="endTime != null">
			<if test="payWay != null and payWay == 1">
			    <![CDATA[  AND o.payment_time <= #{endTime} ]]>
			</if>
			<if test="payWay == null or payWay != 1">
			     <![CDATA[ AND o.`delivery_time` <= #{endTime} ]]>
			</if>
		</if>
	</sql>

	<!-- 根据条件获取订单数量 -->
	<select id="getOrderCountByParames" parameterType="java.util.Map"
		resultType="int">
		SELECT COUNT(o.`id`) AS COUNT FROM trade_order o
		WHERE 1=1
		<include refid="orderStatisticsCondition" />
	</select>

	<!-- 根据条件获取订单金额 -->
	<select id="getOrderAmountByParames" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM(o.`total_amount`) AS amount
		<!-- <if test="orderResourceType == 2"> SUM(o.`total_amount`) AS amount 
			</if> <if test="orderResourceType == 0 or orderResourceType ==1"> SUM(o.`total_amount` 
			+ o.`fare`) AS amount </if> -->
		FROM trade_order o
		WHERE 1=1
		<include refid="orderStatisticsCondition" />
	</select>
	<!-- 根据条件获取退款金额 -->
	<select id="getRefundAmountByParames" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM(r.`total_amount`) AS amount FROM trade_order_refunds r
		INNER JOIN trade_order o ON o.`order_no` = r.`order_no`
		WHERE 1=1
		<if test="orderResource != null">
			AND r.order_resource IN
			<foreach collection="orderResource" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="refundsStatus != null">
			AND r.refunds_status IN
			<foreach collection="refundsStatus" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="payWay != null">
			AND o.`pay_way` = #{payWay}
		</if>
		<if test="storeId != null and storeId !=''">
			AND o.`store_id` = #{storeId}
		</if>
		<!-- <if test="sellerId != null and sellerId !=''"> AND o.`seller_id` = 
			#{sellerId} </if> -->

		<if test="startTime != null">
			 <![CDATA[  AND r.`refund_money_time` >= #{startTime} ]]>
		</if>
		<if test="endTime != null">
			 <![CDATA[  AND r.`refund_money_time` <= #{endTime} ]]>
		</if>
		<if test="paymentMethod != null">
			AND r.`payment_Method` = #{paymentMethod}
		</if>

	</select>


	<!-- 根据条件获取退款平台优惠金额 -->
	<select id="getRefundPlatformDiscountByParames" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM( r.total_preferential_price) AS amount FROM
		trade_order_refunds r
		INNER JOIN trade_order o ON o.`order_no` = r.`order_no` INNER JOIN
		activity_discount d
		ON o.`activity_id` = d.`id` AND d.`store_id` ='0'
		WHERE 1=1
		<if test="orderResource != null">
			AND r.order_resource IN
			<foreach collection="orderResource" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="refundsStatus != null">
			AND r.refunds_status IN
			<foreach collection="refundsStatus" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="payWay != null">
			AND o.`pay_way` = #{payWay}
		</if>
		<if test="storeId != null and storeId !=''">
			AND o.`store_id` = #{storeId}
		</if>
		<!-- <if test="sellerId != null and sellerId !=''"> AND o.`seller_id` = 
			#{sellerId} </if> -->

		<if test="startTime != null">
            <![CDATA[  AND r.`refund_money_time` >= #{startTime} ]]>
		</if>
		<if test="endTime != null">
			<![CDATA[  AND r.`refund_money_time` <= #{endTime} ]]>
		</if>

		<if test="paymentMethod != null">
			AND r.`payment_Method` = #{paymentMethod}
		</if>
		<if test="activityType != null">
			AND o.activity_type IN
			<foreach collection="activityType" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>

	</select>


	<!-- 根据条件获取退款代金劵金额 -->
	<select id="getRefundPlatformCouponByParames" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM(o.`preferential_price`) AS amount FROM trade_order_refunds
		r
		INNER JOIN trade_order o ON o.`order_no` = r.`order_no` RIGHT JOIN (

		SELECT o.`preferential_price`,o.order_no FROM trade_order o INNER JOIN
		activity_coupons c
		ON o.`activity_id` = c.`activity_id`
		WHERE 1=1
		<if test="orderResource != null">
			AND o.order_resource IN
			<foreach collection="orderResource" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="payWay != null">
			AND o.`pay_way` = #{payWay}
		</if>

		<if test="storeId != null and storeId !=''">
			AND o.`store_id` = #{storeId}
		</if>
		GROUP BY o.order_no

		) b ON o.order_no = b.order_no

		WHERE 1=1
		<if test="orderResource != null">
			AND r.order_resource IN
			<foreach collection="orderResource" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="refundsStatus != null">
			AND r.refunds_status IN
			<foreach collection="refundsStatus" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="payWay != null">
			AND o.`pay_way` = #{payWay}
		</if>
		<if test="storeId != null and storeId !=''">
			AND o.`store_id` = #{storeId}
		</if>
		<!-- <if test="sellerId != null and sellerId !=''"> AND o.`seller_id` = 
			#{sellerId} </if> -->

		<if test="startTime != null">
			AND r.`refund_money_time` >= #{startTime}
		</if>
		<if test="endTime != null">
			AND r.`refund_money_time`  <![CDATA[ <= ]]>
			#{endTime}
		</if>
		<if test="paymentMethod != null">
			AND r.`payment_Method` = #{paymentMethod}
		</if>
		<if test="activityType != null">
			AND o.activity_type IN
			<foreach collection="activityType" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>

	</select>

	<!-- 根据条件获取商家优惠金额 -->
	<select id="getStoreDiscountByParames" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM(o.`preferential_price` ) AS preferentialPrice FROM
		trade_order o INNER JOIN activity_discount d
		ON o.`activity_id` = d.`id` AND d.`store_id` !='0'
		WHERE 1=1
		<include refid="orderStatisticsCondition" />
	</select>
	<!-- 根据条件获取平台优惠金额 -->
	<select id="getPlatformDiscountByParames" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM(o.`preferential_price` ) AS preferentialPrice FROM
		trade_order o INNER JOIN activity_discount d
		ON o.`activity_id` = d.`id` AND d.`store_id` ='0'
		WHERE 1=1
		<include refid="orderStatisticsCondition" />
	</select>
	<!-- 根据条件获取代金卷金额 -->
	<select id="getCouponAmountByParames" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">

		select sum(a.preferential_price) AS preferentialPrice From trade_order
		a right join (

		SELECT o.`preferential_price`,o.order_no FROM trade_order o INNER JOIN
		activity_coupons c
		ON o.`activity_id` = c.`activity_id`
		WHERE 1=1
		<include refid="orderStatisticsCondition" />
		group by o.order_no

		) b on a.order_no = b.order_no
	</select>
	<!-- 根据条件获取配送费 -->
	<select id="getFareAmountByParames" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM(o.`fare`) AS fare FROM trade_order o
		WHERE 1=1
		<include refid="orderStatisticsCondition" />
	</select>

	<!-- 根据条件获取实收金额 -->
	<select id="getActualAmoutByParames" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM(o.`actual_amount`) AS actualAmount FROM trade_order o
		WHERE 1=1
		<include refid="orderStatisticsCondition" />
	</select>
	<!-- 根据条件获取支付金额 -->
	<select id="getPayAmoutByParames" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM(o.`actual_amount`) AS amount FROM trade_order o INNER JOIN
		trade_order_pay p ON o.`id` = p.`order_id`
		WHERE 1=1
		<include refid="orderStatisticsCondition" />
		AND p.pay_type = #{payType}
	</select>


	<!-- 根据条件获取货到付款金额 -->
	<select id="getDeliveryCashPayAmoutByParames" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM(o.`actual_amount`) AS amount FROM trade_order o
		WHERE 1=1
		<include refid="orderStatisticsCondition" />
	</select>

	<!-- zengj:查询店铺当天的收入-商家云钱包的实际入账金额 -->
	<select id="selectOrderAmount" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM(tr.income)
		FROM trade_order tr
		WHERE (tr.received_time BETWEEN #{startTime,jdbcType=TIMESTAMP} AND
		#{endTime,jdbcType=TIMESTAMP}
		OR tr.payment_time BETWEEN #{startTime,jdbcType=TIMESTAMP} AND
		#{endTime,jdbcType=TIMESTAMP}
		)
		AND tr.store_id = #{storeId, jdbcType=VARCHAR}
		<if test="type != null">
	    AND tr.type = #{type,jdbcType=TINYINT}
		</if>
	</select>
	<!-- zengj:查询店铺当天的退单(负收入)-商家云钱包的实际扣款金额 -->
	<select id="selectRefundAmount" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM(ri.income)
		FROM trade_order_refunds tr
		LEFT JOIN trade_order_refunds_item ri ON tr.id = ri.refunds_id
		WHERE tr.refund_money_time BETWEEN #{startTime,jdbcType=TIMESTAMP} AND
		#{endTime,jdbcType=TIMESTAMP}
		AND tr.store_id = #{storeId, jdbcType=VARCHAR}
		<if test="refundsOrderType != null">
	    AND tr.type = #{refundsOrderType,jdbcType=TINYINT}
		</if>
	</select>
	<!-- zengj:今日(昨日)营收列表 -->
	<select id="selectOrderIncomeList" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT tradeNo,income,tradeTime,types
		FROM
		(SELECT order_no AS tradeNo,income,received_time AS tradeTime,0 as
		type
		FROM trade_order
		WHERE store_id = #{storeId, jdbcType=VARCHAR}
		AND (received_time BETWEEN #{startTime,jdbcType=TIMESTAMP} AND
		#{endTime,jdbcType=TIMESTAMP}
		OR payment_time BETWEEN #{startTime,jdbcType=TIMESTAMP} AND
		#{endTime,jdbcType=TIMESTAMP}
		)
		<if test="type != null">
	    	AND trade_order.type = #{type,jdbcType=TINYINT}
		</if>
		UNION ALL
		SELECT refund_no AS tradeNo,(select sum(income) from
		trade_order_refunds_item i where i.refunds_id = r.id) as
		income,refund_money_time AS tradeTime,1 as types
		FROM trade_order_refunds r
		WHERE store_id = #{storeId, jdbcType=VARCHAR}
		AND refund_money_time BETWEEN #{startTime,jdbcType=TIMESTAMP} AND
		#{endTime,jdbcType=TIMESTAMP}
		 <if test="refundsOrderType != null">
	    	AND r.type = #{refundsOrderType,jdbcType=TINYINT}
		</if>
		) AS tmp
		ORDER BY
		tradeTime DESC
	</select>

	<!-- zengj:查询提货码验证记录 -->
	<select id="selectPickUpRecord" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT tr.id,tr.pick_up_code as pickUpCode,
		(select GROUP_CONCAT(sku_name) from trade_order_item ti where ti.order_id =
		tr.id) as skuNames,
		tr.actual_amount as actualAmount,tr.received_time as receivedTime
		FROM trade_order tr
		WHERE tr.pick_up_type = 1
		AND tr.received_time is not null
		<if test="storeId != null and storeId != ''">
			AND tr.store_id = #{storeId,jdbcType=VARCHAR}
		</if>
		<if test="pickUpCode != null and pickUpCode != ''">
			AND pick_up_code = #{pickUpCode,jdbcType=VARCHAR}
		</if>
		<if test="startTime != null">
			AND received_time &gt;= #{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			AND received_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
		ORDER BY received_time desc
	</select>
	<!-- zengj:统计提货码总额 -->
	<select id="selectPickUpTotalAmount" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT SUM(actual_amount) as totalActualAmount
		FROM trade_order tr
		WHERE tr.pick_up_type = 1
		AND tr.received_time is not null
		<if test="storeId != null and storeId != ''">
			AND tr.store_id = #{storeId,jdbcType=VARCHAR}
		</if>
		<if test="pickUpCode != null and pickUpCode != ''">
			AND pick_up_code = #{pickUpCode,jdbcType=VARCHAR}
		</if>
		<if test="startTime != null">
			AND received_time &gt;= #{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			AND received_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
	</select>

	<!-- zengj:查询消费码使用记录 -->
	<select id="selectConsumeCodeUseRecord" parameterType="java.util.Map"
		resultType="java.util.Map">
		select ti.id,tid.consume_code as consumeCode,ti.sku_name as
		skuName,ti.actual_amount as actualAmount,ti.unit_price as
		unitPrice,tid.use_time as useTime,ti.quantity
		FROM trade_order_item ti
		LEFT JOIN trade_order_item_detail tid ON ti.id = tid.order_item_id
		LEFT
		JOIN trade_order tr ON ti.order_id = tr.id
		WHERE tid.use_time is not
		null
		<if test="storeId != null and storeId != ''">
			AND tr.store_id = #{storeId,jdbcType=VARCHAR}
		</if>
		<if test="consumeCode != null and consumeCode != ''">
			AND tid.consume_code = #{consumeCode,jdbcType=VARCHAR}
		</if>
		<if test="skuName != null and skuName != ''">
			AND ti.sku_name like
			CONCAT('%',#{skuName,jdbcType=VARCHAR},'%')
		</if>
		<if test="startTime != null">
			AND tid.use_time &gt;= #{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			AND tid.use_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
	</select>

	<!-- zengj:根据消费码查询订单信息 -->
	<select id="selectOrderDetailByConsumeCode" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT
		tid.id as detailId,ti.id as orderItemId,tr.id,tid.start_time as
		startTime,
		tid.end_time as endTime,cast(tid.`status` as SIGNED) as
		`status`,ti.unit_price as unitPrice,
		tr.user_id as userId,tr.trade_num
		as tradeNum,tr.order_no as orderNo,mr.sys_user_id as
		storeUserId,tr.total_amount as totalAmount
		FROM
		trade_order_item_detail tid
		INNER JOIN trade_order_item ti on tid.order_item_id = ti.id
		INNER JOIN trade_order tr on ti.order_id = tr.id
		LEFT JOIN store_member_relation mr ON (mr.store_id = tr.store_id and
		mr.menber_type = 0)
		WHERE 1=1
		<if test="storeId != null and storeId != ''">
			AND tr.store_id = #{storeId,jdbcType=VARCHAR}
		</if>
		<if test="consumeCode != null and consumeCode != ''">
			AND tid.consume_code = #{consumeCode,jdbcType=VARCHAR}
		</if>
	</select>

	<!-- zengj:查询消费码订单总额 -->
	<select id="selectConsumeTotalAmount" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		SELECT sum(ti.actual_amount) as actual_amount
		FROM trade_order_item ti
		LEFT JOIN trade_order_item_detail tid ON ti.id = tid.order_item_id
		LEFT JOIN trade_order tr ON ti.order_id = tr.id
		WHERE tid.use_time is not null
		<if test="storeId != null and storeId != ''">
			AND tr.store_id = #{storeId,jdbcType=VARCHAR}
		</if>
		<if test="consumeCode != null and consumeCode != ''">
			AND tid.consume_code = #{consumeCode,jdbcType=VARCHAR}
		</if>
		<if test="skuName != null and skuName != ''">
			AND ti.sku_name like CONCAT('%',#{skuName,jdbcType=VARCHAR},'%')
		</if>
		<if test="startTime != null">
			AND tid.use_time &gt;= #{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			AND tid.use_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
	</select>
	<!-- zengj:查询买家实物订单各状态订单数量 -->
	<select id="selectBuyerPhysicalOrderCount" parameterType="java.lang.String"
		resultMap="TradeOrderStatusVoMap">
		(SELECT
		count(
		CASE
		WHEN `status` IN (0, 11) THEN
		0
		WHEN `status` IN (1) THEN
		1
		WHEN `status` IN (3) THEN
		3
		END
		) AS `count`,

		CASE
		WHEN `status` in(0,11) THEN 'unPayCnt'
		WHEN `status` = 1 THEN 'unDeliverCnt'
		WHEN `status` = 3 THEN 'unReceiptCnt'
		END as status_name
		FROM
		trade_order
		WHERE
		type= 0
		and user_id = #{userId, jdbcType=VARCHAR}
		and is_show = 1
		AND `status` IN (0,11, 1, 3)
		GROUP BY
		CASE
		WHEN `status` IN (0, 11) THEN
		0
		WHEN `status` IN (1) THEN
		1
		WHEN `status` IN (3) THEN
		3
		END
		)
		union ALL
		(select count(1) as `count`, 'refundCnt' as status_name
		from trade_order_refunds where user_id = #{userId, jdbcType=VARCHAR}
		and type= 0
		and is_show = 1)
		union all
		(select count(1) as `count`, 'unAppraiseCnt' as status_name from trade_order
		o where o.status = 5 and not exists (select 1 from trade_order_comment
		i where o.id = i.order_id)
		and o.user_id = #{userId, jdbcType=VARCHAR}
		and o.type = 0
		and is_show = 1)
	</select>

	<!-- add by wushp:微信查询买家实物订单各状态订单数量 -->
	<select id="selectWxBuyerPhysicalOrderCount" parameterType="java.lang.String"
		resultMap="TradeOrderStatusVoMap">
		(SELECT
		count(
		CASE
		WHEN torder.`status` IN (0, 11) THEN
		0
		WHEN torder.`status` IN (1) THEN
		1
		WHEN torder.`status` IN (3) THEN
		3
		END
		) AS `count`,

		CASE
		WHEN torder.`status` in(0,11) THEN 'unPayCnt'
		WHEN torder.`status` = 1 THEN 'unDeliverCnt'
		WHEN torder.`status` = 3 THEN 'unReceiptCnt'
		END as status_name
		FROM
		trade_order torder LEFT JOIN store_info store ON torder.store_id = store.id
		WHERE
		torder.type= 0
		and torder.user_id = #{userId, jdbcType=VARCHAR}
		and torder.is_show = 1
		AND torder.`status` IN (0,11, 1, 3)
		AND store.type=2
		GROUP BY
		CASE
		WHEN torder.`status` IN (0, 11) THEN
		0
		WHEN torder.`status` IN (1) THEN
		1
		WHEN torder.`status` IN (3) THEN
		3
		END
		)
		union ALL
		(select count(1) as `count`, 'refundCnt' as status_name
		from trade_order_refunds refunds LEFT JOIN store_info store ON
		refunds.store_id = store.id
		where refunds.user_id = #{userId, jdbcType=VARCHAR}
		and refunds.type= 0
		and refunds.is_show = 1
		AND store.type=2
		)
		union all
		(select count(1) as `count`, 'unAppraiseCnt' as status_name
		from trade_order o LEFT JOIN store_info store ON o.store_id = store.id
		where o.status = 5 and not exists (select 1 from trade_order_comment i
		where o.id = i.order_id)
		and o.user_id = #{userId, jdbcType=VARCHAR}
		and o.type = 0
		and o.is_show = 1
		AND store.type=2
		)
	</select>

	<!-- zengj：查询买家服务订单个状态订单数量 -->
	<!-- update by wushp -->
	<select id="selectBuyerServiceOrderCount" parameterType="java.lang.String"
		resultMap="TradeOrderStatusVoMap">
		(SELECT
		count(0) AS `count`,
		CASE
		WHEN `status` in(0,11) THEN 'unPayCnt'
		WHEN
		`status` = 1 THEN 'unServiceCnt'
		WHEN `status` = 3 THEN
		'alreadyStartedCnt'
		END
		AS status_name
		FROM
		trade_order
		WHERE type= 2
		AND user_id = #{userId, jdbcType=VARCHAR}
		AND is_show = 1
		AND
		`status` IN (0,11, 1, 3)
		AND disabled = 0
		GROUP BY
		CASE
		WHEN `status` IN (0, 11) THEN
		0
		WHEN `status` IN (1) THEN
		1
		WHEN
		`status` IN (3) THEN
		3
		END
		)
		UNION ALL
		(SELECT count(1) AS `count`, 'unAppraiseCnt' AS status_name
		FROM trade_order o WHERE o.status = 5 AND NOT EXISTS (SELECT 1 FROM
		trade_order_comment i WHERE o.id = i.order_id)
		AND o.user_id = #{userId,jdbcType=VARCHAR}
		AND o.type = 2
		AND is_show = 1
		AND disabled = 0)
	</select>

	<select id="selectTradeOrderStatistics" resultMap="TradeOrderStatisticsVoMap">
		SELECT IFNULL(SUM(tmp.orders), 0) order_counts,
		IFNULL(SUM(tmp.total_amount), 0) order_total_amount,
		COUNT(tmp.user_id) user_counts,
		(SELECT COUNT(*) FROM trade_order_refunds toref WHERE toref.refunds_status IN
		(6, 11, 13)
		AND CURDATE()=DATE_FORMAT(toref.create_time,'%Y-%m-%d')
		AND toref.store_id = #{storeId,jdbcType=VARCHAR}) order_refunds_counts
		FROM (SELECT user_id,
		COUNT(*) orders,
		SUM(actual_amount) total_amount
		FROM trade_order tord
		WHERE ((tord.pay_way=1 AND tord.payment_status=1) OR (tord.pay_way IN(0,3)
		AND tord.status IN(1,3,5)))
		AND CURDATE()=DATE_FORMAT(tord.create_time,'%Y-%m-%d')
		AND tord.store_id = #{storeId, jdbcType=VARCHAR}
		GROUP BY user_id) tmp
		UNION ALL
		SELECT IFNULL(SUM(tmp.orders),0)
		order_counts,
		IFNULL(SUM(tmp.total_amount),0) order_total_amount,
		COUNT(tmp.user_id) user_counts,
		(SELECT COUNT(*) FROM trade_order_refunds toref WHERE toref.refunds_status IN
		(6, 11, 13)
		AND YEARWEEK(toref.create_time,3)=YEARWEEK(NOW(),3)
		AND toref.store_id = #{storeId, jdbcType=VARCHAR}) order_refunds_counts
		FROM (SELECT user_id,
		COUNT(*) orders,
		SUM(actual_amount) total_amount
		FROM trade_order tord
		WHERE ((tord.pay_way=1 AND tord.payment_status=1) OR (tord.pay_way IN(0,3)
		AND tord.status IN(1,3,5)))
		AND YEARWEEK(tord.create_time,3)=YEARWEEK(NOW(),3)
		AND tord.store_id = #{storeId, jdbcType=VARCHAR}
		GROUP BY user_id) tmp
		UNION ALL
		SELECT IFNULL(SUM(tmp.orders),0)
		order_counts,
		IFNULL(SUM(tmp.total_amount),0) order_total_amount,
		COUNT(tmp.user_id) user_counts,
		(SELECT COUNT(*) FROM trade_order_refunds toref WHERE toref.refunds_status IN
		(6, 11, 13)
		AND DATE_FORMAT(CURDATE(),'%Y-%m')=DATE_FORMAT(toref.create_time,'%Y-%m')
		AND toref.store_id = #{storeId, jdbcType=VARCHAR})
		order_refunds_counts
		FROM (SELECT user_id,
		COUNT(*) orders,
		SUM(actual_amount) total_amount
		FROM trade_order tord
		WHERE ((tord.pay_way=1 AND tord.payment_status=1) OR (tord.pay_way IN(0,3)
		AND tord.status IN(1,3,5)))
		AND DATE_FORMAT(CURDATE(),'%Y-%m')=DATE_FORMAT(tord.create_time,'%Y-%m')
		AND tord.store_id = #{storeId, jdbcType=VARCHAR}
		GROUP BY user_id) tmp
		UNION ALL
		SELECT IFNULL(SUM(tmp.orders),0) order_counts,
		IFNULL(SUM(tmp.total_amount),0) order_total_amount,
		COUNT(tmp.user_id) user_counts,
		(SELECT COUNT(*) FROM trade_order_refunds toref WHERE toref.refunds_status IN
		(6, 11, 13)
		AND YEAR(CURDATE())=YEAR(toref.create_time)
		AND toref.store_id = #{storeId, jdbcType=VARCHAR}) order_refunds_counts
		FROM (SELECT user_id,
		COUNT(*) orders,
		SUM(actual_amount) total_amount
		FROM trade_order tord
		WHERE ((tord.pay_way=1 AND tord.payment_status=1) OR (tord.pay_way IN(0,3)
		AND tord.status IN(1,3,5)))
		AND YEAR(CURDATE())=YEAR(tord.create_time)
		AND tord.store_id = #{storeId, jdbcType=VARCHAR}
		GROUP BY user_id) tmp
	</select>

	<!-- 目前要求统计右下角数量 -->
	<select id="selectWindowTipOrderCounts" resultType="java.util.HashMap">
		SELECT
		(SELECT COUNT(*)
		FROM trade_order tord
		WHERE DATE_FORMAT(tord.create_time,'%Y-%m-%d') >=
		DATE_ADD(CURDATE(),INTERVAL -3 DAY)
		AND tord.status = 1
		AND tord.store_id = #{storeId, jdbcType=VARCHAR}) orderCounts,
		(SELECT COUNT(*)
		FROM trade_order_refunds tord
		WHERE DATE_FORMAT(tord.create_time,'%Y-%m-%d') >=
		DATE_ADD(CURDATE(),INTERVAL -3 DAY)
		AND tord.refunds_status = 0
		AND tord.store_id = #{storeId, jdbcType=VARCHAR}) orderRefundsCounts,
		(SELECT COUNT(*) order_counts
		FROM trade_order_dispute tord
		WHERE DATE_FORMAT(tord.create_time,'%Y-%m-%d') >=
		DATE_ADD(CURDATE(),INTERVAL -3 DAY)
		AND tord.status = 0
		AND tord.store_id = #{storeId, jdbcType=VARCHAR}) orderDisputeCounts
		FROM
		DUAL
	</select>

	<!-- 查询订单列表 ERP接口 luosm start -->
	<select id="ERPSelectByParams" resultMap="ERPOrderResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Erp_column_list" />
		from trade_order
		where 1=1
		<if test="id != null and id != ''">
			and id = #{id, jdbcType=VARCHAR}
		</if>
		<if test="orderNo != null and orderNo != ''">
			and order_no = #{orderNo, jdbcType=VARCHAR}
		</if>
		<if test="storeName != null and storeName != ''">
			and store_name LIKE CONCAT('%', #{storeName,jdbcType=VARCHAR}, '%')
		</if>
		<if test="payWay != null">
			and pay_way = #{payWay, jdbcType=TINYINT}
		</if>
		<if test="userPhone != null and userPhone != ''">
			and user_phone = #{userPhone, jdbcType=VARCHAR}
		</if>
		<if test="type != null">
			and type = #{type, jdbcType=TINYINT}
		</if>
		<if test="status != null">
			and status = #{status, jdbcType=TINYINT}
		</if>
		<if test="startTime != null and endTime != null">
			and create_time BETWEEN #{startTime, jdbcType=TIMESTAMP} AND #{endTime,
			jdbcType=TIMESTAMP}
		</if>
		order by create_time desc
	</select>
	<!-- 查询订单列表 ERP接口 luosm end -->

	<!-- zengj:订单列表查询 -->
	<select id="selectOrderList" resultMap="TradeOrderMap"
		parameterType="java.util.Map">
		SELECT
		<include refid="order_pay_column_list" />
		FROM trade_order tr
		LEFT JOIN trade_order_pay op ON tr.id = op.order_id
		LEFT JOIN sys_user su ON su.id=tr.seller_id
		WHERE 1=1
		<include refid="order_paytype_condition" />
		<!-- 引用排序sql -->
		<include refid="order_paytype_orderby" />
	</select>
	<!-- zengj:订单项信息查询 -->
	<select id="selectOrderItemList" parameterType="java.util.Map"
		resultMap="TradeOrderItemMap">
		SELECT
		<include refid="order_column_list" />
		FROM trade_order AS tr LEFT JOIN trade_order_item it
		ON tr.id=it.order_id LEFT JOIN trade_order_pay op ON op.order_id=tr.id
		LEFT JOIN trade_order_refunds_item tori ON tori.order_item_id = it.id
		LEFT JOIN trade_order_refunds tor ON tori.refunds_id=tor.id
		LEFT JOIN trade_order_item_detail td ON td.order_item_id = it.id
		WHERE 1=1
		<include refid="order_condition" />
		ORDER BY it.id ASC
	</select>

	<resultMap id="PosTradeOrderMap" type="com.okdeer.mall.order.entity.TradeOrder"
		extends="BaseResultMap">
		<id property="id" column="id" jdbcType="VARCHAR" />
		<!-- 操作人用户信息 -->
		<association property="sysUser"
			javaType="com.okdeer.archive.system.entity.SysUser">
			<result column="user_name" property="userName" jdbcType="VARCHAR" />
			<result column="login_name" property="loginName" jdbcType="VARCHAR" />
		</association>
		<!-- 支付信息 -->
		<association property="tradeOrderPay"
			javaType="com.okdeer.mall.order.entity.TradeOrderPay">
			<result column="pay_type" property="payType" jdbcType="TINYINT" />
			<result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
			<result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
			<result column="pay_create_time" property="createTime"
				jdbcType="TIMESTAMP" />
		</association>

		<!-- 订单项信息 -->
		<collection property="tradeOrderItem"
			ofType="com.okdeer.mall.order.entity.TradeOrderItem" select="selectOrderItemListForSeller"
			column="{orderId = id}">
			<id column="item_id" property="id" jdbcType="VARCHAR" />
			<result column="order_id" property="orderId" jdbcType="VARCHAR" />
			<result column="store_spu_id" property="storeSpuId" jdbcType="VARCHAR" />
			<result column="store_sku_id" property="storeSkuId" jdbcType="VARCHAR" />
			<result column="sku_name" property="skuName" jdbcType="VARCHAR" />
			<result column="properties_indb" property="propertiesIndb"
				jdbcType="VARCHAR" />
			<result column="bar_code" property="barCode" jdbcType="VARCHAR" />
			<result column="style_code" property="styleCode" jdbcType="VARCHAR" />
			<result column="main_pic_prl" property="mainPicPrl" jdbcType="VARCHAR" />
			<result column="spu_type" property="spuType" jdbcType="TINYINT"
				javaType="com.okdeer.archive.goods.base.enums.GoodsTypeEnum" />
			<result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
			<result column="quantity" property="quantity" jdbcType="INTEGER" />
			<result column="service_assurance" property="serviceAssurance"
				jdbcType="INTEGER" />
			<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
			<result column="actual_amount" property="actualAmount"
				jdbcType="DECIMAL" />
			<result column="preferential_price" property="preferentialPrice"
				jdbcType="DECIMAL" />
			<result column="status" property="status" jdbcType="TINYINT"
				javaType="com.okdeer.mall.order.enums.OrderItemStatusEnum" />
			<result column="appraise" property="appraise" jdbcType="TINYINT"
				javaType="com.okdeer.mall.order.enums.AppraiseEnum" />
			<result column="compain_status" property="compainStatus"
				jdbcType="TINYINT" javaType="com.okdeer.mall.order.enums.CompainStatusEnum" />
			<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
			<result column="bar_code" property="barCode" jdbcType="VARCHAR" />
			<result column="sty_code" property="styleCode" jdbcType="VARCHAR" />
			<result column="trade_num" property="trade_num" jdbcType="VARCHAR" />
			<result column="weight" property="weight" jdbcType="DECIMAL" />
			<result column="income" property="income" jdbcType="DECIMAL" />

		</collection>
	</resultMap>
	<!-- wusw:pos订单列表查询（商家中心） update by zhongy 添加查询条件 -->
	<select id="selectPosOrderListForSeller" resultMap="PosTradeOrderMap"
		parameterType="java.util.Map">
		SELECT tr.*,op.pay_type,op.pay_time,su.login_name,su.user_name
		FROM trade_order tr
		LEFT JOIN trade_order_pay op ON tr.id = op.order_id
		LEFT JOIN sys_user su ON su.id=tr.seller_id
		WHERE 1=1
		AND tr.disabled=0
		<include refid="order_paytype_condition" />
		order by tr.create_time desc
	</select>
	<!-- wusw:pos订单项信息查询 （商家中心） -->
	<select id="selectOrderItemListForSeller" parameterType="java.util.Map"
		resultMap="TradeOrderItemMap">
		SELECT
		it.id,it.sku_name,it.main_pic_prl,it.unit_price,it.quantity,it.actual_amount,it.status,it.bar_code,it.style_code,it.order_id,it.properties_indb,it.spu_type,it.store_sku_id,
		tor.refunds_status,tor.id as refunds_id,tor.refund_no,
		it.trade_num,it.weight,it.income
		FROM trade_order AS tr LEFT JOIN trade_order_item it
		ON tr.id=it.order_id LEFT JOIN trade_order_pay op ON op.order_id=tr.id
		LEFT JOIN trade_order_refunds_item tori ON tori.order_item_id = it.id
		LEFT JOIN trade_order_refunds tor ON tori.refunds_id=tor.id
		WHERE 1=1
		<include refid="order_condition" />
		ORDER BY it.create_time ASC
	</select>



	<select id="selectTradeOrderInfo" parameterType="java.util.Map"
		resultType="int">
		SELECT COALESCE(SUM(ti.quantity),0) FROM trade_order tr
		LEFT JOIN trade_order_item ti ON tr.id=ti.order_id
		WHERE tr.user_id=#{userId,jdbcType=VARCHAR} AND
		tr.store_id=#{storeId,jdbcType=VARCHAR}
		AND ti.store_sku_id = #{storeSkuId,jdbcType=VARCHAR}
	</select>

	<select id="selectTradeOrderInfoCount" parameterType="java.util.Map"
		resultType="int">
		SELECT count(1) FROM trade_order tr
		LEFT JOIN trade_order_item ti ON tr.id=ti.order_id
		WHERE tr.user_id=#{userId,jdbcType=VARCHAR} AND
		tr.store_id=#{storeId,jdbcType=VARCHAR}
		AND tr.activity_id=#{activityId,jdbcType=VARCHAR}
	</select>

	<select id="selectOrderStatusByTradeNum" parameterType="string"
		resultType="int">
		select count(1) from trade_order tr where tr.trade_num =
		#{tradeNum,jdbcType=VARCHAR} and status = 0
	</select>

	<select id="selectTradeDetailInfoById" parameterType="java.lang.String"
		resultMap="BaseTradeOrderDetail">
		select * from trade_order tr left join trade_order_item ti on tr.id =
		ti.order_id where ti.order_id=#{orderId,jdbcType=VARCHAR}
	</select>

	<!-- zengj:统计订单金额 -POS销售统计 -->
	<select id="selectOrderIncome" resultType="java.util.Map"
		parameterType="java.util.Map">
		select sum(case when pay_way = 0 and delivery_time >=
		#{startTime,jdbcType=TIMESTAMP} then total_amount else 0 end)
		onlineOrderAmount,
		sum(case when pay_way = 1 and payment_time >= #{startTime,jdbcType=TIMESTAMP}
		then total_amount else 0 end) deliveryOrderAmount,
		sum(case when order_resource = 2 and delivery_time >=
		#{startTime,jdbcType=TIMESTAMP} then total_amount else 0 end)
		posOrderAmount
		from trade_order
		where `status` in (3,5)
		and (payment_time >= #{startTime,jdbcType=TIMESTAMP} or delivery_time >
		#{startTime,jdbcType=TIMESTAMP})
		and store_id = #{storeId,jdbcType=VARCHAR}
		AND disabled = 0
	</select>

	<!-- zengj:统计退款金额及退款优惠金额 -POS销售统计 -->
	<select id="selectRefundIncome" resultType="java.util.Map"
		parameterType="java.util.Map">
		select sum(case when o.pay_way = 0 and r.refund_money_time >=
		#{startTime,jdbcType=TIMESTAMP} then r.total_income else 0 end)
		onlineRefundAmount,
		sum(case when o.pay_way = 1 and r.refund_money_time >=
		#{startTime,jdbcType=TIMESTAMP} then r.total_income else 0 end)
		deliveryRefundAmount,
		sum(case when o.order_resource = 2 and r.refund_money_time >=
		#{startTime,jdbcType=TIMESTAMP} then r.total_income else 0 end)
		posRefundAmount,
		sum(case when o.pay_way = 0 and o.total_amount = o.income and o.activity_type
		= 2 and r.refund_money_time >= #{startTime,jdbcType=TIMESTAMP} then
		r.total_preferential_price else 0 end)
		onlineRefundPlatformPreferentialAmount,
		sum(case when o.pay_way = 1 and o.total_amount = o.income and o.activity_type
		= 2 and r.refund_money_time >= #{startTime,jdbcType=TIMESTAMP} then
		r.total_preferential_price else 0 end)
		deliveryRefundPlatformPreferentialAmount,
		sum(case when o.pay_way = 0 and o.activity_type = 1 and r.refund_money_time >=
		#{startTime,jdbcType=TIMESTAMP} then r.total_preferential_price else 0
		end) onlineRefundPlatformCouponAmount,
		sum(case when o.pay_way = 1 and o.activity_type = 1 and r.refund_money_time >=
		#{startTime,jdbcType=TIMESTAMP} then r.total_preferential_price else 0
		end) deliveryRefundPlatformCouponAmount
		from trade_order_refunds r
		inner join trade_order o on r.order_id = o.id
		where r.refunds_status in(6,13)
		and r.refund_money_time >= #{startTime,jdbcType=TIMESTAMP}
		and r.store_id = #{storeId,jdbcType=VARCHAR}
		AND o.disabled = 0
	</select>

	<!-- zengj:统计优惠金额 -POS销售统计 -->
	<select id="selectPreferentialAmount" resultType="java.util.Map"
		parameterType="java.util.Map">
		select sum(case when pay_way = 0 and activity_type in(2,3) and total_amount
		!= income then preferential_price else 0 end) onlineStoreDiscount,
		sum(case when pay_way = 0 and activity_type = 2 and total_amount =
		income then preferential_price else 0 end) onlinePlatformDiscount,
		sum(case when pay_way = 1 and activity_type in(2,3) and total_amount
		!= income then preferential_price else 0 end) deliveryStoreDiscount,
		sum(case when pay_way = 1 and activity_type = 2 and total_amount =
		income then preferential_price else 0 end) deliveryPlatformDiscount
		from trade_order
		where `status` in(3,5)
		and delivery_time >= #{startTime,jdbcType=TIMESTAMP}
		and pay_way in(0,1)
		and store_id = #{storeId,jdbcType=VARCHAR}
		AND disabled = 0
	</select>

	<!-- zengj:统计代金券金额 -POS销售统计 -->
	<select id="selectCouponAmount" resultType="java.util.Map"
		parameterType="java.util.Map">
		select sum(case when pay_way = 0 then preferential_price else 0 end)
		onlineCouponAmount,
		sum(case when pay_way = 1 then preferential_price else 0 end)
		deliveryCouponAmount
		from trade_order
		where `status` in(3,5)
		and delivery_time >= #{startTime,jdbcType=TIMESTAMP}
		and activity_type = 1
		and pay_way in(0,1)
		and store_id = #{storeId,jdbcType=VARCHAR}
		AND disabled = 0
	</select>

	<!-- zengj:统计配送费金额 -POS销售统计 -->
	<select id="selectFareAmount" resultType="java.util.Map"
		parameterType="java.util.Map">
		select sum(case when pay_way = 0 then fare else 0 end) onlineFare,
		sum(case when pay_way = 1 then fare else 0 end) deliveryFare
		from trade_order
		where `status` in(3,5)
		and delivery_time >= #{startTime,jdbcType=TIMESTAMP}
		and pay_way in(0,1)
		and store_id = #{storeId,jdbcType=VARCHAR}
		AND disabled = 0
	</select>

	<!-- tzd:统计订单各支付方式金额 -->
	<select id="selectOrderIncomeByPayType" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT
		SUM(IF(p.pay_type=0 AND o.pay_way =0,o.`actual_amount`,0)) yunPayAmount,
		SUM(IF(p.pay_type=1 AND o.pay_way =0,o.`actual_amount`,0))
		aliPayAmount,
		SUM(IF(p.pay_type=2 AND o.pay_way =0,o.`actual_amount`,0)) weiPayAmount,
		SUM(IF(p.pay_type=1 AND o.order_resource =2,o.`actual_amount`,0))
		aliPosAmount,
		SUM(IF(p.pay_type=2 AND o.order_resource =2,o.`actual_amount`,0)) weiPosAmount,
		SUM(IF(p.pay_type=7 AND o.order_resource =2,o.`actual_amount`,0))
		unionPosAmount
		FROM trade_order o INNER JOIN `trade_order_pay` p ON o.`id` = p.`order_id`
		WHERE o.`status` IN (3,5) AND (o.pay_way =0 OR o.order_resource=2)
		AND o.`delivery_time` >=#{startTime,jdbcType=TIMESTAMP}
		AND o.`store_id`=#{storeId,jdbcType=VARCHAR}
		AND o.disabled = 0
	</select>

	<!-- tzd:统计退款各支付方式金额 -->
	<select id="selectRefundIncomeByPayType" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT
		SUM(IF(payment_method=0 AND o.pay_way =0,r.`total_amount`,0)) yunRefundAmount,
		SUM(IF(payment_method=1 AND o.pay_way =0,r.`total_amount`,0))
		aliRefundAmount,
		SUM(IF(payment_method=2 AND o.pay_way =0,r.`total_amount`,0)) weiRefundAmount,
		SUM(IF(payment_method=1 AND o.order_resource =2,o.`actual_amount`,0))
		aliPosRefundAmount,
		SUM(IF(payment_method=2 AND o.order_resource =2,o.`actual_amount`,0)) weiPosRefundAmount,
		SUM(IF(payment_method=7 AND o.order_resource =2,o.`actual_amount`,0))
		unionPosRefundAmount
		FROM trade_order_refunds r INNER JOIN trade_order o ON r.`order_id` =
		o.`id`
		WHERE r.`refunds_status` IN (6,13)
		AND o.`delivery_time` >= #{startTime,jdbcType=TIMESTAMP}
		AND o.`store_id`=#{storeId,jdbcType=VARCHAR}
		AND o.disabled = 0
	</select>

	<!-- tzd:统计线上线下订单数量 -->
	<select id="selectOrderCount" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT
		COUNT(IF(o.`pay_way` = 0 and o.`delivery_time` >=#{startTime,jdbcType=TIMESTAMP}, 1,
		NULL)) onlineOrderCount,
		COUNT(IF(o.`pay_way` = 1 and o.`payment_time` >=#{startTime,jdbcType=TIMESTAMP}, 1, NULL))
		deliveryOrderCount,
		COUNT(IF(o.order_resource = 2 and o.`delivery_time` >=#{startTime,jdbcType=TIMESTAMP}, 1,
		NULL)) posOrderCount
		FROM
		trade_order o
		WHERE o.`status` IN (3,5) and
		(
		o.pay_way = 0 OR o.pay_way = 1
		OR o.order_resource = 2
		)
		AND (o.`delivery_time` >=#{startTime,jdbcType=TIMESTAMP} or
		o.`payment_time` >=#{startTime,jdbcType=TIMESTAMP})
		AND o.`store_id`=#{storeId,jdbcType=VARCHAR}
		AND o.disabled = 0
	</select>
	<!-- zengj:查询导出POS销售单列表 -->
	<select id="selectPosOrderExportList" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT
		toi.id AS id,
		o.order_no AS orderNo,
		c.`name` AS threeCategory,
		toi.sku_name AS skuName,
		toi.bar_code AS barCode,
		toi.style_code AS styleCode,
		toi.unit_price AS unitPrice,
		IFNULL(toi.quantity,toi.weight) AS quantity,
		toi.unit_price * IFNULL(toi.quantity, toi.weight) as orderItemTotalAmount,
		o.create_time AS createTime,
		CAST(o.`status` AS SIGNED) AS `status`,
		CAST(tor.refunds_status AS SIGNED) AS refundsStatus,
		IFNULL(tori.quantity,tori.weight) AS refundsQuantity,
		tori.unit_price * IFNULL(tori.quantity,tori.weight) as refundsAmount,
		u.login_name AS operator
		FROM
		trade_order_item toi
		LEFT JOIN trade_order o ON o.id = toi.order_id
		LEFT JOIN
		goods_store_sku sku ON toi.store_sku_id = sku.id
		LEFT JOIN
		goods_store_spu spu ON sku.store_spu_id = spu.id
		LEFT JOIN
		goods_spu_category c ON c.id = spu.spu_category_id
		LEFT JOIN
		trade_order_refunds_item tori ON toi.id = tori.order_item_id
		LEFT JOIN
		trade_order_refunds tor ON tori.refunds_id = tor.id
		LEFT JOIN sys_user
		u ON o.seller_id = u.id
		WHERE o.store_id = #{storeId,jdbcType=VARCHAR}
		AND o.disabled = 0
		and o.order_resource = 2
		<if test="orderNo != null and orderNo != ''">
			AND o.order_no LIKE CONCAT('%', #{orderNo,jdbcType=VARCHAR}, '%')
		</if>
		<!-- 这里要用子查询，和页面查询保持一致 -->
		<if test="skuName != null and skuName != ''">
			AND EXISTS(SELECT 1 FROM trade_order_item it WHERE it.order_id = o.id
			AND it.sku_name LIKE CONCAT('%', #{skuName,jdbcType=VARCHAR}, '%'))
		</if>
		<if test="startCreateTime != null">
			AND o.create_time >= #{startCreateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endCreateTime != null">
			AND o.create_time &lt;= #{endCreateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="orderIds != null">
			AND o.id in
			<foreach collection="orderIds" index="index" item="item"
				open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		ORDER BY o.create_time desc
		<if test="maxSize != null and maxSize > 0">
			LIMIT #{maxSize,jdbcType=INTEGER}
		</if>
	</select>


	<!-- wusw:实物订单列表查询结果集 （商家中心） -->
	<resultMap id="RealOrderMap" type="com.okdeer.mall.order.entity.TradeOrder"
		extends="BaseResultMap">
		<id property="id" column="id" jdbcType="VARCHAR" />
		<!-- 操作人用户信息 -->
		<association property="sysUser"
			javaType="com.okdeer.archive.system.entity.SysUser">
			<result column="user_name" property="userName" jdbcType="VARCHAR" />
			<result column="login_name" property="loginName" jdbcType="VARCHAR" />
		</association>
		<!-- 支付信息 -->
		<association property="tradeOrderPay"
			javaType="com.okdeer.mall.order.entity.TradeOrderPay">
			<result column="pay_type" property="payType" jdbcType="TINYINT" />
			<result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
			<result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
			<result column="pay_create_time" property="createTime"
				jdbcType="TIMESTAMP" />
		</association>
		<!-- 发票信息 -->
		<association property="tradeOrderInvoice"
			javaType="com.okdeer.mall.order.entity.TradeOrderInvoice">
			<result column="head" property="head" jdbcType="VARCHAR" />
			<result column="context" property="context" jdbcType="VARCHAR" />
		</association>
		<!-- 订单项信息 -->
		<collection property="tradeOrderItem"
			ofType="com.okdeer.mall.order.entity.TradeOrderItem" select="selectRealOrderItemList"
			column="{orderId = id}">
			<id column="item_id" property="id" jdbcType="VARCHAR" />
			<result column="order_id" property="orderId" jdbcType="VARCHAR" />
			<result column="store_spu_id" property="storeSpuId" jdbcType="VARCHAR" />
			<result column="store_sku_id" property="storeSkuId" jdbcType="VARCHAR" />
			<result column="sku_name" property="skuName" jdbcType="VARCHAR" />
			<result column="properties_indb" property="propertiesIndb"
				jdbcType="VARCHAR" />
			<result column="bar_code" property="barCode" jdbcType="VARCHAR" />
			<result column="style_code" property="styleCode" jdbcType="VARCHAR" />
			<result column="main_pic_prl" property="mainPicPrl" jdbcType="VARCHAR" />
			<result column="spu_type" property="spuType" jdbcType="TINYINT"
				javaType="com.okdeer.archive.goods.base.enums.GoodsTypeEnum" />
			<result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
			<result column="quantity" property="quantity" jdbcType="INTEGER" />
			<result column="service_assurance" property="serviceAssurance"
				jdbcType="INTEGER" />
			<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
			<result column="actual_amount" property="actualAmount"
				jdbcType="DECIMAL" />
			<result column="preferential_price" property="preferentialPrice"
				jdbcType="DECIMAL" />
			<result column="status" property="status" jdbcType="TINYINT"
				javaType="com.okdeer.mall.order.enums.OrderItemStatusEnum" />
			<result column="appraise" property="appraise" jdbcType="TINYINT"
				javaType="com.okdeer.mall.order.enums.AppraiseEnum" />
			<result column="compain_status" property="compainStatus"
				jdbcType="TINYINT" javaType="com.okdeer.mall.order.enums.CompainStatusEnum" />
			<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
			<result column="bar_code" property="barCode" jdbcType="VARCHAR" />
			<result column="sty_code" property="styleCode" jdbcType="VARCHAR" />
			<result column="trade_num" property="trade_num" jdbcType="VARCHAR" />
			<result column="weight" property="weight" jdbcType="DECIMAL" />
			<result column="income" property="income" jdbcType="DECIMAL" />
			<!-- 订单项详情信息，服务订单特有属性 -->
			<collection property="tradeOrderItemDetails"
				ofType="com.okdeer.mall.order.entity.TradeOrderItemDetail">
				<result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
				<result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
				<result column="consume_code" property="consumeCode"
					jdbcType="VARCHAR" />
				<result column="consume_status" property="status" jdbcType="TINYINT"
					javaType="com.okdeer.mall.order.enums.ConsumeStatusEnum" />
			</collection>
		</collection>
	</resultMap>

	<!-- wusw:实物订单列表查询 （商家中心） -->
	<select id="selectRealOrderList" resultMap="RealOrderMap"
		parameterType="java.util.Map">
		SELECT
		<include refid="order_pay_column_list" />
		FROM trade_order tr
		LEFT JOIN trade_order_pay op ON tr.id = op.order_id
		LEFT JOIN sys_user su ON su.id=tr.seller_id
		WHERE 1=1
		<include refid="order_paytype_condition" />
		<!-- 引用排序sql -->
		<include refid="order_paytype_orderby" />

		<!-- add by zengj 导出专用 -->
		<if test="maxSize != null and maxSize > 0">
			limit #{maxSize,jdbcType=INTEGER}
		</if>
	</select>
	<!-- wusw:实物订单列表订单项查询 （商家中心） -->
	<select id="selectRealOrderItemList" parameterType="java.util.Map"
		resultMap="TradeOrderItemMap">
		SELECT
		it.id,it.sku_name,it.main_pic_prl,it.unit_price,it.quantity,it.actual_amount,it.status,it.bar_code,it.style_code,it.order_id,it.properties_indb,it.spu_type,it.store_sku_id,
		tor.refunds_status,tor.id as
		refunds_id,tor.refund_no,tori.weight,it.total_amount,category.name AS
		categoryName,
		td.id as detail_id,td.status as
		detail_status,td.start_time,td.end_time,td.consume_code
		FROM trade_order AS tr
		LEFT JOIN trade_order_item it ON tr.id=it.order_id
		LEFT JOIN goods_store_sku sku ON it.store_sku_id = sku.id
		LEFT JOIN goods_store_spu spu ON sku.store_spu_id = spu.id
		LEFT JOIN goods_spu_category category ON spu.spu_category_id = category.id
		LEFT JOIN trade_order_pay op ON op.order_id=tr.id
		LEFT JOIN trade_order_refunds_item tori ON tori.order_item_id = it.id
		LEFT JOIN trade_order_refunds tor ON tori.refunds_id=tor.id
		LEFT JOIN trade_order_item_detail td ON td.order_item_id = it.id
		WHERE 1=1
		<include refid="order_condition" />
		ORDER BY it.id ASC
	</select>

	<!--服务店订单结果集 add by wusw 重构4.1（代码评审优化） update by wusw 20160818 -->
	<resultMap id="ServiceStoreOrderMap" type="com.okdeer.mall.order.entity.TradeOrder"
		extends="BaseResultMap">
		<!-- 操作人用户信息 -->
		<association property="sysUser"
			javaType="com.okdeer.archive.system.entity.SysUser">
			<result column="user_name" property="userName" jdbcType="VARCHAR" />
			<result column="login_name" property="loginName" jdbcType="VARCHAR" />
		</association>
		<!-- 支付信息 -->
		<association property="tradeOrderPay"
			javaType="com.okdeer.mall.order.entity.TradeOrderPay">
			<result column="pay_type" property="payType" jdbcType="TINYINT" />
			<result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
			<result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
			<result column="pay_create_time" property="createTime"
				jdbcType="TIMESTAMP" />
		</association>
		<!-- 发票信息 -->
		<association property="tradeOrderInvoice"
			javaType="com.okdeer.mall.order.entity.TradeOrderInvoice">
			<result column="head" property="head" jdbcType="VARCHAR" />
			<result column="context" property="context" jdbcType="VARCHAR" />
		</association>
		<!-- 订单项信息 -->
		<collection property="tradeOrderItem"
			ofType="com.okdeer.mall.order.entity.TradeOrderItem">
			<result column="store_sku_id" property="storeSkuId" jdbcType="VARCHAR" />
			<result column="main_pic_prl" property="mainPicPrl" jdbcType="VARCHAR" />
			<result column="sku_name" property="skuName" jdbcType="VARCHAR" />
			<result column="properties_indb" property="propertiesIndb"
				jdbcType="VARCHAR" />
			<result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
			<result column="quantity" property="quantity" jdbcType="INTEGER" />
			<result column="actual_amount" property="actualAmount"
				jdbcType="DECIMAL" />
		</collection>
	</resultMap>

	<!-- 服务店订单列表查询 add by wusw 重构4.1（代码评审优化） update by wusw 20160818 -->
	<select id="selectServiceStoreOrderList" resultMap="ServiceStoreOrderMap"
		parameterType="java.util.Map">
		SELECT
		tr.id,
		tr.order_no,
		tr.pay_way,
		tr.create_time,
		tr.user_phone,
		tr.status,
		tr.actual_amount,
		tr.fare,
		tr.type,
		tr.delivery_time,
		tr.update_time,
		item.store_sku_id,
		item.main_pic_prl,
		item.sku_name,
		item.properties_indb,
		item.unit_price,
		item.quantity,
		item.actual_amount,
		op.pay_type,
		op.pay_time,
		su.login_name,
		su.user_name
		FROM trade_order tr
		LEFT JOIN trade_order_item item ON item.order_id = tr.id
		LEFT JOIN trade_order_pay op ON tr.id = op.order_id
		LEFT JOIN sys_user su ON su.id=tr.seller_id
		WHERE 1=1
		<if test="null!=skuName and '' !=skuName">
			AND EXISTS(SELECT 1 FROM trade_order_item i WHERE tr.id = i.order_id AND
			i.sku_name like CONCAT('%',#{skuName,jdbcType=VARCHAR},'%'))
		</if>
		<if test="null != payType">
			<!-- 如果支付方式是线下支付的订单 -->
			<if test="payType == 3">
				AND tr.pay_way = #{payWay}
			</if>
			<!-- 否则根据支付类型查询支付表的支付类型 -->
			<if test="payType != 3">
				AND op.pay_type = #{payType}
			</if>
		</if>
		<if test="null != storeId and '' != storeId">
			AND tr.store_id = #{storeId}
		</if>
		<if test="null != orderNo and '' != orderNo">
			AND tr.order_no like CONCAT('%',#{orderNo},'%')
		</if>
		<if test="null != userPhone and '' != userPhone">
			AND tr.user_phone like CONCAT('%',#{userPhone},'%')
		</if>
		<if test="null != status">
			AND tr.status in
			<foreach collection="status" index="index" item="item" open="("
				close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<!-- 订单来源，多个时使用IN -->
		<if test="null!=orderResources">
			AND tr.order_resource IN
			<foreach collection="orderResources" index="index" item="item"
				open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="null != type">
			AND tr.type = #{type}
		</if>
		<if test="null != startCreateTime">
	    <![CDATA[ AND tr.create_time >= #{startCreateTime} ]]>
		</if>
		<if test="null != endCreateTime">
	    <![CDATA[ AND tr.create_time <= #{endCreateTime} ]]>
		</if>
		<if test="null != orderIds">
			AND tr.id IN
			<foreach collection="orderIds" index="index" item="item"
				open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<!-- 引用排序sql -->
		<include refid="order_paytype_orderby" />
	</select>

	<!-- 服务店订单详情 add by wusw -->
	<select id="selectServiceStoreOrderDetail" parameterType="java.lang.String"
		resultMap="TradeOrderVo">
		SELECT
		tr.id,
		tr.order_no,
		tr.actual_amount,
		tr.total_amount,
		tr.preferential_price,
		tr.fare,
		tr.type,
		tr. STATUS,
		tr.store_id,
		tr.pay_way,
		tr.activity_type,
		tr.activity_id,
		tr.pick_up_type,
		tr.pick_up_time,
		tr.remark,
		tr.delivery_time,
		tr.received_time,
		tr.update_time,
		tr.income,
		tr.invoice,
		tr.create_time,
		tr.is_complete,
		tp.pay_type,
		tp.pay_time,
		ti.head,
		it.store_sku_id,
		it.sku_name,
		it.main_pic_prl,
		it.unit_price,
		it.quantity,
		tr.reason,
		it.properties_indb,
		ol.consignee_name,
		ol.mobile,
		ol.area,
		ol.address
		FROM trade_order AS tr
		LEFT JOIN trade_order_item AS it ON it.order_id
		= tr.id
		LEFT JOIN trade_order_pay AS tp ON tr.id = tp.order_id
		LEFT JOIN
		trade_order_invoice AS ti ON tr.id = ti.order_id
		LEFT JOIN trade_order_logistics AS ol ON ol.order_id = tr.id
		WHERE tr.id = #{orderId, jdbcType=VARCHAR}
	</select>

	<!-- 服务店订单列表查询（商城后台） add by wusw 20160717 -->
	<select id="selectServiceStoreListForOperate" resultMap="PhysicsOrderVoMap"
		parameterType="map">
		SELECT tr.id,
		tr.order_no,
		tr.store_name,
		tr.pay_way,
		tr.actual_amount,
		tr.user_phone,
		tr.create_time,
		tr.status,
		tr.pick_up_time,
		op.pay_type,
		op.pay_time
		FROM trade_order tr
		LEFT JOIN trade_order_pay op ON tr.id = op.order_id
		WHERE 1=1
		<!-- 订单类型 -->
		<if test="null != type">
			AND tr.type = #{type,jdbcType=TINYINT}
		</if>
		<if test="null != payType">
			<!-- 如果支付方式是线下支付的订单 -->
			<if test="payType == 3">
				AND tr.pay_way = #{payWay}
			</if>
			<!-- 否则根据支付类型查询支付表的支付类型 -->
			<if test="payType != 3">
				AND op.pay_type = #{payType}
			</if>
		</if>
		<if test="null != orderNo and '' != orderNo">
			AND tr.order_no like CONCAT('%',#{orderNo},'%')
		</if>
		<if test="null != userPhone and '' != userPhone">
			AND tr.user_phone like CONCAT('%',#{userPhone},'%')
		</if>
		<if test="null != status">
			AND tr.status in
			<foreach collection="status" index="index" item="item" open="("
				close=")" separator=",">
				#{item,jdbcType=TINYINT}
			</foreach>
		</if>
		<if test="null != startTime">
		    <![CDATA[ AND tr.create_time >= #{startTime} ]]>
		</if>
		<if test="null != endTime">
		    <![CDATA[ AND tr.create_time <= #{endTime} ]]>
		</if>
		<if test="null != pickupStartTime">
			AND tr.pick_up_time &gt; #{pickupStartTime}
		</if>
		<if test="null != pickupEndTime">
			AND tr.pick_up_time &lt; #{pickupEndTime}
		</if>
		<if test="storeName != null and storeName != ''">
			AND tr.store_name like CONCAT('%',#{storeName},'%')
		</if>
		<if test="ids != null">
			AND tr.id in
			<foreach collection="ids" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY tr.create_time DESC
	</select>

	<!-- 服务店订单详情（商城后台） add by wusw 20160729 -->
	<select id="selectServiceStoreDetailForOperate" parameterType="java.lang.String"
		resultMap="TradeOrderVo">
		SELECT
		tr.id,
		tr.order_no,
		tr.actual_amount,
		tr.total_amount,
		tr.preferential_price,
		tr.fare,
		tr.type,
		tr. STATUS,
		tr.store_id,
		tr.`pay_way`,
		tr.activity_type,
		tr.activity_id,
		tr.pick_up_type,
		tr.pick_up_time,
		tr.remark,
		tr.received_time,
		tr.delivery_time,
		tr.update_time,
		tr.income,
		tr.invoice,
		tr.reason,
		tr.create_time,
		op.pay_type,
		op.pay_time,
		op.pay_amount,
		ti.head,
		ol.consignee_name,
		ol.mobile,
		ol.area,
		ol.address
		FROM trade_order AS tr
		LEFT JOIN trade_order_pay AS op ON tr.id =
		op.order_id
		LEFT JOIN trade_order_invoice AS ti ON tr.id = ti.order_id
		LEFT JOIN trade_order_logistics AS ol ON ol.order_id = tr.id
		WHERE tr.id = #{orderId, jdbcType=VARCHAR}
	</select>

	<!-- add by zhulq 充值订单列表数据 start -->
	<select id="selectRechargeOrder" resultMap="RechargeOrderVoMap"
		parameterType="com.okdeer.mall.order.entity.TradeOrderRechargeVo">
		SELECT tr.id,
		tr.status,
		tr.actual_amount,
		tr.order_no,
		tr.type,
		tr.create_time,
		op.pay_type,
		op.pay_time,
		tr.user_id,
		tri.sku_name,
		tri.recharge_mobile
		FROM trade_order tr
		LEFT JOIN trade_order_pay op ON tr.id = op.order_id
		LEFT JOIN trade_order_item tri ON tr.id = tri.order_id
		<!-- LEFT JOIN trade_order_refunds trf ON tr.id = trf.order_id -->
		WHERE (tr.status = 1 OR tr.status = 5 OR tr.status = 6 OR tr.status =
		0 OR tr.status = 11)
		<!-- 充值类型选择 流量或者话费 -->
		<if test="ids != null">
			AND tr.id in
			<foreach collection="ids" index="index" item="item" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="ids == null">
			<if test="null == orderType">
				AND (tr.type = 3 or tr.type = 4)
			</if>
			<if test="null != orderType">
				AND tr.type = #{orderType,jdbcType=TINYINT}
			</if>
			<!-- 付款类型选择 -->
			<if test="null != payType">
				AND op.pay_type = #{payType,jdbcType=TINYINT}
			</if>
			<!-- 订单状态 -->
			<if test="null != status">
				AND tr.status = #{status,jdbcType=TINYINT}
			</if>
			<if test="null != rechargePhone and rechargePhone != ''">
				AND tri.recharge_mobile = #{rechargePhone,jdbcType=VARCHAR}
			</if>
			<if test="orderNo != null and orderNo != ''">
				AND tr.order_no = #{orderNo,jdbcType=VARCHAR}
			</if>
			<if test="null != startTime">
				AND tr.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
			</if>
			<if test="null != endTime">
				AND tr.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
			</if>
			<if test="userId != null and userId != ''">
				AND tr.user_id = #{userId,jdbcType=VARCHAR}
			</if>
		</if>
		ORDER BY tr.create_time DESC
	</select>
	<!-- add by zhulq 充值订单列表数据 end -->
	<!-- 充值订单列表查询（商城后台导出） add by zhulq 20160718 -->
	<select id="selectRechargeOrderExport" resultMap="RechargeOrderVoMap"
		parameterType="map">
		SELECT tr.id,
		tr.status,
		tr.actual_amount,
		tr.order_no,
		tr.type,
		tr.create_time,
		op.pay_type,
		tri.sku_name,
		tri.recharge_mobile
		FROM trade_order tr
		LEFT JOIN trade_order_pay op ON tr.id = op.order_id
		LEFT JOIN trade_order_item tri ON tr.id = tri.order_id
		<!-- LEFT JOIN trade_order_refunds trf ON tr.id = trf.order_id -->
		WHERE 1=1
		<!-- 充值类型选择 流量或者话费 -->
		<if test="null == orderType">
			AND (tr.type = 3 or tr.type = 4)
		</if>
		<if test="null != orderType">
			AND tr.type = #{orderType,jdbcType=TINYINT}
		</if>
		<!-- 付款类型选择 -->
		<if test="null != payType">
			AND op.pay_type = #{payType,jdbcType=TINYINT}
		</if>
		<!-- 订单状态 -->
		<if test="null != status">
			AND tr.status = #{status,jdbcType=TINYINT}
		</if>
		<if test="null != rechargePhone and rechargePhone != ''">
			AND tri.recharge_mobile = #{rechargePhone,jdbcType=VARCHAR}
		</if>
		<if test="orderNo != null and orderNo != ''">
			AND tr.order_no = #{orderNo,jdbcType=VARCHAR}
		</if>
		<if test="null != startTime">
			AND tr.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="null != endTime">
			AND tr.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>

		ORDER BY tr.create_time DESC
	</select>

	<!-- 充值订单详细信息（商城后台导出） add by zhulq 20160718 -->
	<select id="selectRechargeOrderDetail" resultMap="RechargeOrderVoMap"
		parameterType="com.okdeer.mall.order.entity.TradeOrderRechargeVo">
		SELECT tr.id,
		tr.status,
		tr.actual_amount,
		tr.order_no,
		tr.type,
		tr.create_time,
		op.pay_type,
		tri.sku_name,
		tri.unit_price,
		tri.quantity,
		tri.recharge_mobile
		FROM trade_order tr
		LEFT JOIN trade_order_pay op ON tr.id = op.order_id
		LEFT JOIN trade_order_item tri ON tr.id = tri.order_id
		WHERE 1 = 1
		<if test="userId != null and userId != ''">
			AND tr.user_id = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="id != null and id != ''">
			AND tr.id = #{id,jdbcType=VARCHAR}
		</if>
	</select>

	<!-- 根据查询条件，查询订单列表（用于财务系统，包含服务店订单） add by wusw update by wusw 20160809 修改店铺名称取值（由于充值订单） 
		update by wusw 20160810 -->
	<select id="findOrderForFinanceByParams" resultMap="ERPOrderResultMap"
		parameterType="java.util.Map">
		SELECT trade.id,
		trade.order_no,
		trade.type,
		trade.pay_way,
		CASE trade.type
		WHEN 3 THEN
		trade.store_name
		WHEN 4 THEN
		trade.store_name
		WHEN 0 THEN
		store.store_name
		WHEN 2 THEN
		store.store_name
		END AS store_name,
		trade.user_phone,
		trade.total_amount,
		trade.actual_amount,
		trade.preferential_price,
		trade.create_time,
		trade.order_resource,
		trade.status,
		pay.pay_type
		FROM trade_order trade
		LEFT JOIN trade_order_pay pay ON pay.order_id = trade.id
		LEFT JOIN store_info store ON store.id = trade.store_id
		WHERE 1=1
		<if test="unDisabled != null">
			AND (trade.disabled = #{unDisabled, jdbcType=TINYINT}
			<if test="completeStatus != null">
				OR (trade.disabled = #{disabled, jdbcType=TINYINT} AND trade.status =
				#{completeStatus, jdbcType=TINYINT})
			</if>
			)
		</if>
		<if test="orderNo != null and orderNo != ''">
			AND trade.order_no = #{orderNo, jdbcType=VARCHAR}
		</if>
		<if test="storeName != null and storeName != ''">
			AND ((trade.store_name LIKE CONCAT('%', #{storeName,jdbcType=VARCHAR},
			'%') AND (trade.type = 3 OR trade.type = 4))
			OR
			(store.store_name LIKE CONCAT('%', #{storeName,jdbcType=VARCHAR}, '%') AND trade.type
			!= 3 AND trade.type != 4))

		</if>
		<if test="userPhone != null and userPhone != ''">
			AND trade.user_phone LIKE CONCAT('%', #{userPhone,jdbcType=VARCHAR},
			'%')
		</if>
		<if test="type != null">
			AND trade.type IN
			<foreach collection="type" index="index" item="item" open="("
				close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="status != null">
			AND trade.status IN
			<foreach collection="status" index="index" item="item" open="("
				close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="orderResource != null">
			AND trade.order_resource IN
			<foreach collection="orderResource" index="index" item="item"
				open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="payType != null">
			<if test="payType != 4">
				AND pay.pay_type = #{payType, jdbcType=TINYINT}
			</if>
			<if test="payType == 4">
				AND (trade.pay_way = #{payWayServer,jdbcType=TINYINT} OR trade.pay_way
				= #{payWayPhysical,jdbcType=TINYINT} OR pay.pay_type = #{payType,
				jdbcType=TINYINT})
			</if>
		</if>
		<if test="startTime != null">
			AND trade.create_time <![CDATA[ >= ]]>
			#{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			AND trade.create_time <![CDATA[ <= ]]>
			#{endTime,jdbcType=TIMESTAMP}
		</if>
		order by trade.create_time desc
	</select>

	<select id="findRechargeOrdersByStatus" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from trade_order
		where status=#{status,jdbcType=TINYINT} and (type=3 or type=4)
	</select>

	<!-- POS查询确认收货订单列表 zengj 2016-9-13 15:45:30 -->
	<select id="findConfirmDeliveryOrderListByPos" parameterType="java.lang.String"
		resultType="map">
		SELECT o.id as orderId,
		o.order_no as orderNo,
		(select count(1) from trade_order_item i where o.id = i.order_Id) as
		itemCount,
		format(o.fare,2) as fare,
		format(o.income,2) as totalAmount,
		date_format(o.create_time,'%Y-%m-%d %H:%i:%s') as createTime
		FROM trade_order o
		WHERE o. status = 3
		AND o.store_id = #{storeId, jdbcType=VARCHAR}
		ORDER BY o.create_time ASC
	</select>

	<select id="statisOrderCannelRefundByParams" parameterType="map"
		resultType="map">
		SELECT IFNULL(sum(total_amount),0) as totalAmount,count(1) as count
		FROM trade_order trade
		LEFT JOIN trade_order_pay pay ON pay.order_id =
		trade.id
		LEFT JOIN store_info store ON store.id = trade.store_id
		LEFT
		JOIN psms_agent agent ON agent.id = store.agent_id
		WHERE 1=1
		<!-- trade.disabled = 0 -->
		<if test="params != null">
			<!-- 订单状态 -->
			<if test="params.status != null">
				AND trade.`status` IN
				<foreach collection="params.status" index="index" item="item"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<!-- 订单支付方式 -->
			<if test="params.payWay != null">
				AND trade.pay_way = #{params.payWay,jdbcType=TINYINT}
			</if>
			<!-- 订单支付类型 -->
			<if test="params.payType != null">
				AND pay.pay_type IN
				<foreach collection="params.payType" index="index" item="item"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<!-- 订单编号 -->
			<if test="params.orderNo != null and params.orderNo != ''">
				AND trade.order_no LIKE CONCAT('%',#{params.orderNo},'%')
			</if>
			<if test="params.shopName != null and params.shopName != ''">
				AND store.store_name LIKE
				CONCAT('%',#{params.shopName},'%')
			</if>
			<!-- 更新时间 -->
			<if test="params.startTime != null">
				AND trade.create_time <![CDATA[ >= ]]>
				#{params.startTime,jdbcType=TIMESTAMP}
			</if>
			<!-- 更新时间 -->
			<if test="params.endTime != null">
				AND trade.create_time <![CDATA[ <= ]]>
				#{params.endTime,jdbcType=TIMESTAMP}
			</if>
			<!-- 买家用户手机号码 -->
			<if test="params.buyer != null and params.buyer != ''">
				AND trade.user_phone LIKE CONCAT('%',#{params.buyer},'%')
			</if>
		</if>
	</select>


	<!-- 查询消费码订单列表 zengjz 2016-9-20 -->
	<select id="selectStoreConsumeOrderList" resultMap="BaseResultMap"
		parameterType="map">
		SELECT store.id as store_id,store.store_name,
		o.id,o.order_no,o.status,o.remark,o.total_amount,o.trade_num,o.user_id,o.actual_amount,o.preferential_price,o.fare,
		o.pick_up_type,o.pick_up_time,o.create_time,o.consumer_code_status
		FROM trade_order o
		LEFT JOIN store_info store ON o.store_id = store.id
		WHERE 1=1
		<if test="userId != null and userId !='' ">
			and  o.user_id = #{userId,jdbcType=VARCHAR} 
		</if>
		and o.type = 5
		<if test="orderStatus != null ">
			AND o.status in
			<foreach collection="orderStatus" open="(" close=")" index="index"
				item="item" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="consumerCodeStatus != null ">
			AND o.consumer_code_status = #{consumerCodeStatus}
		</if>
		and o.is_show = 1
		ORDER BY o.create_time desc
	</select>
	
	<!-- 批量根据订单id，修改订单消费码状态 V1.1.0 add by wusw 20160923 -->
	<update id="updateConsumerStatusByIds">
	  UPDATE trade_order
	  SET consumer_code_status = #{status,jdbcType=TINYINT},
	      update_time = #{updateTime,jdbcType=TIMESTAMP}
	  WHERE
		<if test="ids != null">
		   id in
		  <foreach collection="ids" index="index" item="item" open="(" close=")" separator=",">
			 #{item}
		  </foreach>
		</if>
		<if test="ids == null">
		  id = 'noExist'
		</if>
	</update>
	
	<!-- 用户订单详细查询  V1.1.0 add by zengjz 20160923 -->
	<select id="findStoreConsumeOrderById" resultMap="UserTradeOrderDetailMap"
		parameterType="java.lang.String">
		SELECT
		o.id,o.status,o.pick_up_type,o.pick_up_time,o.pick_up_code,o.received_time,o.delivery_time,o.compain_status,o.pay_way,o.is_complete,
		o.total_amount,o.actual_amount,o.preferential_price,o.fare,o.order_no,o.create_time,o.remark,o.activity_type,o.reason,o.trade_num,o.consumer_code_status,
		pay.pay_type,pay.pay_amount,pay.pay_time,
		TIMESTAMPDIFF(SECOND,DATE_FORMAT(NOW(),'%Y-%m-%d
		%H:%i:%s'),o.create_time) AS remaining_time,
		store.id as store_id,store.store_name as store_name,store.mobile as
		store_mobile,store.area as store_area,store.address as store_address,
		store.type as store_type,invoice.id as
		invoice_id,invoice.head,invoice.context
		FROM trade_order o
		LEFT JOIN trade_order_pay pay ON o.id = pay.order_id
		LEFT JOIN trade_order_invoice invoice ON o.id = invoice.order_id
		LEFT JOIN store_info store ON o.store_id = store.id
		WHERE o.id = #{orderId,jdbcType=VARCHAR} and o.is_show = 1
	</select>
</mapper>
