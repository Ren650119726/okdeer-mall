<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.okdeer.mall.operate.advert.mapper.ColumnAdvertMapper">
	<resultMap type="com.okdeer.mall.advert.entity.ColumnAdvert" id="columnAdvertRsMap">
		<id column="id" property="id" jdbcType="VARCHAR"/>
		<result column="position_id" property="positionId" jdbcType="VARCHAR"/>
		<result column="belong_type" property="belongType" jdbcType="VARCHAR"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="target_type" property="targetType" jdbcType="TINYINT" javaType="com.okdeer.mall.advert.enums.AdvertTargetTypeEnum"/>
		<result column="target" property="target" jdbcType="TINYINT" javaType="com.okdeer.mall.advert.enums.BusinessFastNavigateEnum"/>
		<result column="target_url" property="targetUrl" jdbcType="VARCHAR"/>
		<result column="pic_url" property="picUrl" jdbcType="VARCHAR"/>
		<result column="area_type" property="areaType" jdbcType="TINYINT" javaType="com.okdeer.mall.common.enums.AreaType"/>
		<result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
		<result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
		<result column="is_pay" property="isPay" jdbcType="TINYINT" javaType="com.okdeer.mall.advert.enums.AdvertIsPayEnum"/>
		<result column="trade_num" property="tradeNum" jdbcType="VARCHAR"/>
		<result column="status" property="status" jdbcType="TINYINT" javaType="com.okdeer.mall.advert.enums.AdvertStatusEnum"/>
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="create_user_id" property="createUserId" jdbcType="VARCHAR"/>
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
		<result column="update_user_id" property="updateUserId" jdbcType="VARCHAR"/>
		<result column="disabled" property="disabled" jdbcType="INTEGER" javaType="com.okdeer.base.common.enums.Disabled"/>
		<result column="pv" property="pv" jdbcType="INTEGER"/>
		<result column="on_shelf_time" property="onShelfTime" jdbcType="TIMESTAMP"/>
		<result column="off_shelf_time" property="offShelfTime" jdbcType="TIMESTAMP"/>
		<!-- begin add by zengjz 2016-11-07 增加字段-->
		<result column="business_id" property="businessId" jdbcType="VARCHAR"/>
		<result column="sort" property="sort" jdbcType="INTEGER"/>
		<!-- end add by zengjz 2016-11-07 增加字段-->
	</resultMap>

	<resultMap type="com.okdeer.mall.advert.entity.ColumnAdvertVo" id="columnAdvertVoRsMap" extends="columnAdvertRsMap">
		<result column="positionName" property="positionName" jdbcType="VARCHAR"/>
		<result column="agentName" property="agentName" jdbcType="VARCHAR"/>
		<result column="approval_time" property="approvalTime" jdbcType="TIMESTAMP"/>
		<result column="advertiser" property="advertiser" jdbcType="VARCHAR"/>
		<result column="cost" property="cost" jdbcType="DECIMAL"/>
		<result column="approval_status" property="approvalStatus" jdbcType="TINYINT" javaType="com.okdeer.mall.common.enums.AuditStatusEnum"/>
		<result column="log" property="log" jdbcType="VARCHAR"/>
	</resultMap>

	<resultMap type="com.okdeer.mall.advert.entity.AdvertDetailVo" id="advertDetailMap" extends="columnAdvertRsMap">
		<!-- 关联广告位属性 -->
		<association property="advertPosition" javaType="com.okdeer.mall.advert.entity.AdvertPosition">
			<id column="positionId" property="id" jdbcType="VARCHAR"/>
			<result column="positionName" property="name" jdbcType="VARCHAR"/>
			<result column="positionType" property="type" jdbcType="VARCHAR"/>
		</association>
		<!-- 关联广告商 -->
		<association property="advertInfo" javaType="com.okdeer.mall.advert.entity.ColumnAdvertInfo">
			<id column="advertInfoId" property="id" jdbcType="VARCHAR"/>
			<result column="advertiser" property="advertiser" jdbcType="VARCHAR"/>
			<result column="contact" property="contact" jdbcType="VARCHAR"/>
			<result column="phone" property="phone" jdbcType="VARCHAR"/>
			<result column="cost" property="cost" jdbcType="DECIMAL"/>
			<result column="protocol_url" property="protocolUrl" jdbcType="VARCHAR"/>
		</association>
		<!-- 关联广告审核 -->
		<association property="advertApproval" javaType="com.okdeer.mall.advert.entity.ColumnAdvertApproval">
			<id column="approvalId" property="id" jdbcType="VARCHAR"/>
			<result column="auditStatus" property="status" jdbcType="TINYINT" javaType="com.okdeer.mall.common.enums.AuditStatusEnum"/>
			<result column="log" property="log" jdbcType="VARCHAR"/>
		</association>
		<!-- 关联广告区域关系 -->
		<collection property="advertAreaList" ofType="com.okdeer.mall.advert.entity.ColumnAdvertArea">
			<id column="aaId" property="id" jdbcType="VARCHAR"/>
			<result column="area_id" property="areaId" jdbcType="VARCHAR"/>
			<result column="type" property="type" jdbcType="TINYINT"/>
		</collection>
		<!-- 关联广告小区关系 -->
		<collection property="advertCommunityList" ofType="com.okdeer.mall.advert.entity.ColumnAdvertCommunity">	
			<id column="acId" property="id" jdbcType="VARCHAR"/>
			<result column="communityName" property="communityName" jdbcType="VARCHAR"/>
			<result column="city_id" property="cityId" jdbcType="VARCHAR"/>
			<result column="community_id" property="communityId" jdbcType="VARCHAR"/>
		</collection>
	</resultMap>
	<!-- 活动商品信息  tuzhd-->
  <resultMap id="advertGoodsMap" type="com.okdeer.archive.goods.store.dto.GoodsStoreActivitySkuDto" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="alias" property="alias" jdbcType="VARCHAR" />
    <result column="tagType" property="tagType" jdbcType="INTEGER" />
    <result column="bar_code" property="barCode" jdbcType="VARCHAR" />
    <result column="onlinePrice" property="onlinePrice" jdbcType="DECIMAL" />
    <result column="marketPrice" property="marketPrice" jdbcType="DECIMAL" />
    <result column="sellableStock" property="sellableStock" jdbcType="INTEGER" />
    <result column="tradeMax" property="tradeMax" jdbcType="INTEGER" />
    <result column="limitNum" property="limitNum" jdbcType="INTEGER" />
    <result column="guaranteed" property="guaranteed" jdbcType="INTEGER" />
    <result column="obsolete" property="obsolete" jdbcType="INTEGER" />
    <result column="propertiesIndb" property="propertiesIndb" jdbcType="INTEGER" />
    <result column="activityType" property="activityType" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="store_id" property="shopId" jdbcType="VARCHAR" />
    <result column="store_name" property="shopName" jdbcType="VARCHAR" />
    <result column="saleName" property="saleName" jdbcType="VARCHAR" />
    <result column="h5_url" property="h5Url" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="isPrivliege" property="isPrivliege" jdbcType="INTEGER" />
    <result column="sale_price" property="salePrice" jdbcType="DECIMAL" />
    <result column="limitNum" property="limitNum" jdbcType="INTEGER" />
    <result column="lockedStock" property="lockedStock" jdbcType="INTEGER" />
    <result column="lowPriceUpper" property="lowPriceUpper" jdbcType="INTEGER" />
    <result column="online" property="online" jdbcType="INTEGER" />
  </resultMap>
		
	<sql id="base_column_list">
		id, position_id, belong_type, name, target_type, target, target_url, pic_url,
		area_type, start_time, end_time, is_pay, trade_num, status, create_time, create_user_id,
		update_time, update_user_id, disabled, pv, on_shelf_time, off_shelf_time,business_id,sort
	</sql>
	
	<sql id="base_column_list2">
		ca.id, ca.position_id, ca.belong_type, ca.name, ca.target_type, ca.target, ca.target_url, ca.pic_url,
		ca.area_type, ca.start_time, ca.end_time, ca.is_pay, ca.trade_num, ca.status, ca.create_time, ca.create_user_id,
		ca.update_time, ca.update_user_id, ca.disabled, ca.pv, ca.on_shelf_time, ca.off_shelf_time, ca.business_id, ca.sort
	</sql>
	
	<select id="findById" resultMap="columnAdvertRsMap">
		SELECT <include refid="base_column_list" />
		FROM column_advert
		WHERE id = #{id,jdbcType=VARCHAR}
	</select>
	<!-- tuzhiding 根据连接url查出对应广告活动 -->
	<select id="getAdvertForTargetURl" resultMap="columnAdvertRsMap">
		SELECT <include refid="base_column_list" />
		FROM column_advert
		WHERE 
		disabled =0 AND
		target_url  LIKE CONCAT('%',#{targetUrl},'%')
	</select>
	
<!-- update by  zhulq 将未开始的广告置成开始 必须要审核通过  -->
	<select id="getAdvertForJob" resultMap="columnAdvertRsMap">
		SELECT ca.id, ca.position_id, ca.belong_type, ca.name, ca.target_type, ca.target, ca.target_url, ca.pic_url,
		ca.area_type, ca.start_time, ca.end_time, ca.is_pay, ca.trade_num, ca.status, ca.create_time, ca.create_user_id,
		ca.update_time, ca.update_user_id, ca.disabled, ca.pv, ca.on_shelf_time, ca.off_shelf_time, caa.status as appStatus,
		ca.business_id,ca.sort
		FROM column_advert ca LEFT JOIN column_advert_approval caa ON caa.advert_id = ca.id
		WHERE caa.status = 1  
		<if test="status != null">
			AND ca.status = #{status}
		</if>
		<if test="currentTime != null and timeColumn != null and timeLogicSymbol != null">
			AND ${timeColumn} ${timeLogicSymbol} #{currentTime}
		</if>
	</select>
	
<!-- add by  zhulq 将进行中的广告置成结束  不用判断是否审核通过   -->
	<select id="getAdvertStartForJob" resultMap="columnAdvertRsMap">
		SELECT ca.id, ca.position_id, ca.belong_type, ca.name, ca.target_type, ca.target, ca.target_url, ca.pic_url,
		ca.area_type, ca.start_time, ca.end_time, ca.is_pay, ca.trade_num, ca.status, ca.create_time, ca.create_user_id,
		ca.update_time, ca.update_user_id, ca.disabled, ca.pv, ca.on_shelf_time, ca.off_shelf_time, caa.status as appStatus,
		ca.business_id,ca.sort
		FROM column_advert ca LEFT JOIN column_advert_approval caa ON caa.advert_id = ca.id
		WHERE 1 = 1  
		<if test="status != null">
			AND ca.status = #{status}
		</if>
		<if test="currentTime != null and timeColumn != null and timeLogicSymbol != null">
			AND ${timeColumn} ${timeLogicSymbol} #{currentTime}
		</if>
	</select>
	
	<select id="getAdvertNumInCommunitys" resultType="int">
	    SELECT  COUNT(DISTINCT ca.id) FROM column_advert ca
        LEFT JOIN column_advert_community cac ON cac.advert_id=ca.id 
        WHERE cac.community_id IN 
        <foreach collection="communitys" index="index" item="item" open="(" close=")" separator=",">
        	#{item.communityId}
        </foreach>
        AND ca.belong_type != 0 AND ca.position_id=#{positionId, jdbcType=VARCHAR}
		AND ca.disabled = 0  
	</select>
	
	<select id="findColumnAdvertPage" resultMap="columnAdvertVoRsMap" parameterType="com.okdeer.mall.advert.entity.ColumnAdvertQueryVo">     
        SELECT ca.id,ca.name,ca.create_time,ca.start_time, ca.end_time, ai.cost, ca.status, 
       		   ca.pv, pa.full_name as agentName,ap.name AS positionName,ai.advertiser, aap.approval_time,ca.sort 
		FROM column_advert_position ap, column_advert_approval aap, column_advert ca
		LEFT JOIN psms_agent pa ON ca.belong_type = pa.id
		LEFT JOIN column_advert_info ai ON ca.id = ai.advert_id
		WHERE ca.position_id = ap.id  AND ca.disabled = 0  
			AND ca.id = aap.advert_id AND aap.status=1
		<if test="agentId != null and agentId != ''">
			AND ca.belong_type = #{agentId}
		</if>
		<if test="advertName != null and advertName != ''">
			AND ca.name LIKE CONCAT('%',#{advertName},'%')
		</if>
		<if test="advertiser != null and advertiser != ''">
			AND ai.advertiser LIKE CONCAT('%',#{advertiser},'%')
		</if>
		<if test="auditStartTime != null ">
			AND aap.approval_time &gt;= #{auditStartTime}
		</if>
		<if test="auditEndTime != null ">
			AND aap.approval_time &lt;= #{auditEndTime}
		</if>
		<if test="advertStartTime != null ">
			AND ca.start_time &gt;= #{advertStartTime}
		</if>
		<if test="advertEndTime != null ">
			AND ca.end_time &lt;= #{advertEndTime}
		</if>
		<if test="agentName != null and agentName != ''">
			AND pa.full_name LIKE CONCAT('%',#{agentName},'%')
		</if>
		<if test="applyStartTime != null ">
			AND ca.create_time &gt;= #{applyStartTime}
		</if>
		<if test="applyEndTime != null ">
			AND ca.create_time &lt;= #{applyEndTime}
		</if>		
		ORDER BY aap.approval_time DESC			
	</select>
	
	<select id="findAuditingAdvertPage" resultMap="columnAdvertVoRsMap" parameterType="com.okdeer.mall.advert.entity.ColumnAdvertQueryVo">
			SELECT ca.id,ca.name,ca.create_time,ca.start_time, ca.end_time,ai.cost,ca.status, 
		     	   pa.id,ap.name AS positionName,ai.advertiser, aap.approval_time,
		     	   aap.status AS approval_status, ca.is_pay, pa.full_name as agentName,
		     	   aap.log, ca.trade_num
			FROM column_advert_position ap, column_advert_info ai,  
			column_advert_approval aap, column_advert ca
			LEFT JOIN psms_agent pa ON ca.belong_type = pa.id 
			WHERE ca.position_id = ap.id AND ca.id = ai.advert_id
			AND ca.disabled = 0 AND ca.belong_type != 0 
			AND ca.id = aap.advert_id 
			AND aap.status != 1 
			<if test="agentId != null and agentId != ''">
				AND ca.belong_type = #{agentId}
			</if>
			<if test="advertName != null and advertName != ''">
				AND ca.name LIKE CONCAT('%',#{advertName},'%')
			</if>
			<if test="advertiser != null and advertiser != ''">
				AND ai.advertiser LIKE CONCAT('%',#{advertiser},'%')
			</if>
			<if test="auditStartTime != null">
				AND aap.approval_time &gt;= #{auditStartTime}
				AND aap.status != 0
			</if>
			<if test="auditEndTime != null ">
				AND aap.approval_time &lt;= #{auditEndTime}
				AND aap.status != 0
			</if>
			<if test="advertStartTime != null ">
				AND ca.start_time &gt;= #{advertStartTime}
			</if>
			<if test="advertEndTime != null ">
				AND ca.end_time &lt;= #{advertEndTime}
			</if>
			<if test="applyStartTime != null ">
				AND ca.create_time &gt;= #{applyStartTime}
			</if>
			<if test="applyEndTime != null ">
				AND ca.create_time &lt;= #{applyEndTime}
			</if>
			<if test="agentName != null and agentName != ''">
				AND pa.full_name LIKE CONCAT('%',#{agentName},'%')
			</if>
			ORDER BY ca.create_time DESC
	</select>
	
	<select id="findExistAdvertTime" resultMap="columnAdvertRsMap">
		SELECT ca.start_time, ca.end_time FROM column_advert ca , column_advert_position ap 
       	WHERE ca.disabled = 0 AND ca.position_id = ap.id
       	AND ap.id = #{positionId, jdbcType=VARCHAR}
       	AND (ca.status = 0 OR ca.status = 1)
	</select>
	
	<!-- modfiy  by zhulq  去掉判断用户类型    添加时候只是判断运营商的总张数  审核时候判断代理商的 -->
	<select id="findAcrossTimeAdvertQty" resultType="int" parameterType = "com.okdeer.mall.advert.entity.ColumnAdvert">
		   SELECT COUNT(DISTINCT(ca.id)) FROM column_advert ca
		   LEFT JOIN column_advert_position ap ON ca.position_id = ap.id
		   LEFT JOIN column_advert_area caa ON caa.advert_id = ca.id
	       WHERE ca.belong_type = 0 AND ca.disabled = 0 AND (ca.status = 0 OR ca.status = 1)	      
	       AND ((ca.start_time &lt;= #{startTime} AND ca.end_time &gt;= #{startTime})  
		     OR (ca.start_time &lt;= #{endTime} AND ca.end_time &gt;= #{endTime}) 
		     OR (ca.start_time &gt;= #{startTime} AND ca.end_time &lt;= #{endTime})
		     OR (ca.start_time &lt;= #{startTime} AND ca.end_time &gt;= #{endTime}))
		  <if test="positionId != null and positionId !=''">
		   	 AND ap.id = #{positionId, jdbcType=VARCHAR}
		   </if>   
		   <if test="id != null and id != ''">
		   	   AND ca.id != #{id,jdbcType=VARCHAR}
		   </if>
<!-- 		   <if test="belongType != '0'">
		   	   AND ca.belong_type != '0'
		  </if>	
		  <if test="belongType = '0'">
		   	   AND ca.belong_type = '0'
		  </if>	 -->	   
		  <if test="areaType.name() == 'area' and areaIdList != null" >      
		 			   AND caa.area_id in  
		    	 			<foreach collection="areaIdList" open="(" close=")" index="index" item="item"  separator=",">
	        	  		 		 #{item}
	         		 		</foreach>
		  </if> 		    
		  <if test="areaType.name() == 'national'">      
     		 AND ca.area_type = 0
		 </if>
	</select>
	<!-- add  by zhulq  去掉判断用户类型    添加时候只是判断运营商的总张数  -->
	
	<!-- add  by zhulq  去掉判断用户类型    审核时候只是判断代理商的总张数  -->
	<select id="findAcrossTimeAdvert" resultType="int" parameterType = "com.okdeer.mall.advert.entity.ColumnAdvert">
		   SELECT COUNT(DISTINCT(ca.id)) FROM column_advert ca
		   LEFT JOIN column_advert_position ap ON ca.position_id = ap.id
		   LEFT JOIN column_advert_area caa ON caa.advert_id = ca.id
		   LEFT JOIN column_advert_approval app ON app.advert_id = ca.id
	       WHERE ca.belong_type != 0 AND app.status = 1
	       AND ca.disabled = 0 AND (ca.status = 0 OR ca.status = 1)	      
	       AND ((ca.start_time &lt;= #{startTime} AND ca.end_time &gt;= #{startTime})  
		     OR (ca.start_time &lt;= #{endTime} AND ca.end_time &gt;= #{endTime}) 
		     OR (ca.start_time &gt;= #{startTime} AND ca.end_time &lt;= #{endTime})
		     OR (ca.start_time &lt;= #{startTime} AND ca.end_time &gt;= #{endTime}))
		  <if test="positionId != null and positionId !=''">
		   	 AND ap.id = #{positionId, jdbcType=VARCHAR}
		   </if>   
		   <if test="id != null and id != ''">
		   	   AND ca.id != #{id,jdbcType=VARCHAR}
		   </if>
		   <if test="areaType.name() == 'area' and areaIdList != null" >      
		 			   AND caa.area_id in  
		    	 			<foreach collection="areaIdList" open="(" close=")" index="index" item="item"  separator=",">
	        	  		 		 #{item}
	         		 		</foreach>
		  </if> 		    
	</select> 
	<!-- add  by zhulq  去掉判断用户类型    添加时候只是判断运营商的总张数  -->
	
	<select id="getAdvertDetailById" resultMap="advertDetailMap">
	  SELECT ca.id,cp.id AS positionId, ca.name, cp.name AS positionName, ca.start_time,
	      cp.type as positionType, ca.end_time, ca.pic_url, ca.target_type, ca.target,
	      ca.target_url, ci.advertiser, ci.contact,ci.phone,ca.position_id,
	      ci.id AS advertInfoId,ci.cost, ci.protocol_url,ca.position_id,
	      caa.id as aaId, caa.area_id, caa.type, ca.area_type,ca.belong_type,
	      aap.id AS approvalId, aap.status AS auditStatus, aap.log, ca.status,ca.business_id,ca.sort
       FROM column_advert_position cp
       LEFT JOIN column_advert ca ON ca.position_id = cp.id
       LEFT JOIN column_advert_approval aap ON aap.advert_id = ca.id
       LEFT JOIN column_advert_info ci ON ca.id = ci.advert_id
       LEFT JOIN column_advert_area caa ON caa.advert_id = ca.id
       WHERE  1 = 1
       AND ca.id = #{id,jdbcType=VARCHAR}
	</select>
	
	<insert id="insert" parameterType="com.okdeer.mall.advert.entity.ColumnAdvert">
		INSERT INTO column_advert(id, position_id, belong_type, name, target_type, target_url, pic_url,
				area_type, start_time, end_time, is_pay, trade_num, status, create_time, create_user_id,
				update_time, update_user_id, disabled, pv, target, on_shelf_time, off_shelf_time,business_id,sort)
		VALUES (#{id, jdbcType=VARCHAR}, #{positionId, jdbcType=VARCHAR}, #{belongType, jdbcType=VARCHAR}, 
				#{name, jdbcType=VARCHAR}, #{targetType, jdbcType=TINYINT}, #{targetUrl, jdbcType=VARCHAR}, 
				#{picUrl, jdbcType=VARCHAR}, #{areaType, jdbcType=TINYINT}, #{startTime, jdbcType=TIMESTAMP}, 
				#{endTime, jdbcType=TIMESTAMP}, #{isPay, jdbcType=TINYINT}, #{tradeNum, jdbcType=VARCHAR}, #{status, jdbcType=TINYINT}, 
				#{createTime, jdbcType=TIMESTAMP}, #{createUserId, jdbcType=VARCHAR}, #{updateTime, jdbcType=TIMESTAMP}, 
				#{updateUserId, jdbcType=VARCHAR}, #{disabled, jdbcType=INTEGER}, #{pv, jdbcType=INTEGER}, 
				#{target, jdbcType=TINYINT}, #{onShelfTime, jdbcType=TIMESTAMP}, #{offShelfTime, jdbcType=TIMESTAMP},#{businessId, jdbcType=VARCHAR},#{sort, jdbcType=INTEGER})
	</insert>
	
	<insert id="add" parameterType="com.okdeer.mall.advert.entity.ColumnAdvert">
		INSERT INTO column_advert
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="positionId != null">
				position_id,
			</if>
			<if test="belongType != null">
				belong_type,
			</if>			
			<if test="name != null">
				name,
			</if>			
			<if test="targetType != null">
				target_type,
			</if>			
			<if test="targetUrl != null">
				target_url,
			</if>			
			<if test="picUrl != null">
				pic_url,
			</if>
			<if test="areaType != null">
				area_type,
			</if>			
			<if test="startTime != null">
				start_time,
			</if>						
			<if test="endTime != null">
				end_time,
			</if>
			<if test="isPay != null">
				is_pay,
			</if>
			<if test="tradeNum != null">
				trade_num,
			</if>			
			<if test="status != null">
				status,
			</if>			
			<if test="createTime != null">
				create_time,
			</if>			
			<if test="createUserId != null">
				create_user_id,
			</if>	
			<if test="updateTime != null">
				update_time,
			</if>			
			<if test="updateUserId != null">
				update_user_id,
			</if>			
			<if test="disabled != null">
				disabled,
			</if>	
			<if test="pv != null">
				pv,
			</if>
			<if test="target != null">
				target,
			</if>
			<if test="onShelfTime != null">
				on_shelf_time, 
			</if>
			<!-- begin add by zengjz 2016-11-07 增加字段-->
			<if test="businessId != null">
				business_id, 
			</if>
			<if test="sort != null">
				sort,
			</if>
			<!-- end add by zengjz 2016-11-07 增加字段-->											
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id, jdbcType=VARCHAR},
			</if>
			<if test="positionId != null">
				#{positionId, jdbcType=VARCHAR},
			</if>
			<if test="belongType != null">
				#{belongType, jdbcType=VARCHAR}, 
			</if>			
			<if test="name != null">
				#{name, jdbcType=VARCHAR},
			</if>			
			<if test="targetType != null">
				#{targetType, jdbcType=TINYINT},
			</if>			
			<if test="targetUrl != null">
				#{targetUrl, jdbcType=VARCHAR}, 
			</if>			
			<if test="picUrl != null">
				#{picUrl, jdbcType=VARCHAR}, 
			</if>
			<if test="areaType != null">
				#{areaType, jdbcType=TINYINT},
			</if>			
			<if test="startTime != null">
				 #{startTime, jdbcType=TIMESTAMP}, 
			</if>						
			<if test="endTime != null">
				#{endTime, jdbcType=TIMESTAMP},
			</if>
			<if test="isPay != null">
				#{isPay, jdbcType=TINYINT},
			</if>
			<if test="tradeNum != null">
				#{tradeNum, jdbcType=VARCHAR},
			</if>			
			<if test="status != null">
				#{status, jdbcType=TINYINT}, 
			</if>			
			<if test="createTime != null">
				#{createTime, jdbcType=TIMESTAMP}, 
			</if>			
			<if test="createUserId != null">
				#{createUserId, jdbcType=VARCHAR},
			</if>	
			<if test="updateTime != null">
				#{updateTime, jdbcType=TIMESTAMP}, 
			</if>			
			<if test="updateUserId != null">
				#{updateUserId, jdbcType=VARCHAR}, 
			</if>			
			<if test="disabled != null">
				#{disabled, jdbcType=INTEGER},
			</if>
			<if test="pv != null">
				#{pv, jdbcType=INTEGER},
			</if>
			<if test="target != null">
				#{target, jdbcType=TINYINT},
			</if>
			<if test="onShelfTime != null">
				#{onShelfTime, jdbcType=TIMESTAMP}, 
			</if>
			<!-- begin add by zengjz 2016-11-07 增加字段-->
			<if test="businessId != null">
				#{businessId, jdbcType=VARCHAR}, 
			</if>
			<if test="sort != null">
				#{sort, jdbcType=TINYINT},
			</if>
			<!-- end add by zengjz 2016-11-07 增加字段-->				
		</trim>
	</insert>
	
	<update id="update" parameterType="com.okdeer.mall.advert.entity.ColumnAdvert">
		UPDATE column_advert
		<set>
			<if test="positionId != null">
				position_id = #{positionId, jdbcType=VARCHAR},
			</if>
			<if test="belongType != null">
				belong_type = #{belongType, jdbcType=VARCHAR}, 
			</if>			
			<if test="name != null">
				name = #{name, jdbcType=VARCHAR},
			</if>			
			<if test="targetType != null">
				target_type = #{targetType, jdbcType=TINYINT},
			</if>			
			<if test="targetUrl != null">
				target_url = #{targetUrl, jdbcType=VARCHAR}, 
			</if>			
			<if test="picUrl != null">
				pic_url = #{picUrl, jdbcType=VARCHAR}, 
			</if>
			<if test="areaType != null">
				area_type = #{areaType, jdbcType=TINYINT},
			</if>			
			<if test="startTime != null">
				 start_time = #{startTime, jdbcType=TIMESTAMP}, 
			</if>						
			<if test="endTime != null">
				end_time = #{endTime, jdbcType=TIMESTAMP},
			</if>
			<if test="isPay != null">
				is_pay = #{isPay, jdbcType=TINYINT},
			</if>
			<if test="tradeNum != null">
				trade_num = #{tradeNum, jdbcType=VARCHAR},
			</if>			
			<if test="status != null">
				status = #{status, jdbcType=TINYINT}, 
			</if>			
			<if test="createTime != null">
				create_time = #{createTime, jdbcType=TIMESTAMP}, 
			</if>			
			<if test="createUserId != null">
				create_user_id = #{createUserId, jdbcType=VARCHAR},
			</if>	
			<if test="updateTime != null">
				update_time = #{updateTime, jdbcType=TIMESTAMP}, 
			</if>			
			<if test="updateUserId != null">
				update_user_id = #{updateUserId, jdbcType=VARCHAR}, 
			</if>			
			<if test="disabled != null">
				disabled = #{disabled, jdbcType=INTEGER},
			</if>
			<if test="pv != null">
				pv = #{pv, jdbcType=INTEGER},
			</if>
			<if test="target != null">
				target = #{target, jdbcType=TINYINT},
			</if>					
			<if test="onShelfTime != null">
				on_shelf_time = #{onShelfTime, jdbcType=TIMESTAMP}, 
			</if>
			<!-- begin add by zengjz 2016-11-07 增加字段-->
			<if test="businessId != null">
				business_id = #{businessId, jdbcType=VARCHAR}, 
			</if>
			<if test="sort != null">
				sort = #{sort, jdbcType=TINYINT},
			</if>
			<!-- end add by zengjz 2016-11-07 增加字段-->
		</set>
		WHERE id = #{id,jdbcType=VARCHAR}
	</update>
	
	<!-- 根据城市id 或者小区id查询广告 -->
	<select id="getAdvertById" resultMap="columnAdvertRsMap" parameterType="map">
		select * from(
		    select * from (
		       SELECT
			ca.id,ca.name,
			ca.pic_url,
			ca.target_type,
			ca.belong_type,
			ca.target,
			ca.target_url,
			ca.area_type,
			ca.on_shelf_time,
			ca.start_time,
			ca.create_time,
			ca.business_id,ca.sort
		FROM
			column_advert ca 
			LEFT JOIN column_advert_approval app ON app.advert_id = ca.id 
			LEFT JOIN column_advert_position cpos ON cpos.id = ca.position_id 
			LEFT JOIN column_advert_area area ON area.advert_id = ca.id
			left join column_advert_version v on ca.id=v.advert_id
		<if test="communityId != null and communityId != ''">
		 	LEFT JOIN column_advert_community community ON ca.id = community.advert_id
		</if>
		WHERE
			app.status = 1
			AND ca.status = 1
			<!-- 查询运营商的 -->
			and ca.belong_type = 0
		<if test="name != null and name != ''">
			AND cpos.name = #{name,jdbcType=VARCHAR}
		</if>
		<if test="advertType != null">
			AND cpos.type = #{advertType}
		</if>
		and (v.version is null or v.version=#{version, jdbcType=VARCHAR})
		<if test="cityId != null and cityId != ''">
		AND (
			ca.area_type = 0
			OR (
				ca.area_type = 1
				AND (
						(
							area.type = 1
							AND area.area_id = #{provinceId,jdbcType=VARCHAR}
						)
						OR (
							area.type = 0
							AND area.area_id = #{cityId,jdbcType=VARCHAR}
						)				
				)
			)
		)
		<!-- 排序规则：当定位的地址不属于签约小区时，则默认获取当前城市下的区域广告，
		区域广告只能有运营商发布，按照广告列表中的生效时间获取最多5张广告，如果有排序值，
		默认优先按照排序值进行广告展示 ，tips:没有排序值，按上架时间倒叙-->
		ORDER BY ca.sort DESC, ca.create_time DESC
		</if>
		<if test="communityId != null and communityId != ''">
		 AND (
			ca.area_type = 0
			OR (
				ca.area_type = 1
				AND (
						(
							area.type = 1
							AND area.area_id = (SELECT province_id FROM psms_small_community_info WHERE id = #{communityId,jdbcType=VARCHAR})
						)
						OR (
							area.type = 0
							AND area.area_id = (SELECT city_id FROM psms_small_community_info WHERE id = #{communityId,jdbcType=VARCHAR})
						)				
				)
			)
		   OR (ca.area_type = 2 AND community.community_id = #{communityId,jdbcType=VARCHAR})
		)
		<!-- 排序规则:定位小区，
			1、优先展示代理商广告，
			2、然后展示运营商发布到小区的广告，
			3、最后展示运营商发布的范围广告 -->
		ORDER BY ca.sort DESC, ca.create_time DESC
	    </if>
	    <!-- 运营商只查询前5条 -->
	    limit 5
		    )a
		    
		 union all
		 select * from (
		   SELECT
			ca.id,ca.name,
			ca.pic_url,
			ca.target_type,
			ca.belong_type,
			ca.target,
			ca.target_url,
			ca.area_type,
			ca.on_shelf_time,
			ca.start_time,
			ca.create_time,
			ca.business_id,ca.sort
		FROM
			column_advert ca 
			LEFT JOIN column_advert_approval app ON app.advert_id = ca.id 
			LEFT JOIN column_advert_position cpos ON cpos.id = ca.position_id 
			LEFT JOIN column_advert_area area ON area.advert_id = ca.id
			left join column_advert_version v on ca.id=v.advert_id
		<if test="communityId != null and communityId != ''">
		 	LEFT JOIN column_advert_community community ON ca.id = community.advert_id
		</if>
		WHERE
			app.status = 1
			AND ca.status = 1
			<!-- 查询代理商的 -->
			and ca.belong_type > 0
		<if test="name != null and name != ''">
			AND cpos.name = #{name,jdbcType=VARCHAR}
		</if>
		<if test="advertType != null">
			AND cpos.type = #{advertType}
		</if>
		and (v.version is null or v.version=#{version, jdbcType=VARCHAR})
		<if test="cityId != null and cityId != ''">
		AND (
			ca.area_type = 0
			OR (
				ca.area_type = 1
				AND (
						(
							area.type = 1
							AND area.area_id = #{provinceId,jdbcType=VARCHAR}
						)
						OR (
							area.type = 0
							AND area.area_id = #{cityId,jdbcType=VARCHAR}
						)				
				)
			)
		)
		<!-- 排序规则：当定位的地址不属于签约小区时，则默认获取当前城市下的区域广告，
		区域广告只能有运营商发布，按照广告列表中的生效时间获取最多5张广告，如果有排序值，
		默认优先按照排序值进行广告展示 ，tips:没有排序值，按上架时间倒叙-->
		ORDER BY ca.sort DESC, ca.create_time DESC
		</if>
		<if test="communityId != null and communityId != ''">
		 AND (
			ca.area_type = 0
			OR (
				ca.area_type = 1
				AND (
						(
							area.type = 1
							AND area.area_id = (SELECT province_id FROM psms_small_community_info WHERE id = #{communityId,jdbcType=VARCHAR})
						)
						OR (
							area.type = 0
							AND area.area_id = (SELECT city_id FROM psms_small_community_info WHERE id = #{communityId,jdbcType=VARCHAR})
						)				
				)
			)
		   OR (ca.area_type = 2 AND community.community_id = #{communityId,jdbcType=VARCHAR})
			)
			<!-- 排序规则:定位小区，
				1、优先展示代理商广告，
				2、然后展示运营商发布到小区的广告，
				3、最后展示运营商发布的范围广告 -->
		ORDER BY ca.sort DESC, ca.create_time DESC
	    </if>
	     <!-- 代理商只查询前两条 -->
		 limit 2
		 )b
		)obj	   
		<!-- 排序规则:定位小区，
			1、优先展示代理商广告，
			2、然后展示运营商发布到小区的广告，
			3、最后展示运营商发布的范围广告 -->
<!-- 		ORDER BY obj.belong_type desc,obj.area_type desc,obj.start_time desc,obj.create_time desc -->
		ORDER BY sort DESC, create_time DESC
	</select>
	
	<select id="getAdvertByIdV220" resultMap="columnAdvertRsMap" parameterType="map">
		select * from(
		    select * from (
		       SELECT
			ca.id,ca.name,
			ca.pic_url,
			ca.target_type,
			ca.belong_type,
			ca.target,
			ca.target_url,
			ca.area_type,
			ca.on_shelf_time,
			ca.start_time,
			ca.create_time,
			ca.business_id,ca.sort
		FROM
			column_advert ca 
			LEFT JOIN column_advert_approval app ON app.advert_id = ca.id 
			LEFT JOIN column_advert_position cpos ON cpos.id = ca.position_id 
			LEFT JOIN column_advert_area area ON area.advert_id = ca.id
		<if test="communityId != null and communityId != ''">
		 	LEFT JOIN column_advert_community community ON ca.id = community.advert_id
		</if>
		    LEFT JOIN column_advert_version version ON ca.id = version.advert_id
		WHERE
			app.status = 1
			<if test="type != null">
			AND version.type = #{type}
			</if>
			<if test="version != null and version != ''">
			AND version.version = #{version}
			</if>
			AND ca.status = 1
			<!-- 查询运营商的 -->
			and ca.belong_type = 0
		<if test="name != null and name != ''">
			AND cpos.name = #{name,jdbcType=VARCHAR}
		</if>
		<if test="advertType != null">
			AND cpos.type = #{advertType}
		</if>
		<if test="cityId != null and cityId != ''">
		AND (
			ca.area_type = 0
			OR (
				ca.area_type = 1
				AND (
						(
							area.type = 1
							AND area.area_id = #{provinceId,jdbcType=VARCHAR}
						)
						OR (
							area.type = 0
							AND area.area_id = #{cityId,jdbcType=VARCHAR}
						)				
				)
			)
		)
		<!-- 排序规则：当定位的地址不属于签约小区时，则默认获取当前城市下的区域广告，
		区域广告只能有运营商发布，按照广告列表中的生效时间获取最多5张广告，如果有排序值，
		默认优先按照排序值进行广告展示 ，tips:没有排序值，按上架时间倒叙-->
		ORDER BY ca.sort DESC, ca.create_time DESC
		</if>
		<if test="communityId != null and communityId != ''">
		 AND (
			ca.area_type = 0
			OR (
				ca.area_type = 1
				AND (
						(
							area.type = 1
							AND area.area_id = (SELECT province_id FROM psms_small_community_info WHERE id = #{communityId,jdbcType=VARCHAR})
						)
						OR (
							area.type = 0
							AND area.area_id = (SELECT city_id FROM psms_small_community_info WHERE id = #{communityId,jdbcType=VARCHAR})
						)				
				)
			)
		   OR (ca.area_type = 2 AND community.community_id = #{communityId,jdbcType=VARCHAR})
		)
		<!-- 排序规则:定位小区，
			1、优先展示代理商广告，
			2、然后展示运营商发布到小区的广告，
			3、最后展示运营商发布的范围广告 -->
		ORDER BY ca.sort DESC, ca.create_time DESC
	    </if>
	    <!-- 运营商只查询前5条 -->
	    limit 5
		    )a
		    
		 union all
		 select * from (
		   SELECT
			ca.id,ca.name,
			ca.pic_url,
			ca.target_type,
			ca.belong_type,
			ca.target,
			ca.target_url,
			ca.area_type,
			ca.on_shelf_time,
			ca.start_time,
			ca.create_time,
			ca.business_id,ca.sort
		FROM
			column_advert ca 
			LEFT JOIN column_advert_approval app ON app.advert_id = ca.id 
			LEFT JOIN column_advert_position cpos ON cpos.id = ca.position_id 
			LEFT JOIN column_advert_area area ON area.advert_id = ca.id
		<if test="communityId != null and communityId != ''">
		 	LEFT JOIN column_advert_community community ON ca.id = community.advert_id
		</if>
		    LEFT JOIN column_advert_version version ON ca.id = version.advert_id
		WHERE
			app.status = 1
			<if test="type != null">
			AND version.type = #{type}
			</if>
			<if test="version != null and version != ''">
			AND version.version = #{version}
			</if>
			AND ca.status = 1
			<!-- 查询代理商的 -->
			and ca.belong_type > 0
		<if test="name != null and name != ''">
			AND cpos.name = #{name,jdbcType=VARCHAR}
		</if>
		<if test="advertType != null">
			AND cpos.type = #{advertType}
		</if>
		<if test="cityId != null and cityId != ''">
		AND (
			ca.area_type = 0
			OR (
				ca.area_type = 1
				AND (
						(
							area.type = 1
							AND area.area_id = #{provinceId,jdbcType=VARCHAR}
						)
						OR (
							area.type = 0
							AND area.area_id = #{cityId,jdbcType=VARCHAR}
						)				
				)
			)
		)
		<!-- 排序规则：当定位的地址不属于签约小区时，则默认获取当前城市下的区域广告，
		区域广告只能有运营商发布，按照广告列表中的生效时间获取最多5张广告，如果有排序值，
		默认优先按照排序值进行广告展示 ，tips:没有排序值，按上架时间倒叙-->
		ORDER BY ca.sort DESC, ca.create_time DESC
		</if>
		<if test="communityId != null and communityId != ''">
		 AND (
			ca.area_type = 0
			OR (
				ca.area_type = 1
				AND (
						(
							area.type = 1
							AND area.area_id = (SELECT province_id FROM psms_small_community_info WHERE id = #{communityId,jdbcType=VARCHAR})
						)
						OR (
							area.type = 0
							AND area.area_id = (SELECT city_id FROM psms_small_community_info WHERE id = #{communityId,jdbcType=VARCHAR})
						)				
				)
			)
		   OR (ca.area_type = 2 AND community.community_id = #{communityId,jdbcType=VARCHAR})
			)
			<!-- 排序规则:定位小区，
				1、优先展示代理商广告，
				2、然后展示运营商发布到小区的广告，
				3、最后展示运营商发布的范围广告 -->
		ORDER BY ca.sort DESC, ca.create_time DESC
	    </if>
	     <!-- 代理商只查询前两条 -->
		 limit 2
		 )b
		)obj	   
		<!-- 排序规则:定位小区，
			1、优先展示代理商广告，
			2、然后展示运营商发布到小区的广告，
			3、最后展示运营商发布的范围广告 -->
<!-- 		ORDER BY obj.belong_type desc,obj.area_type desc,obj.start_time desc,obj.create_time desc -->
		ORDER BY sort DESC, create_time DESC
	</select>

	<select id="listForPos" resultMap="columnAdvertRsMap" parameterType="map">
		select c.* from column_advert c
		LEFT JOIN column_advert_area area ON area.advert_id = c.id
		INNER JOIN column_advert_approval app ON app.advert_id = c.id
			where app.status = 1
			and c.position_id = (select id from column_advert_position p where p.name = 'POS机广告')
			and c.disabled = 0 
			and c.status = 1
			<if test="picUrl != null and picUrl != ''">
			  AND c.pic_url != #{picUrl,jdbcType=VARCHAR}
			</if>
			<if test="provinceId != null and provinceId != ''">
	    	AND (c.area_type =  #{nationalAreaType,jdbcType=TINYINT}
	      	  OR (c.area_type = #{districtAreaType,jdbcType=TINYINT}
	         	  AND ((area.type = 1 AND area.area_id = #{provinceId,jdbcType=VARCHAR})
	              	 OR (area.type = 0 AND area.area_id = #{cityId,jdbcType=VARCHAR})
	              	 )
	         	  )
	       	 )
	    	</if>
	</select>
	
	<select id="listDefaultForPos" resultMap="columnAdvertRsMap" parameterType="map">
		select c.* from column_advert c
		INNER JOIN column_advert_approval app ON app.advert_id = c.id
			where app.status = 1
			and c.position_id = (select id from column_advert_position p where p.name = 'POS机广告')
			and c.disabled = 0 
			and c.status = 1
			<if test="picUrl != null and picUrl != ''">
			  AND c.pic_url = #{picUrl,jdbcType=VARCHAR}
			</if>
	</select>
	
	<select id="getAdvertByTradeNum" resultMap="columnAdvertRsMap">
		SELECT <include refid="base_column_list"/>
		FROM column_advert
		WHERE disabled = 0 
			AND trade_num = #{tradeNum, jdbcType=VARCHAR}
	</select>
	
	<select id="findMobileDoorAdvert" resultMap="columnAdvertRsMap" parameterType="map">
		SELECT ca.id, ca.position_id, ca.belong_type, ca.name, ca.target_type, ca.target, ca.target_url, ca.pic_url,
			   ca.area_type, ca.start_time, ca.end_time, ca.trade_num, ca.status, ca.create_time, ca.create_user_id,
			   ca.update_time, ca.disabled,ca.business_id,ca.sort
		FROM column_advert ca
		LEFT JOIN column_advert_area area ON area.advert_id = ca.id
		LEFT JOIN column_advert_position po ON po.id = ca.position_id
		LEFT JOIN column_advert_approval app ON app.advert_id = ca.id
		WHERE ca.disabled = 0 AND ca.status = 1 AND app.status = 1
		<if test="name != null and name != ''">
	        AND po.name = #{name,jdbcType=VARCHAR}
	    </if>	
		<if test="advertType != null">
			AND po.type = #{advertType}
		</if>	
		<if test="provinceId != null and provinceId != ''">
	    AND (ca.area_type =  #{nationalAreaType,jdbcType=TINYINT}
	        OR (ca.area_type = #{districtAreaType,jdbcType=TINYINT}
	           AND ((area.type = 1 AND area.area_id = #{provinceId,jdbcType=VARCHAR})
	               OR (area.type = 0 AND area.area_id = #{cityId,jdbcType=VARCHAR})
	               )
	           )
	        )
	    </if>
	    ORDER BY ca.create_time DESC limit 1
	</select>
	
	<!-- add by zhangkn -->
	<select id="listGoodsForAdvert" resultType="map" parameterType="map">
		select 
		CAST(se.is_collect AS SIGNED) as addSendPrice,
		CAST(se.is_support_purchase AS SIGNED) as canConfirmOrder,
		se.starting_price as fullPrice,
		sku.`name` as goodsName,
		sku.id as goodsStoreSkuId,
		CAST(se.is_starting_price AS SIGNED) as hasFullPrice,
		CAST(se.is_distribution_fee AS SIGNED) as hasSendPrice,
		CAST(se.is_shopping_cart AS SIGNED) as isSupportCart,
		sku.market_price as marketPrice,
		pic.url as picUrl,
		sku.online_price as onlinePrice,
		stock.sellable as sellable,
		se.distribution_fee as sendPrice,
		sku.store_id as skuStoreId,
		CAST(sku.type AS SIGNED) as skuType,
		service.is_shop_num as isShopNum,
		service.shop_num as startBuyNum,
		si.store_name as storeName,
		sku.update_time as updateTime	,
		css.column_server_id as serverColumnId,
		cs .server_name as serverColumnName
	
		from goods_store_sku sku
		LEFT JOIN store_info si on (sku.store_id = si.id)
		LEFT JOIN goods_store_sku_stock stock on (sku.id = stock.store_sku_id)
		LEFT JOIN goods_store_sku_picture pic on (sku.id = pic.store_sku_id and pic.type = 1)
		LEFT JOIN goods_store_sku_service service on (sku.id = service.store_sku_id)
		LEFT JOIN store_info_ext ext on (si.id = ext.store_id)
		LEFT JOIN store_service_ext se on (si.id = se.store_id)
		LEFT JOIN column_server_store css on (css.store_id = si.id)
		LEFT JOIN column_server cs on (css.column_server_id = cs.id)
		where 1 = 1 
		<if test="goodsIdList != null">
		 and sku.id in 
	    <foreach collection="goodsIdList" index="index" item="item" open="(" close=")" separator=",">
        	#{item}
        </foreach>
        </if>
	</select>
	
	<!-- Begin 广告区域统计 added by tangy  2016-11-28 -->
	<select id="findAdvertRestrictByArea" resultType="com.okdeer.mall.operate.entity.ColumnAdvertVersionBo" parameterType="com.okdeer.mall.advert.entity.ColumnAdvert">
		SELECT 
		CONCAT_WS('',IFNULL(caa.area_id, 0), ver.type, IFNULL(ver.version, 'V1.0')) AS idKey,
		IFNULL(caa.area_id, 0) AS areaId,
		ver.type,
		ver.version,
		COUNT(1) AS count
		FROM column_advert ca
		LEFT JOIN column_advert_position ap ON ca.position_id = ap.id
		LEFT JOIN column_advert_area caa ON caa.advert_id = ca.id
		LEFT JOIN column_advert_approval app ON app.advert_id = ca.id
		LEFT JOIN column_advert_version ver ON ver.advert_id = ca.id
		WHERE ca.disabled = 0 AND ca.status IN(0, 1)	
		<choose>
		    <when test="belongType != null and belongType == '0'.toString()">
		    AND ca.belong_type = 0
		    </when>
		    <otherwise>  
		    AND ca.belong_type <![CDATA[ <> ]]> 0 AND app.status = 1
            </otherwise> 
		</choose>
	    AND ((#{startTime} BETWEEN ca.start_time AND ca.end_time) OR #{endTime} BETWEEN ca.start_time AND ca.end_time)
	    <if test="positionId != null and positionId !=''">
	   	   AND ap.id = #{positionId, jdbcType=VARCHAR}
	    </if>   
	    <if test="id != null and id != ''">
	   	   AND ca.id != #{id,jdbcType=VARCHAR}
	    </if> 
        <if test="areaIdList != null" >      
            AND (ca.area_type = 0 OR caa.area_id in  
			<foreach collection="areaIdList" open="(" close=")" index="index" item="item"  separator=",">
 	  		 		 #{item}
  		 	</foreach>
  		 	 )
		  </if> 
	    GROUP BY idKey
        ORDER BY COUNT(1) DESC                
	</select>
	
	<select id="findForApp" parameterType="com.okdeer.mall.advert.dto.ColumnAdvertQueryParamDto" resultMap="columnAdvertRsMap">
		SELECT 
		c.id, c.position_id, c.belong_type, c.name, c.target_type, c.target, c.target_url, c.pic_url,
		c.area_type, c.start_time, c.end_time, c.is_pay, c.trade_num, c.status, c.create_time, c.create_user_id,
		c.update_time, c.update_user_id, c.disabled, c.pv, c.on_shelf_time, c.off_shelf_time,c.business_id,c.sort
		FROM column_advert c
		left join column_advert_version v on v.advert_id=c.id
		WHERE 1 = 1
		<if test="positionId != null and positionId != ''">
			and c.position_id = #{positionId,jdbcType=VARCHAR}
		</if>
		<if test="advertStatus != null">
			and c.status = #{advertStatus,jdbcType=TINYINT}
		</if>
		and c.area_type = 0
		and (v.version is null or v.version=#{version,jdbcType=VARCHAR})
		union all 
		SELECT 
		ca.id, ca.position_id, ca.belong_type, ca.name, ca.target_type, ca.target, ca.target_url, ca.pic_url,
		ca.area_type, ca.start_time, ca.end_time, ca.is_pay, ca.trade_num, ca.status, ca.create_time, ca.create_user_id,
		ca.update_time, ca.update_user_id, ca.disabled, ca.pv, ca.on_shelf_time, ca.off_shelf_time,ca.business_id,ca.sort
		FROM column_advert ca 
		left join column_advert_version v on v.advert_id=ca.id
		WHERE 1 = 1
		<if test="positionId != null and positionId != ''">
			and ca.position_id = #{positionId,jdbcType=VARCHAR}
		</if>
		<if test="advertStatus != null">
			and ca.status = #{advertStatus,jdbcType=TINYINT}
		</if>
		and ca.area_type = 1
		and  exists (
			select 1 from column_advert_area caa where  ca.id=caa.advert_id
			<if test="cityId != null and cityId !='' ">
				and (
					 (caa.type = 0 and caa.area_id = #{cityId,jdbcType=VARCHAR}) 
					 <if test="provinceId != null and provinceId !='' ">
						or ( caa.type = 1 and caa.area_id = #{provinceId,jdbcType=VARCHAR} )
					</if>
				)
			</if>
		)
		and (v.version is null or v.version=#{version,jdbcType=VARCHAR})
	</select>
	
	<select id="findForAppV220" parameterType="com.okdeer.mall.advert.dto.ColumnAdvertQueryParamDto" resultMap="columnAdvertRsMap">
		SELECT <include refid="base_column_list2" />
		FROM column_advert ca
		LEFT JOIN column_advert_version version ON ca.id = version.advert_id
		WHERE 1 = 1
		<if test="type != null">
		    and version.type = #{type}
		</if>
		<if test="version != null">
		    and version.version = #{version}
		</if>
		<if test="positionId != null and positionId != ''">
			and position_id = #{positionId,jdbcType=VARCHAR}
		</if>
		<if test="advertStatus != null">
			and status = #{advertStatus,jdbcType=TINYINT}
		</if>
		and area_type = 0
		union all 
		SELECT <include refid="base_column_list2" />
		FROM column_advert ca 
		LEFT JOIN column_advert_version version ON ca.id = version.advert_id
		WHERE 1 = 1
		<if test="type != null">
		    and version.type = #{type}
		</if>
		<if test="version != null">
		    and version.version = #{version}
		</if>
		<if test="positionId != null and positionId != ''">
			and ca.position_id = #{positionId,jdbcType=VARCHAR}
		</if>
		<if test="advertStatus != null">
			and ca.status = #{advertStatus,jdbcType=TINYINT}
		</if>
		and ca.area_type = 1
		and  exists (
			select 1 from column_advert_area caa where  ca.id=caa.advert_id
			<if test="cityId != null and cityId !='' ">
				and (
					 (caa.type = 0 and caa.area_id = #{cityId,jdbcType=VARCHAR}) 
					 <if test="provinceId != null and provinceId !='' ">
						or ( caa.type = 1 and caa.area_id = #{provinceId,jdbcType=VARCHAR} )
					</if>
				)
			</if>
		)
	</select>
	
	<!-- begin 根据广告id获取广告商品列表 xuzq01 20170208-->
	<select id="findAdvertGoodsByAdvertId" resultMap="advertGoodsMap" parameterType="String">
		SELECT DISTINCT
	        sku.id,
			sku.name,
			sku.alias,
			IFNULL(sku.tag_type,0) AS tagType,
			sku.bar_code,
			sku.update_time AS updateTime,
			sku.store_id,
			sku.type,
			if(sa.type=5,asg.sale_price,sku.online_price) AS onlinePrice,
			sku.market_price AS marketPrice,
			if(sa.type=5,asg.trade_max,sku.trade_max) AS tradeMax,
			IFNULL(sku.guaranteed,0) AS guaranteed,
			IFNULL(sku.obsolete,0) AS obsolete,
			sku.properties_indb AS propertiesIndb, 		
			sku.activity_type AS activityType,
			picture.url,
			stock.sellable AS sellableStock,
			asg.sale_price,
			stock.locked AS lockedStock,
			asg.trade_max AS lowPriceUpper,
			sa.`limit` as limitNum,
			sku.`online` AS online
		FROM column_advert_goods s
			INNER JOIN goods_store_sku sku on s.goods_id = sku.bar_code
			LEFT JOIN goods_store_sku_plu plu ON plu.store_sku_id = sku.id AND plu.type = 1 AND plu.disabled = 0
			LEFT JOIN goods_store_sku_picture picture ON sku.id = picture.store_sku_id AND picture.type =1
			LEFT JOIN goods_store_sku_stock stock ON stock.`store_sku_id` = sku.`id`
			LEFT JOIN `activity_sale` sa ON sa.`id` = sku.`activity_id` AND sa.status = 1 AND sa.disabled = 0
			LEFT JOIN `activity_sale_goods` asg on sa.id = asg.`sale_id` AND sku.id=asg.store_sku_id
	    WHERE sku.disabled = 0
			AND stock.disabled = 0
			AND sku.`status` = 1
			AND sku.violation = 0
			AND sku.store_id = #{storeId,jdbcType=VARCHAR}
		  	AND s.advert_id=#{advertId,jdbcType=VARCHAR}
			ORDER BY s.`create_time` 
	</select>
	<!-- end 根据广告id获取广告商品列表 xuzq01 20170208-->
</mapper>