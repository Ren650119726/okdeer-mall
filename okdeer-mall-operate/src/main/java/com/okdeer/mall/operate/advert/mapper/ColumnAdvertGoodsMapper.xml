<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.okdeer.mall.operate.advert.mapper.ColumnAdvertGoodsMapper" >
    <resultMap id="BaseResultMap" type="com.okdeer.mall.activity.advert.entity.ColumnAdvertGoods" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="activity_advert_id" property="activityAdvertId" jdbcType="VARCHAR" />
        <result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
        <result column="model_id" property="modelId" jdbcType="VARCHAR" />
        <result column="sort" property="sort" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>
    
  <!-- 活动商品信息  tuzhd-->
  <resultMap id="advertGoodsMap" type="com.okdeer.archive.goods.store.dto.GoodsStoreActivitySkuDto" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="alias" property="alias" jdbcType="VARCHAR" />
    <result column="tagType" property="tagType" jdbcType="INTEGER" />
    <result column="bar_code" property="barCode" jdbcType="VARCHAR" />
    <result column="onlinePrice" property="onlinePrice" jdbcType="DECIMAL" />
    <result column="marketPrice" property="marketPrice" jdbcType="DECIMAL" />
    <result column="sellableStock" property="sellableStock" jdbcType="INTEGER" />
    <result column="tradeMax" property="tradeMax" jdbcType="INTEGER" />
    <result column="limitNum" property="limitNum" jdbcType="INTEGER" />
    <result column="guaranteed" property="guaranteed" jdbcType="INTEGER" />
    <result column="obsolete" property="obsolete" jdbcType="INTEGER" />
    <result column="propertiesIndb" property="propertiesIndb" jdbcType="INTEGER" />
    <result column="activityType" property="activityType" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="store_id" property="shopId" jdbcType="VARCHAR" />
    <result column="store_name" property="shopName" jdbcType="VARCHAR" />
    <result column="saleName" property="saleName" jdbcType="VARCHAR" />
    <result column="h5_url" property="h5Url" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="isPrivliege" property="isPrivliege" jdbcType="INTEGER" />
    <result column="sale_price" property="salePrice" jdbcType="DECIMAL" />
    <result column="limitNum" property="limitNum" jdbcType="INTEGER" />
    <result column="lockedStock" property="lockedStock" jdbcType="INTEGER" />
    <result column="lowPriceUpper" property="lowPriceUpper" jdbcType="INTEGER" />
    <result column="online" property="online" jdbcType="INTEGER" />
  </resultMap>

    <sql id="Base_Column_List" > 
        id, activity_advert_id, goods_id, model_id, create_time, sort
    </sql>
	
	<select id="findByAdvertId" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select s.id, s.activity_advert_id, model_id, if(k.id is NULL,s.goods_id,k.id) goods_id, s.create_time
        from column_advert_goods s
			 LEFT JOIN goods_store_sku_service gs on s.goods_id = gs.product_no
			 LEFT JOIN goods_store_sku k on k.id = gs.store_sku_id
        where activity_advert_id = #{advertId,jdbcType=VARCHAR}
        order by create_time 
    </select>
   
    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from column_advert_goods
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <insert id="add" parameterType="com.okdeer.mall.activity.advert.entity.ColumnAdvertGoods" >
        insert into column_advert_goods
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="activityAdvertId != null" >
                activity_advert_id,
            </if>
            <if test="modelId != null" >
                model_id,
            </if>
            <if test="sort != null" >
                sort,
            </if>
            <if test="goodsId != null" >
                goods_id,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="activityAdvertId != null" >
                #{activityAdvertId,jdbcType=VARCHAR},
            </if>
            <if test="modelId != null" >
                #{modelId,jdbcType=VARCHAR},
            </if>
            <if test="sort != null" >
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null" >
                #{goodsId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.okdeer.mall.activity.advert.entity.ColumnAdvertGoods" >
        update column_advert_goods
        <set >
            <if test="activityAdvertId != null" >
                activity_advert_id = #{activityAdvertId,jdbcType=VARCHAR},
            </if>
            <if test="modelId != null" >
                model_id = #{modelId,jdbcType=VARCHAR},
            </if>
            <if test="sort != null" >
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null" >
                goods_id = #{goodsId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <delete id="delete" parameterType="java.lang.String" >
        delete from column_advert_goods
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    
    
    <sql id="advert_goods_columns">
		sku.id,
		sku.name,
		sku.alias,
		IFNULL(sku.tag_type,0) AS tagType,
		sku.bar_code,
		sku.update_time AS updateTime,
		sku.store_id,
		sku.type,
		if(sa.type=5,asg.sale_price,sku.online_price) AS onlinePrice,
		sku.market_price AS marketPrice,
		if(sa.type=5,asg.trade_max,sku.trade_max) AS tradeMax,
		IFNULL(sku.guaranteed,0) AS guaranteed,
		IFNULL(sku.obsolete,0) AS obsolete,
		sku.properties_indb AS propertiesIndb, 		
		sku.activity_type AS activityType,
		picture.url,
		stock.sellable AS sellableStock,
		asg.sale_price,
		stock.locked AS lockedStock,
		asg.trade_max AS lowPriceUpper,
		sa.`limit` as limitNum,
		sku.`online` AS online,
		if(sa.type=5,1,0) isPrivliege
	</sql>
    <!-- begin 根据广告id获取广告商品列表 xuzq01 20170208-->
	<select id="findAdvertGoodsByAdvertId" resultMap="advertGoodsMap" parameterType="String">
		SELECT DISTINCT
	        <include refid="advert_goods_columns" />
		FROM column_advert_goods s
			INNER JOIN goods_store_sku sku on s.goods_id = sku.bar_code
			LEFT JOIN goods_store_sku_plu plu ON plu.store_sku_id = sku.id AND plu.type = 1 AND plu.disabled = 0
			LEFT JOIN goods_store_sku_picture picture ON sku.id = picture.store_sku_id AND picture.type =1
			LEFT JOIN goods_store_sku_stock stock ON stock.`store_sku_id` = sku.`id`
			LEFT JOIN `activity_sale` sa ON sa.`id` = sku.`activity_id` AND sa.status = 1 AND sa.disabled = 0
			LEFT JOIN `activity_sale_goods` asg on sa.id = asg.`sale_id` AND sku.id=asg.store_sku_id
	    WHERE sku.disabled = 0
			AND stock.disabled = 0
			AND sku.`status` = 1
			AND sku.violation = 0
			AND sku.store_id = #{storeId,jdbcType=VARCHAR}
		  	AND s.advert_id=#{advertId,jdbcType=VARCHAR}
			ORDER BY s.`create_time` 
	</select>
	<!-- end 根据广告id获取广告商品列表 xuzq01 20170208-->
	
	<!-- begin 根据店铺活动类型 活动商品列表 tuzhd 20170313-->
	<select id="findGoodsByActivityType" resultMap="advertGoodsMap" >
		SELECT DISTINCT
	        <include refid="advert_goods_columns" />
		FROM goods_store_sku sku 
			INNER JOIN `activity_sale` sa ON sa.`id` = sku.`activity_id` AND sa.status = 1 AND sa.disabled = 0
			INNER JOIN `activity_sale_goods` asg on sa.id = asg.`sale_id` AND sku.id=asg.store_sku_id
			LEFT JOIN goods_store_sku_plu plu ON plu.store_sku_id = sku.id AND plu.type = 1 AND plu.disabled = 0
			LEFT JOIN goods_store_sku_picture picture ON sku.id = picture.store_sku_id AND picture.type =1
			LEFT JOIN goods_store_sku_stock stock ON stock.`store_sku_id` = sku.`id`
	    WHERE sku.disabled = 0
			AND stock.disabled = 0
			AND sku.`status` = 1
			AND sku.violation = 0
			AND sku.store_id = #{storeId,jdbcType=VARCHAR}
			<if test="saleType != null">
				AND sa.type = #{saleType,jdbcType=INTEGER}
			</if>
			ORDER BY asg.sort DESC 
	</select>
	<!-- end 根据店铺活动类型 活动商品列表 20170313-->
	
	<!-- add by zhangkn -->
	<select id="listGoodsForAdvert" resultType="map" parameterType="map">
		select 
			CAST(se.is_collect AS SIGNED) as addSendPrice,
			CAST(se.is_support_purchase AS SIGNED) as canConfirmOrder,
			se.starting_price as fullPrice,
			sku.`name` as goodsName,
			sku.id as goodsStoreSkuId,
			CAST(se.is_starting_price AS SIGNED) as hasFullPrice,
			CAST(se.is_distribution_fee AS SIGNED) as hasSendPrice,
			CAST(se.is_shopping_cart AS SIGNED) as isSupportCart,
			sku.market_price as marketPrice,
			pic.url as picUrl,
			sku.online_price as onlinePrice,
			stock.sellable as sellable,
			se.distribution_fee as sendPrice,
			sku.store_id as skuStoreId,
			CAST(sku.type AS SIGNED) as skuType,
			service.is_shop_num as isShopNum,
			service.shop_num as startBuyNum,
			si.store_name as storeName,
			sku.update_time as updateTime	,
			css.column_server_id as serverColumnId,
			cs .server_name as serverColumnName
		from goods_store_sku sku
			INNER JOIN column_advert_goods g on sku.id = g.`goods_id`
			LEFT JOIN store_info si on (sku.store_id = si.id)
			LEFT JOIN goods_store_sku_stock stock on (sku.id = stock.store_sku_id)
			LEFT JOIN goods_store_sku_picture pic on (sku.id = pic.store_sku_id and pic.type = 1)
			LEFT JOIN goods_store_sku_service service on (sku.id = service.store_sku_id)
			LEFT JOIN store_info_ext ext on (si.id = ext.store_id)
			LEFT JOIN store_service_ext se on (si.id = se.store_id)
			LEFT JOIN column_server_store css on (css.store_id = si.id)
			LEFT JOIN column_server cs on (css.column_server_id = cs.id)
		where 1 = 1 
			<if test="activityAdvertId != null and activityAdvertId != ''">
		        AND g.`activity_advert_id` = #{activityAdvertId,jdbcType=VARCHAR}
		    </if>	
			<if test="goodsIdList != null">
			 and sku.id in 
			    <foreach collection="goodsIdList" index="index" item="item" open="(" close=")" separator=",">
		        	#{item}
		        </foreach>
	        </if>
	        order by g.`sort` desc
	</select>
</mapper>