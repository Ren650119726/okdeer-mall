<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.okdeer.mall.operate.operatefields.mapper.OperateFieldsContentMapper" >
    <resultMap id="BaseResultMap" type="com.okdeer.mall.operate.operatefields.entity.OperateFieldsContent" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="field_id" property="fieldId" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="TINYINT" javaType="com.okdeer.mall.operate.enums.OperateFieldsContentType"/>
        <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="link_url" property="linkUrl" jdbcType="VARCHAR" />
        <result column="business_type" property="businessType" jdbcType="TINYINT" javaType="com.okdeer.mall.operate.enums.OperateFieldsBusinessType"/>
        <result column="business_id" property="businessId" jdbcType="VARCHAR" />
        <result column="sort_type" property="sortType" jdbcType="TINYINT" javaType="com.okdeer.mall.operate.enums.OperateFieldsSortType"/>
        <result column="sort" property="sort" jdbcType="INTEGER" />
    </resultMap>

	<resultMap id="fieldContentMap" type="com.okdeer.mall.operate.dto.OperateFieldContentDto">
		<result column="pointContent" property="pointContent" jdbcType="VARCHAR"/>
		<result column="title" property="title" jdbcType="VARCHAR"/>
		<result column="store_id" property="storeId" jdbcType="VARCHAR"/>
		<result column="logo_url" property="logoUrl" jdbcType="VARCHAR"/>
		<result column="store_name" property="storeName" jdbcType="VARCHAR"/>
		<result column="branchesType" property="branchesType" jdbcType="VARCHAR"/>
		<result column="branchesName" property="branchesName" jdbcType="VARCHAR"/>
		<result column="goodsId" property="goodsId" jdbcType="VARCHAR"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="newUrl" property="newUrl" jdbcType="VARCHAR"/>
		<result column="sku_type" property="skuType" jdbcType="VARCHAR"/>
		<result column="alias" property="alias" jdbcType="VARCHAR"/>
		<result column="isLowPrice" property="isLowPrice" jdbcType="INTEGER"/>
		<result column="lowPrice" property="lowPrice" jdbcType="DECIMAL"/>
		<result column="online_price" property="onlinePrice" jdbcType="DECIMAL"/>
		<result column="market_price" property="marketPrice" jdbcType="DECIMAL"/>
		<result column="properties_indb" property="propertiesIndb" jdbcType="VARCHAR"/>
		<result column="trade_max" property="tradeMax" jdbcType="INTEGER"/>
		<result column="lowPriceUpper" property="lowPriceUpper" jdbcType="INTEGER"/>
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
		<result column="limitNum" property="limitNum" jdbcType="INTEGER"/>
		<result column="isPrivliege" property="isPrivliege" jdbcType="INTEGER"/>
		<result column="tag_type" property="tagType" jdbcType="VARCHAR"/>
		<result column="pointType" property="pointType" jdbcType="VARCHAR"/>
	</resultMap>

    <sql id="Base_Column_List" >
        id, field_id, type, image_url, link_url,title, business_type, business_id, sort_type, sort
    </sql>

    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from column_operate_fields_content
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <insert id="add" parameterType="com.okdeer.mall.operate.operatefields.entity.OperateFieldsContent" >
        insert into column_operate_fields_content
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="fieldId != null" >
                field_id,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="imageUrl != null" >
                image_url,
            </if>
            <if test="title != null" >
                title,
            </if>
            <if test="linkUrl != null" >
                link_url,
            </if>
            <if test="businessType != null" >
                business_type,
            </if>
            <if test="businessId != null" >
                business_id,
            </if>
            <if test="sortType != null" >
                sort_type,
            </if>
            <if test="sort != null" >
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="fieldId != null" >
                #{fieldId,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                #{type,jdbcType=TINYINT},
            </if>
            <if test="imageUrl != null" >
                #{imageUrl,jdbcType=VARCHAR},
            </if>
             <if test="title != null" >
               #{title,jdbcType=VARCHAR},
            </if>
            <if test="linkUrl != null" >
                #{linkUrl,jdbcType=VARCHAR},
            </if>
            <if test="businessType != null" >
                #{businessType,jdbcType=TINYINT},
            </if>
            <if test="businessId != null" >
                #{businessId,jdbcType=VARCHAR},
            </if>
            <if test="sortType != null" >
                #{sortType,jdbcType=TINYINT},
            </if>
            <if test="sort != null" >
                #{sort,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.okdeer.mall.operate.operatefields.entity.OperateFieldsContent" >
        update column_operate_fields_content
        <set >
            <if test="fieldId != null" >
                field_id = #{fieldId,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="imageUrl != null" >
                image_url = #{imageUrl,jdbcType=VARCHAR},
            </if>
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="linkUrl != null" >
                link_url = #{linkUrl,jdbcType=VARCHAR},
            </if>
            <if test="businessType != null" >
                business_type = #{businessType,jdbcType=TINYINT},
            </if>
            <if test="businessId != null" >
                business_id = #{businessId,jdbcType=VARCHAR},
            </if>
            <if test="sortType != null" >
                sort_type = #{sortType,jdbcType=TINYINT},
            </if>
            <if test="sort != null" >
                sort = #{sort,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <delete id="delete" parameterType="java.lang.String" >
        delete from column_operate_fields_content
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    
    <select id="findByFieldId" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from column_operate_fields_content
        where field_id = #{fieldId,jdbcType=VARCHAR}
    </select>

	<delete id="deleteByFieldId" parameterType="java.lang.String">
		delete from column_operate_fields_content
        where field_id = #{fieldId,jdbcType=VARCHAR}
	</delete>
	
	<select id="getGoodsOfStoreActivityFields" resultMap="fieldContentMap">
		select 
			s.store_id, si.logo_url, si.store_name, sb.type as branchesType,
			CASE si.type 
			WHEN 2 THEN (
					CASE sb.type 
					WHEN 3 THEN '自营店' 
					WHEN 4 THEN '加盟店'
					WHEN 5 THEN '合作店'
					ELSE '' END
			) ELSE '合作商家' END AS branchesName,
			gs.id as goodsId, gs.id as pointContent,g.sale_stock,g.sale_price as lowPrice,
			gs.`name`,gs.alias,gs.tag_type,gs.type as sku_type,p.url as newUrl, 0 pointType,
			gs.online_price, gs.market_price, gs.properties_indb,gs.trade_max,gs.update_time,
			case s.type when 7  THEN  1 else 0 end as isLowPrice,
			case s.type when 5 THEN 1 else 0 end as isPrivliege,
			case s.type when 7 THEN  g.trade_max else '' end as lowPriceUpper,
			case s.type when 5 THEN g.trade_max else '' end as limitNum
		from activity_sale s
		left join store_info si on s.store_id=si.id
		left join store_branches sb on si.id=sb.id
		left join activity_sale_goods g on s.id=g.sale_id
		left join goods_store_sku gs on g.store_sku_id=gs.id
		left join goods_store_sku_picture p on p.store_sku_id=gs.id and p.type = 1
		where s.disabled = 0 and s.status = 1 
			and gs.disabled=0 and gs.online = 1
			and gs.status = 1 and gs.violation = 0
		<if test="storeIds != null">
			and s.store_id IN 
			<foreach collection="storeIds" index="index" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="storeId != null">
			and s.store_id = #{storeId}
		</if>
		<if test="businessType != null">
			and s.type = #{businessType}
		</if>
		<!-- 0 价格从高到低  1 排序值从高到低 2 价格从低到高  3排序值从低到高  -->
		<if test="sortType == 0">
			<if test="sort != null">
				and g.sale_price &gt;= #{sort}
			</if>
			order by g.sale_price DESC
		</if>
		<if test="sortType == 1">
			<if test="sort != null">
				and g.sort &gt;= #{sort}
			</if>
			order by g.sort DESC
		</if>
		<if test="sortType == 2">
			<if test="sort != null">
				and g.sale_price &gt;= #{sort}
			</if>
			order by g.sale_price ASC
		</if>
		<if test="sortType == 3">
			<if test="sort != null">
				and g.sort &gt;= #{sort}
			</if>
			order by g.sort ASC
		</if>
		<if test="template != null">
			limit #{template} 
		</if>
	</select>
	
	<select id="getSingleGoodsOfOperateField" resultMap="fieldContentMap">	
		select gs.store_id, si.logo_url, si.store_name, sb.type as branchesType,
			CASE si.type 
			WHEN 2 THEN (
					CASE sb.type 
					WHEN 3 THEN '自营店' 
					WHEN 4 THEN '加盟店'
					WHEN 5 THEN '合作店'
					ELSE '' END
			) ELSE '合作商家' END AS branchesName,
			gs.id as goodsId, gs.id as pointContent,g.sale_stock,g.sale_price as lowPrice,
			gs.`name`,gs.alias,gs.tag_type,gs.type as sku_type,p.url as newUrl, 0 pointType,
			gs.online_price, gs.market_price, gs.properties_indb,gs.trade_max,gs.update_time,
		    case gs.activity_type when 5 THEN  1 else 0 end as isLowPrice,
			case gs.activity_type when 2 THEN 1 else 0 end as isPrivliege,		
		    case gs.activity_type when 5 THEN  g.trade_max else '' end as lowPriceUpper,
			case gs.activity_type when 2 THEN g.trade_max else '' end as limitNum
		from goods_store_sku gs 
		left join activity_sale_goods g on gs.id=g.store_sku_id and g.sale_id = gs.activity_id
		left join store_info si on gs.store_id = si.id
		left join store_branches sb on si.id=sb.id
		left join goods_store_sku_picture p on p.store_sku_id=gs.id and p.type = 1 
		where gs.store_id = #{storeId}
			and gs.id = #{goodsId}
			and gs.disabled=0 
			and gs.online = 1
			and gs.status = 1 
			and gs.violation = 0
	</select>
	
	<select id="getGoodsOfCategoryField" resultMap="fieldContentMap">
		select 
		  gs.id as goodsId, gs.store_id, si.logo_url, si.store_name, sb.type as branchesType,
			CASE si.type 
			WHEN 2 THEN (
					CASE sb.type 
					WHEN 3 THEN '自营店' 
					WHEN 4 THEN '加盟店'
					WHEN 5 THEN '合作店'
					ELSE '' END
			) ELSE '合作商家' END AS branchesName
			, gs.id as pointContent,g.sale_stock,g.sale_price as lowPrice,
			gs.`name`,gs.alias,gs.tag_type,gs.type as sku_type,p.url as newUrl, 0 pointType,
			gs.online_price, gs.market_price, gs.properties_indb,gs.trade_max,gs.update_time,
			case gs.activity_type when 5 THEN  1 else 0 end as isLowPrice,
			case gs.activity_type when 2 THEN 1 else 0 end as isPrivliege,		
			case gs.activity_type when 5 THEN  g.trade_max else '' end as lowPriceUpper,
			case gs.activity_type when 2 THEN g.trade_max else '' end as limitNum
		from goods_store_sku gs
		left join activity_sale_goods g on gs.id=g.store_sku_id and g.sale_id = gs.activity_id 
		left join goods_store_spu gss on gss.id=gs.store_spu_id
		left join goods_spu_category gsc on gss.spu_category_id=gsc.id
		left join goods_store_sku_picture p on p.store_sku_id=gs.id and p.type = 1 
		left join store_info si on gs.store_id = si.id
		left join store_branches sb on si.id=sb.id
		where gs.disabled=0 and gs.store_id = #{storeId} 
			and gs.online = 1 and gs.status = 1 and gs.violation = 0
		<choose>  
            <when test="categoryIds != null and categoryIds.size > 0 ">  
                and gsc.id in
				<foreach collection="categoryIds" index="index" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
            </when> 
            <otherwise>  
               and gsc.id = ''
            </otherwise>
        </choose>
		<!-- 0 价格从高到低  1 排序值从高到低 2 价格从低到高  3排序值从低到高  -->
		<if test="sortType == 0">
			<if test="sort != null">
				and gs.online_price &gt;= #{sort}
			</if>
			order by gs.online_price DESC
		</if>
		<if test="sortType == 1">
			<if test="sort != null">
				and gs.sort &gt;= #{sort}
			</if>
			order by gs.sort DESC
		</if>
		<if test="sortType == 2">
			<if test="sort != null">
				and gs.online_price &gt;= #{sort}
			</if>
			order by gs.online_price ASC
		</if>
		<if test="sortType == 3">
			<if test="sort != null">
				and gs.sort &gt;= #{sort}
			</if>
			order by gs.sort ASC
		</if>
		<if test="template != null">
			limit #{template} 
		</if>
	</select>
	
	<select id="getGoodsOfStoreLabelField" resultMap="fieldContentMap">
		select gs.store_id, si.logo_url, si.store_name, sb.type as branchesType,
			CASE si.type 
			WHEN 2 THEN (
					CASE sb.type 
					WHEN 3 THEN '自营店' 
					WHEN 4 THEN '加盟店'
					WHEN 5 THEN '合作店'
					ELSE '' END
			) ELSE '合作商家' END AS branchesName,
			gs.id as goodsId, gs.id as pointContent,g.sale_stock,g.sale_price as lowPrice,
			gs.`name`,gs.alias,gs.tag_type,gs.type as sku_type,0 pointType, p.url as newUrl, 
			gs.online_price, gs.market_price, gs.properties_indb,gs.trade_max,gs.update_time,
		    case gs.activity_type when 5 THEN  1 else 0 end as isLowPrice,
			case gs.activity_type when 2 THEN 1 else 0 end as isPrivliege,		
		    case gs.activity_type when 5 THEN  g.trade_max else '' end as lowPriceUpper,
			case gs.activity_type when 2 THEN g.trade_max else '' end as limitNum
		from goods_store_label sl 
		left join goods_store_label_goods lg on sl.id=lg.label_id
		left join goods_store_sku gs on lg.goods_store_sku_id=gs.id
		left join activity_sale_goods g on gs.id=g.store_sku_id and g.sale_id = gs.activity_id
		left join store_info si on gs.store_id = si.id
		left join store_branches sb on si.id=sb.id
		left join goods_store_sku_picture p on p.store_sku_id=gs.id and p.type = 1
		where sl.disabled=0 
		and sl.store_id= #{storeId}
		and sl.id = #{labelId}
		and gs.disabled=0
		and gs.online = 1
		and gs.status = 1 
		and gs.violation = 0
		<if test="sortType == 0">
			<if test="sort != null">
				and gs.online_price &gt;= #{sort}
			</if>
			order by gs.online_price DESC
		</if>
		<if test="sortType == 1">
			<if test="sort != null">
				and gs.sort &gt;= #{sort}
			</if>
			order by gs.sort DESC
		</if>
		<if test="sortType == 2">
			<if test="sort != null">
				and gs.online_price &gt;= #{sort}
			</if>
			order by gs.online_price ASC
		</if>
		<if test="sortType == 3">
			<if test="sort != null">
				and gs.sort &gt;= #{sort}
			</if>
			order by gs.sort ASC
		</if>
		<if test="template != null">
			limit #{template} 
		</if>
	</select>

	<!-- add by mengsj begin 初始化店铺运营栏位内容 -->
	<insert id="initOperationFieldContext" parameterType="string">
		INSERT INTO column_operate_fields_content (
			id,
			field_id,
			type,
			image_url,
			title,
			link_url,
			business_type,
			business_id,
			sort_type,
			sort
		) SELECT
			REPLACE (UUID(), '-', '') AS id,
			bb.id field_id,
			aa.type,
			aa.image_url,
			aa.title,
			aa.link_url,
			aa.business_type,
			aa.business_id,
			aa.sort_type,
			aa.sort
		FROM
			(
				SELECT
					bb.type,
					bb.image_url,
					bb.title,
					bb.link_url,
					bb.business_type,
					bb.business_id,
					bb.sort_type,
					bb.sort,
					aa.name,
					aa.create_time
				FROM
					column_operate_fields aa
				INNER JOIN column_operate_fields_content bb ON aa.id = bb.field_id
				WHERE
					aa.type = 1
				AND aa.business_id = '0'	
			) aa
		INNER JOIN column_operate_fields bb ON (
			bb.type = 2
			AND bb.name = aa.name
			AND aa.create_time = bb.create_time
		) WHERE bb.business_id = #{storeId,jdbcType=VARCHAR}
	</insert>
	<!-- add by mengsj end 初始化店铺运营栏位内容 -->
	
</mapper>